[
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_1",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500 ",
        "Source Data Description": "DT_STRATA represents date. DOW is in the type of Text. PCT_HOURLY_0100 and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/16        H        .001222017108240        .001274017836250        .001131015834222        .001222017108240        .001222017108240        .001261017654247        .001144016016224        .001170016380229        .001170016380229        .001209016926237        .001183016562232        .001235017290242        .001157016198227        .001001014014196        .001014014196199        .001144016016224        .001209016926237        .001547021658303        .001560021840306        .001534021476301        .001573022022308        .001573022022308        .001326018564260        .001170016380229        .000000000000000\n1/2/16        7        .001313018382257        .001248017472245        .001222017108240        .001196016744234        .001196016744234        .001287018018252        .001300018200255        .001339018746262        .001352018928265        .001404019656275        .001417019838278        .001326018564260        .001313018382257        .001352018928265        .001339018746262        .001391019474273        .001404019656275        .001495020930293        .001521021294298        .001508021112296        .001534021476301        .001534021476301        .001469020566288        .001339018746262        .000000000000000\n1/3/16        1        .001157016198227        .001092015288214        .001053014742206        .001040014560204        .001040014560204        .001066014924209        .001053014742206        .001144016016224        .001183016562232        .001248017472245        .001326018564260        .001404019656275        .001313018382257        .001300018200255        .001313018382257        .001261017654247        .001261017654247        .001430020020280        .001469020566288        .001404019656275        .001456020384285        .001378019292270        .001287018018252        .001222017108240        .000000000000000\n1/4/16        2        .001105015470217        .001053014742206        .001001014014196        .000975013650191        .001053014742206        .001079015106211        .001183016562232        .001170016380229        .001274017836250        .001170016380229        .001157016198227        .001196016744234        .001196016744234        .001144016016224        .001170016380229        .001261017654247        .001300018200255        .001495020930293        .001586022204311        .001651023114324        .001651023114324        .001521021294298        .001417019838278        .001274017836250        .000000000000000\n1/5/16        3        .001183016562232        .001170016380229        .001079015106211        .001131015834222        .001170016380229        .001183016562232        .001300018200255        .001365019110268        .001404019656275        .001378019292270        .001352018928265        .001326018564260        .001365019110268        .001339018746262        .001300018200255        .001313018382257        .001404019656275        .001638022932321        .001716024024336        .001677023478329        .001625022750319        .001638022932321        .001573022022308        .001417019838278        .000000000000000\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_1_Valid;  CREATE TABLE Target1_1_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_1_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(DT_STRATA, 'Dy') || ' ' || TO_CHAR(DT_STRATA, 'MM/DD/YYYY') AS CST,\n    PCT_HOURLY_0100,\n    PCT_HOURLY_0200,\n    PCT_HOURLY_0300,\n    PCT_HOURLY_0400,\n    PCT_HOURLY_0500,\n    PCT_HOURLY_0600,\n    PCT_HOURLY_0700,\n    PCT_HOURLY_0800,\n    PCT_HOURLY_0900,\n    PCT_HOURLY_1000,\n    PCT_HOURLY_1100,\n    PCT_HOURLY_1200,\n    PCT_HOURLY_1300,\n    PCT_HOURLY_1400,\n    PCT_HOURLY_1500,\n    PCT_HOURLY_1600,\n    PCT_HOURLY_1700,\n    PCT_HOURLY_1800,\n    PCT_HOURLY_1900,\n    PCT_HOURLY_2000,\n    PCT_HOURLY_2100,\n    PCT_HOURLY_2200,\n    PCT_HOURLY_2300,\n    PCT_HOURLY_2400\nFROM Source1_1;\n",
        "Prompt-3 Results": 0.96,
        "Prompt-2 Results": 0.96,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_2",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_2_Valid;  CREATE TABLE Target1_2_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_2_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    value1, value2, value3, value4, value5,value6, value7, value8, value9, value10,value11, value12, value13, value14, value15,value16, value17, value18, value19, value20,value21, value22, value23, value24\nFROM Source1_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_3",
        "Source Data Schema": "Date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": "DSL should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_3_Valid;  CREATE TABLE Target1_3_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_3_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\",\"6:00 AM\",\"7:00 AM\",\"8:00 AM\",\"9:00 AM\",\"10:00 AM\",\n        \"11:00 AM\",\"12:00 AM\",\"1:00 PM\",\"2:00 PM\",\"3:00 PM\",\"4:00 PM\",\"5:00 PM\",\"6:00 PM\",\"7:00 PM\",\"8:00 PM\",\n        \"9:00 PM\",\"10:00 PM\",\"11:00 PM\",\"12:00 PM\"\nFROM Source1_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_4",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/13        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/13        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/13        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/13        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/13        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_4_Valid;  CREATE TABLE Target1_4_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_4_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(Date, 'Dy') || ' ' || TO_CHAR(Date, 'MM/DD/YYYY') AS CST,\n    \"1\", \"2\", \"3\", \"4\", \"5\",\"6\", \"7\", \"8\", \"9\", \"10\",\"11\", \"12\", \"13\", \"14\", \"15\",\"16\", \"17\", \"18\", \"19\", \"20\",\"21\", \"22\", \"23\", \"24\"\nFROM Source1_4;\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_5",
        "Source Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_5_Valid;  CREATE TABLE Target1_5_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_5_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\",\"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\",\"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\",\"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\",\"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM Source1_5;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_6",
        "Source Data Schema": "Company Rate Rate Code Date Hr1 Hr2 Hr3 Hr4 Hr5 Hr6 Hr7 Hr8 Hr9 Hr10 Hr11 Hr12 Hr13 Hr14 Hr15 Hr16 Hr17 Hr18 Hr19 Hr20 Hr21 Hr22 Hr23 Hr24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Boston Edison        G1        A9/B1        1/1/14        0.91880        0.90204        0.90953        0.89743        0.90784        0.91352        0.90426        0.84936        0.83371        0.88786        0.86311        0.93132        0.91851        0.84487        0.87496        0.84075        0.98534        1.02454        0.98755        0.99935        0.98452        0.96688        0.95505        0.91513\nBoston Edison        G1        A9/B1        1/2/14        0.87892        0.88134        0.87665        0.90858        0.91542        0.92161        0.93303        1.01043        1.14976        1.25251        1.28495        1.34673        1.31238        1.30880        1.30000        1.19045        1.16443        1.17685        1.12458        1.05529        0.98511        0.96193        0.96526        0.97122\nBoston Edison        G1        A9/B1        1/3/14        0.93044        0.92009        0.92011        0.93063        0.93666        0.94961        0.93255        0.91908        0.91562        0.96811        1.00253        1.06153        1.19003        1.19289        1.22758        1.21124        1.20832        1.22837        1.17335        1.17034        1.09601        1.08531        1.06987        1.00114\nBoston Edison        G1        A9/B1        1/4/14        0.99430        0.99976        1.00380        1.01784        1.03292        1.01593        1.03356        1.01903        1.12290        1.19339        1.23023        1.24012        1.24816        1.30648        1.21167        1.11098        1.18366        1.18973        1.15116        1.10983        1.05467        1.01286        1.03867        1.02930\nBoston Edison        G1        A9/B1        1/5/14        0.96557        0.95280        0.91880        0.91824        0.91423        0.92391        0.90871        0.87327        0.87996        0.91213        0.94840        0.91633        0.88302        0.92150        1.04565        0.96922        1.03708        1.03603        1.05365        1.03192        0.99591        0.95368        0.93241        0.93497\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_6_Valid;  CREATE TABLE Target1_6_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_6_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    Hr1, Hr2, Hr3, Hr4, Hr5, Hr6, Hr7, Hr8, Hr9, Hr10, Hr11, Hr12, Hr13, Hr14, Hr15, Hr16, Hr17, Hr18, Hr19, Hr20, Hr21, Hr22, Hr23, Hr24\nFROM Source1_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_7",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "Schema Change Hints": "CST in target table maps to Date in source table.",
        "5 Samples of Source Data": "RS6        Wed 01/01/2003        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        Thu 01/02/2003        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        Fri 01/03/2003        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        Sat 01/04/2003        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        Sun 01/05/2003        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_7_Valid;  CREATE TABLE Target1_7_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_7_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\") SELECT  Date, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\" FROM Source1_7;",
        "Prompt-3 Results": 0.96,
        "Prompt-2 Results": 0.96,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_8",
        "Source Data Schema": "datetime TIMESTAMP, cerc_logger_1 Numeric",
        "Source Data Description": "The datetime attribute contains one timestamp for every 10 minutes. The cerc_logger_1 value is the total load value during the corresponding 10 minutes. ",
        "Schema Change Hints": "Use aggregation",
        "5 Samples of Source Data": "2/22/2018 0:30        22.875\n2/22/2018 0:40        22.937\n2/22/2018 0:50        22.937\n2/22/2018 1:00        22.937\n2/22/2018 1:10        23",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_8_Valid;  CREATE TABLE Target1_8_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_8_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(datetime, 'Dy MM/DD/YYYY') AS CST,\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN cerc_logger_1 END), 0) AS \"1:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN cerc_logger_1 END), 0) AS \"2:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN cerc_logger_1 END), 0) AS \"3:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN cerc_logger_1 END), 0) AS \"4:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN cerc_logger_1 END), 0) AS \"5:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN cerc_logger_1 END), 0) AS \"6:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN cerc_logger_1 END), 0) AS \"7:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN cerc_logger_1 END), 0) AS \"8:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN cerc_logger_1 END), 0) AS \"9:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN cerc_logger_1 END), 0) AS \"10:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN cerc_logger_1 END), 0) AS \"11:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN cerc_logger_1 END), 0) AS \"12:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN cerc_logger_1 END), 0) AS \"13:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN cerc_logger_1 END), 0) AS \"14:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN cerc_logger_1 END), 0) AS \"15:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN cerc_logger_1 END), 0) AS \"16:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN cerc_logger_1 END), 0) AS \"17:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN cerc_logger_1 END), 0) AS \"18:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN cerc_logger_1 END), 0) AS \"19:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN cerc_logger_1 END), 0) AS \"20:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN cerc_logger_1 END), 0) AS \"21:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN cerc_logger_1 END), 0) AS \"22:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN cerc_logger_1 END), 0) AS \"23:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN cerc_logger_1 END), 0) AS \"24:00\"\nFROM Source1_8\nGROUP BY TO_CHAR(datetime, 'Dy MM/DD/YYYY');\n\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_9",
        "Source Data Schema": "datetime TIMESTAMP, zone_16 Numeric",
        "Source Data Description": "The datetime attribute contains one timestamp for every 1 minutes. The zone_16 value is the total load value during the corresponding 1 minutes. ",
        "Schema Change Hints": "Use aggregation",
        "5 Samples of Source Data": "1/1/2018 0:00        67.9\n1/1/2018 0:01        67.9\n1/1/2018 0:02        67.9\n1/1/2018 0:03        67.9\n1/1/2018 0:04        67.9",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_9_Valid;  CREATE TABLE Target1_9_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_9_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n     TO_CHAR(datetime, 'Dy MM/DD/YYYY') AS CST,\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN zone_16 END), 0) AS \"1:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN zone_16 END), 0) AS \"2:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN zone_16 END), 0) AS \"3:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN zone_16 END), 0) AS \"4:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN zone_16 END), 0) AS \"5:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN zone_16 END), 0) AS \"6:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN zone_16 END), 0) AS \"7:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN zone_16 END), 0) AS \"8:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN zone_16 END), 0) AS \"9:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN zone_16 END), 0) AS \"10:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN zone_16 END), 0) AS \"11:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN zone_16 END), 0) AS \"12:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN zone_16 END), 0) AS \"13:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN zone_16 END), 0) AS \"14:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN zone_16 END), 0) AS \"15:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN zone_16 END), 0) AS \"16:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN zone_16 END), 0) AS \"17:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN zone_16 END), 0) AS \"18:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN zone_16 END), 0) AS \"19:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN zone_16 END), 0) AS \"20:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN zone_16 END), 0) AS \"21:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN zone_16 END), 0) AS \"22:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN zone_16 END), 0) AS \"23:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN zone_16 END), 0) AS \"24:00\"\nFROM Source1_9\nGROUP BY TO_CHAR(datetime, 'Dy MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_10",
        "Source Data Schema": "datetime TIMESTAMP, zone_16_cooling_sp Numeric",
        "Source Data Description": "The datetime attribute contains one timestamp for every 5 minutes. The zone_016_cooling_sp value is the total load value during the corresponding 5 minutes.",
        "Schema Change Hints": "Use aggregation",
        "5 Samples of Source Data": "9/15/2018 09:55        72\n9/15/2018 10:00        75\n9/15/2018 10:05        73\n9/15/2018 10:10        72\n9/15/2018 10:15        73",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_10_Valid;  CREATE TABLE Target1_10_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_10_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n     TO_CHAR(datetime, 'Dy MM/DD/YYYY') AS CST,\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN zone_16_cooling_sp END), 0) AS \"1:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN zone_16_cooling_sp END), 0) AS \"2:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN zone_16_cooling_sp END), 0) AS \"3:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN zone_16_cooling_sp END), 0) AS \"4:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN zone_16_cooling_sp END), 0) AS \"5:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN zone_16_cooling_sp END), 0) AS \"6:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN zone_16_cooling_sp END), 0) AS \"7:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN zone_16_cooling_sp END), 0) AS \"8:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN zone_16_cooling_sp END), 0) AS \"9:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN zone_16_cooling_sp END), 0) AS \"10:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN zone_16_cooling_sp END), 0) AS \"11:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN zone_16_cooling_sp END), 0) AS \"12:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN zone_16_cooling_sp END), 0) AS \"13:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN zone_16_cooling_sp END), 0) AS \"14:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN zone_16_cooling_sp END), 0) AS \"15:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN zone_16_cooling_sp END), 0) AS \"16:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN zone_16_cooling_sp END), 0) AS \"17:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN zone_16_cooling_sp END), 0) AS \"18:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN zone_16_cooling_sp END), 0) AS \"19:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN zone_16_cooling_sp END), 0) AS \"20:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN zone_16_cooling_sp END), 0) AS \"21:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN zone_16_cooling_sp END), 0) AS \"22:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN zone_16_cooling_sp END), 0) AS \"23:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN zone_16_cooling_sp END), 0) AS \"24:00\"\nFROM Source1_10\nGroup By TO_CHAR(datetime, 'Dy MM/DD/YYYY');\n",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_1",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format. Attribute 1:00 to 24:00:00 records the hourly load values in the corresponding hour.",
        "Schema Change Hints": "Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "Wed 04/01/2009        1.020        0.960        0.960        0.940        1.000        1.100        1.210        1.230        1.150        1.120        1.160        1.080        1.030        1.030        1.050        1.050        1.080        1.170        1.220        1.370        1.410        1.350        1.220        1.030\nThu 04/02/2009        0.930        0.870        0.860        0.870        0.920        1.030        1.130        1.170        1.140        1.110        1.120        1.080        0.990        1.010        1.040        1.080        1.170        1.270        1.330        1.460        1.450        1.420        1.220        1.100\nFri 04/03/2009        0.980        0.970        0.950        0.930        0.960        1.070        1.170        1.180        1.190        1.140        1.140        1.110        1.010        0.980        0.980        1.020        1.060        1.090        1.120        1.220        1.330        1.310        1.230        1.120\nSat 04/04/2009        1.030        0.950        0.920        0.930        0.930        0.980        1.070        1.150        1.200        1.260        1.170        1.150        1.130        1.100        1.070        1.090        1.060        1.110        1.150        1.250        1.330        1.300        1.200        1.090\nSun 04/05/2009        0.990        0.960        0.930        0.910        0.910        0.940        1.040        1.160        1.220        1.230        1.220        1.230        1.260        1.290        1.320        1.400        1.450        1.590        1.630        1.660        1.650        1.510        1.320        1.140",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target2_1_Valid;\n\nCREATE TABLE Target2_1_Valid (\n    DT_STRATA TEXT,\n    DOW INTEGER,\n    PCT_HOURLY_0100 NUMERIC,\n    PCT_HOURLY_0200 NUMERIC,\n    PCT_HOURLY_0300 NUMERIC,\n    PCT_HOURLY_0400 NUMERIC,\n    PCT_HOURLY_0500 NUMERIC,\n    PCT_HOURLY_0600 NUMERIC,\n    PCT_HOURLY_0700 NUMERIC,\n    PCT_HOURLY_0800 NUMERIC,\n    PCT_HOURLY_0900 NUMERIC,\n    PCT_HOURLY_1000 NUMERIC,\n    PCT_HOURLY_1100 NUMERIC,\n    PCT_HOURLY_1200 NUMERIC,\n    PCT_HOURLY_1300 NUMERIC,\n    PCT_HOURLY_1400 NUMERIC,\n    PCT_HOURLY_1500 NUMERIC,\n    PCT_HOURLY_1600 NUMERIC,\n    PCT_HOURLY_1700 NUMERIC,\n    PCT_HOURLY_1800 NUMERIC,\n    PCT_HOURLY_1900 NUMERIC,\n    PCT_HOURLY_2000 NUMERIC,\n    PCT_HOURLY_2100 NUMERIC,\n    PCT_HOURLY_2200 NUMERIC,\n    PCT_HOURLY_2300 NUMERIC,\n    PCT_HOURLY_2400 NUMERIC,\n    PCT_HOURLY_2500 NUMERIC\n);\n\nINSERT INTO Target2_1_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400, PCT_HOURLY_2500)\nSELECT \n    SUBSTRING(CST, 5, 10) AS DT_STRATA,\n    CASE \n        WHEN SUBSTRING(CST, 1, 3) = 'Mon' THEN 1\n        WHEN SUBSTRING(CST, 1, 3) = 'Tue' THEN 2\n        WHEN SUBSTRING(CST, 1, 3) = 'Wed' THEN 3\n        WHEN SUBSTRING(CST, 1, 3) = 'Thu' THEN 4\n        WHEN SUBSTRING(CST, 1, 3) = 'Fri' THEN 5\n        WHEN SUBSTRING(CST, 1, 3) = 'Sat' THEN 6\n        WHEN SUBSTRING(CST, 1, 3) = 'Sun' THEN 7\n    END AS DOW,\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\", 0\nFROM Source2_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_2",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": "uom should be ignored during transformation.",
        "Schema Change Hints": "Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target2_2_Valid;\n\nCREATE TABLE Target2_2_Valid (\n    DT_STRATA DATE,\n    DOW INTEGER,\n    PCT_HOURLY_0100 NUMERIC,\n    PCT_HOURLY_0200 NUMERIC,\n    PCT_HOURLY_0300 NUMERIC,\n    PCT_HOURLY_0400 NUMERIC,\n    PCT_HOURLY_0500 NUMERIC,\n    PCT_HOURLY_0600 NUMERIC,\n    PCT_HOURLY_0700 NUMERIC,\n    PCT_HOURLY_0800 NUMERIC,\n    PCT_HOURLY_0900 NUMERIC,\n    PCT_HOURLY_1000 NUMERIC,\n    PCT_HOURLY_1100 NUMERIC,\n    PCT_HOURLY_1200 NUMERIC,\n    PCT_HOURLY_1300 NUMERIC,\n    PCT_HOURLY_1400 NUMERIC,\n    PCT_HOURLY_1500 NUMERIC,\n    PCT_HOURLY_1600 NUMERIC,\n    PCT_HOURLY_1700 NUMERIC,\n    PCT_HOURLY_1800 NUMERIC,\n    PCT_HOURLY_1900 NUMERIC,\n    PCT_HOURLY_2000 NUMERIC,\n    PCT_HOURLY_2100 NUMERIC,\n    PCT_HOURLY_2200 NUMERIC,\n    PCT_HOURLY_2300 NUMERIC,\n    PCT_HOURLY_2400 NUMERIC,\n    PCT_HOURLY_2500 NUMERIC\n);\n\nINSERT INTO Target2_2_Valid (\n    DT_STRATA,\n    DOW,\n    PCT_HOURLY_0100,\n    PCT_HOURLY_0200,\n    PCT_HOURLY_0300,\n    PCT_HOURLY_0400,\n    PCT_HOURLY_0500,\n    PCT_HOURLY_0600,\n    PCT_HOURLY_0700,\n    PCT_HOURLY_0800,\n    PCT_HOURLY_0900,\n    PCT_HOURLY_1000,\n    PCT_HOURLY_1100,\n    PCT_HOURLY_1200,\n    PCT_HOURLY_1300,\n    PCT_HOURLY_1400,\n    PCT_HOURLY_1500,\n    PCT_HOURLY_1600,\n    PCT_HOURLY_1700,\n    PCT_HOURLY_1800,\n    PCT_HOURLY_1900,\n    PCT_HOURLY_2000,\n    PCT_HOURLY_2100,\n    PCT_HOURLY_2200,\n    PCT_HOURLY_2300,\n    PCT_HOURLY_2400,\n    PCT_HOURLY_2500\n)\nSELECT\n    date AS DT_STRATA,\n    EXTRACT(DOW FROM date) AS DOW,\n    value1 AS PCT_HOURLY_0100,\n    value2 AS PCT_HOURLY_0200,\n    value3 AS PCT_HOURLY_0300,\n    value4 AS PCT_HOURLY_0400,\n    value5 AS PCT_HOURLY_0500,\n    value6 AS PCT_HOURLY_0600,\n    value7 AS PCT_HOURLY_0700,\n    value8 AS PCT_HOURLY_0800,\n    value9 AS PCT_HOURLY_0900,\n    value10 AS PCT_HOURLY_1000,\n    value11 AS PCT_HOURLY_1100,\n    value12 AS PCT_HOURLY_1200,\n    value13 AS PCT_HOURLY_1300,\n    value14 AS PCT_HOURLY_1400,\n    value15 AS PCT_HOURLY_1500,\n    value16 AS PCT_HOURLY_1600,\n    value17 AS PCT_HOURLY_1700,\n    value18 AS PCT_HOURLY_1800,\n    value19 AS PCT_HOURLY_1900,\n    value20 AS PCT_HOURLY_2000,\n    value21 AS PCT_HOURLY_2100,\n    value22 AS PCT_HOURLY_2200,\n    value23 AS PCT_HOURLY_2300,\n    value24 AS PCT_HOURLY_2400,\n    0 AS PCT_HOURLY_2500\nFROM Source2_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_3",
        "Source Data Schema": "Date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": "The Date column is in text type. DSL should be ignored during transformation.",
        "Schema Change Hints": "Date in the source table corresponds to DT_STRATA in the target table. Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target2_3_Valid;\n\nCREATE TABLE Target2_3_Valid (\n    \"DT_STRATA\" DATE,\n    \"DOW\" INTEGER,\n    \"PCT_HOURLY_0100\" NUMERIC,\n    \"PCT_HOURLY_0200\" NUMERIC,\n    \"PCT_HOURLY_0300\" NUMERIC,\n    \"PCT_HOURLY_0400\" NUMERIC,\n    \"PCT_HOURLY_0500\" NUMERIC,\n    \"PCT_HOURLY_0600\" NUMERIC,\n    \"PCT_HOURLY_0700\" NUMERIC,\n    \"PCT_HOURLY_0800\" NUMERIC,\n    \"PCT_HOURLY_0900\" NUMERIC,\n    \"PCT_HOURLY_1000\" NUMERIC,\n    \"PCT_HOURLY_1100\" NUMERIC,\n    \"PCT_HOURLY_1200\" NUMERIC,\n    \"PCT_HOURLY_1300\" NUMERIC,\n    \"PCT_HOURLY_1400\" NUMERIC,\n    \"PCT_HOURLY_1500\" NUMERIC,\n    \"PCT_HOURLY_1600\" NUMERIC,\n    \"PCT_HOURLY_1700\" NUMERIC,\n    \"PCT_HOURLY_1800\" NUMERIC,\n    \"PCT_HOURLY_1900\" NUMERIC,\n    \"PCT_HOURLY_2000\" NUMERIC,\n    \"PCT_HOURLY_2100\" NUMERIC,\n    \"PCT_HOURLY_2200\" NUMERIC,\n    \"PCT_HOURLY_2300\" NUMERIC,\n    \"PCT_HOURLY_2400\" NUMERIC,\n    \"PCT_HOURLY_2500\" NUMERIC\n);\n\nINSERT INTO Target2_3_Valid (\"DT_STRATA\", \"DOW\", \"PCT_HOURLY_0100\", \"PCT_HOURLY_0200\", \"PCT_HOURLY_0300\", \"PCT_HOURLY_0400\", \"PCT_HOURLY_0500\", \"PCT_HOURLY_0600\", \"PCT_HOURLY_0700\", \"PCT_HOURLY_0800\", \"PCT_HOURLY_0900\", \"PCT_HOURLY_1000\", \"PCT_HOURLY_1100\", \"PCT_HOURLY_1200\", \"PCT_HOURLY_1300\", \"PCT_HOURLY_1400\", \"PCT_HOURLY_1500\", \"PCT_HOURLY_1600\", \"PCT_HOURLY_1700\", \"PCT_HOURLY_1800\", \"PCT_HOURLY_1900\", \"PCT_HOURLY_2000\", \"PCT_HOURLY_2100\", \"PCT_HOURLY_2200\", \"PCT_HOURLY_2300\", \"PCT_HOURLY_2400\")\nSELECT \n    TO_DATE(\"Date\", 'MM/DD/YY') AS \"DT_STRATA\",\n    EXTRACT(DOW FROM TO_DATE(\"Date\", 'MM/DD/YY')) AS \"DOW\",\n    \"1:00 AM\" AS \"PCT_HOURLY_0100\",\n    \"2:00 AM\" AS \"PCT_HOURLY_0200\",\n    \"3:00 AM\" AS \"PCT_HOURLY_0300\",\n    \"4:00 AM\" AS \"PCT_HOURLY_0400\",\n    \"5:00 AM\" AS \"PCT_HOURLY_0500\",\n    \"6:00 AM\" AS \"PCT_HOURLY_0600\",\n    \"7:00 AM\" AS \"PCT_HOURLY_0700\",\n    \"8:00 AM\" AS \"PCT_HOURLY_0800\",\n    \"9:00 AM\" AS \"PCT_HOURLY_0900\",\n    \"10:00 AM\" AS \"PCT_HOURLY_1000\",\n    \"11:00 AM\" AS \"PCT_HOURLY_1100\",\n    \"12:00 AM\" AS \"PCT_HOURLY_1200\",\n    \"1:00 PM\" AS \"PCT_HOURLY_1300\",\n    \"2:00 PM\" AS \"PCT_HOURLY_1400\",\n    \"3:00 PM\" AS \"PCT_HOURLY_1500\",\n    \"4:00 PM\" AS \"PCT_HOURLY_1600\",\n    \"5:00 PM\" AS \"PCT_HOURLY_1700\",\n    \"6:00 PM\" AS \"PCT_HOURLY_1800\",\n    \"7:00 PM\" AS \"PCT_HOURLY_1900\",\n    \"8:00 PM\" AS \"PCT_HOURLY_2000\",\n    \"9:00 PM\" AS \"PCT_HOURLY_2100\",\n    \"10:00 PM\" AS \"PCT_HOURLY_2200\",\n    \"11:00 PM\" AS \"PCT_HOURLY_2300\",\n    0 AS \"PCT_HOURLY_2400\"\nFROM Source2_3;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_4",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": "The Date column is in the text type. ",
        "Schema Change Hints": "Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "1/1/13        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/13        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/13        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/13        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/13        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target2_4_Valid;\n\nCREATE TABLE Target2_4_Valid (\n    DT_STRATA DATE,\n    DOW INTEGER,\n    PCT_HOURLY_0100 FLOAT,\n    PCT_HOURLY_0200 FLOAT,\n    PCT_HOURLY_0300 FLOAT,\n    PCT_HOURLY_0400 FLOAT,\n    PCT_HOURLY_0500 FLOAT,\n    PCT_HOURLY_0600 FLOAT,\n    PCT_HOURLY_0700 FLOAT,\n    PCT_HOURLY_0800 FLOAT,\n    PCT_HOURLY_0900 FLOAT,\n    PCT_HOURLY_1000 FLOAT,\n    PCT_HOURLY_1100 FLOAT,\n    PCT_HOURLY_1200 FLOAT,\n    PCT_HOURLY_1300 FLOAT,\n    PCT_HOURLY_1400 FLOAT,\n    PCT_HOURLY_1500 FLOAT,\n    PCT_HOURLY_1600 FLOAT,\n    PCT_HOURLY_1700 FLOAT,\n    PCT_HOURLY_1800 FLOAT,\n    PCT_HOURLY_1900 FLOAT,\n    PCT_HOURLY_2000 FLOAT,\n    PCT_HOURLY_2100 FLOAT,\n    PCT_HOURLY_2200 FLOAT,\n    PCT_HOURLY_2300 FLOAT,\n    PCT_HOURLY_2400 FLOAT,\n    PCT_HOURLY_2500 FLOAT\n);\n\n-- Insert rows from the first table into the second table\nINSERT INTO Target2_4_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT\n    TO_DATE(Date, 'MM/DD/YY'),\n    EXTRACT(DOW FROM TO_DATE(Date, 'MM/DD/YY')),\n    Profile1,\n    Profile2,\n    Profile3,\n    Profile4,\n    Profile5,\n    Profile6,\n    Profile7,\n    Profile8,\n    Profile9,\n    Profile10,\n    Profile11,\n    Profile12,\n    Profile13,\n    Profile14,\n    Profile15,\n    Profile16,\n    Profile17,\n    Profile18,\n    Profile19,\n    Profile20,\n    Profile21,\n    Profile22,\n    Profile23,\n    Profile24\nFROM Source2_4;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_5",
        "Source Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": "The date column is in the text type. ",
        "Schema Change Hints": "Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target2_5_Valid;\n\nCREATE TABLE Target2_5_Valid (\n    DT_STRATA TEXT,\n    DOW INTEGER,\n    PCT_HOURLY_0100 NUMERIC,\n    PCT_HOURLY_0200 NUMERIC,\n    PCT_HOURLY_0300 NUMERIC,\n    PCT_HOURLY_0400 NUMERIC,\n    PCT_HOURLY_0500 NUMERIC,\n    PCT_HOURLY_0600 NUMERIC,\n    PCT_HOURLY_0700 NUMERIC,\n    PCT_HOURLY_0800 NUMERIC,\n    PCT_HOURLY_0900 NUMERIC,\n    PCT_HOURLY_1000 NUMERIC,\n    PCT_HOURLY_1100 NUMERIC,\n    PCT_HOURLY_1200 NUMERIC,\n    PCT_HOURLY_1300 NUMERIC,\n    PCT_HOURLY_1400 NUMERIC,\n    PCT_HOURLY_1500 NUMERIC,\n    PCT_HOURLY_1600 NUMERIC,\n    PCT_HOURLY_1700 NUMERIC,\n    PCT_HOURLY_1800 NUMERIC,\n    PCT_HOURLY_1900 NUMERIC,\n    PCT_HOURLY_2000 NUMERIC,\n    PCT_HOURLY_2100 NUMERIC,\n    PCT_HOURLY_2200 NUMERIC,\n    PCT_HOURLY_2300 NUMERIC,\n    PCT_HOURLY_2400 NUMERIC,\n    PCT_HOURLY_2500 NUMERIC\n);\n\n\nINSERT INTO Target2_5_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT date, EXTRACT(DOW FROM TO_DATE(date, 'MM/DD/YY')), \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM Source2_5;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_6",
        "Source Data Schema": "Company Rate Rate Code Date Hr1 Hr2 Hr3 Hr4 Hr5 Hr6 Hr7 Hr8 Hr9 Hr10 Hr11 Hr12 Hr13 Hr14 Hr15 Hr16 Hr17 Hr18 Hr19 Hr20 Hr21 Hr22 Hr23 Hr24",
        "Source Data Description": "The Date column is in the text type. ",
        "Schema Change Hints": "Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "Boston Edison        G1        A9/B1        1/1/14        0.91880        0.90204        0.90953        0.89743        0.90784        0.91352        0.90426        0.84936        0.83371        0.88786        0.86311        0.93132        0.91851        0.84487        0.87496        0.84075        0.98534        1.02454        0.98755        0.99935        0.98452        0.96688        0.95505        0.91513\nBoston Edison        G1        A9/B1        1/2/14        0.87892        0.88134        0.87665        0.90858        0.91542        0.92161        0.93303        1.01043        1.14976        1.25251        1.28495        1.34673        1.31238        1.30880        1.30000        1.19045        1.16443        1.17685        1.12458        1.05529        0.98511        0.96193        0.96526        0.97122\nBoston Edison        G1        A9/B1        1/3/14        0.93044        0.92009        0.92011        0.93063        0.93666        0.94961        0.93255        0.91908        0.91562        0.96811        1.00253        1.06153        1.19003        1.19289        1.22758        1.21124        1.20832        1.22837        1.17335        1.17034        1.09601        1.08531        1.06987        1.00114\nBoston Edison        G1        A9/B1        1/4/14        0.99430        0.99976        1.00380        1.01784        1.03292        1.01593        1.03356        1.01903        1.12290        1.19339        1.23023        1.24012        1.24816        1.30648        1.21167        1.11098        1.18366        1.18973        1.15116        1.10983        1.05467        1.01286        1.03867        1.02930\nBoston Edison        G1        A9/B1        1/5/14        0.96557        0.95280        0.91880        0.91824        0.91423        0.92391        0.90871        0.87327        0.87996        0.91213        0.94840        0.91633        0.88302        0.92150        1.04565        0.96922        1.03708        1.03603        1.05365        1.03192        0.99591        0.95368        0.93241        0.93497\n",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target2_6_Valid;\n\nCREATE TABLE Target2_6_Valid (\n    DT_STRATA DATE,\n    DOW INTEGER,\n    PCT_HOURLY_0100 FLOAT,\n    PCT_HOURLY_0200 FLOAT,\n    PCT_HOURLY_0300 FLOAT,\n    PCT_HOURLY_0400 FLOAT,\n    PCT_HOURLY_0500 FLOAT,\n    PCT_HOURLY_0600 FLOAT,\n    PCT_HOURLY_0700 FLOAT,\n    PCT_HOURLY_0800 FLOAT,\n    PCT_HOURLY_0900 FLOAT,\n    PCT_HOURLY_1000 FLOAT,\n    PCT_HOURLY_1100 FLOAT,\n    PCT_HOURLY_1200 FLOAT,\n    PCT_HOURLY_1300 FLOAT,\n    PCT_HOURLY_1400 FLOAT,\n    PCT_HOURLY_1500 FLOAT,\n    PCT_HOURLY_1600 FLOAT,\n    PCT_HOURLY_1700 FLOAT,\n    PCT_HOURLY_1800 FLOAT,\n    PCT_HOURLY_1900 FLOAT,\n    PCT_HOURLY_2000 FLOAT,\n    PCT_HOURLY_2100 FLOAT,\n    PCT_HOURLY_2200 FLOAT,\n    PCT_HOURLY_2300 FLOAT,\n    PCT_HOURLY_2400 FLOAT,\n    PCT_HOURLY_2500 FLOAT\n);\n\nINSERT INTO Target2_6_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400, PCT_HOURLY_2500)\nSELECT\n    TO_DATE(Date, 'MM/DD/YY') AS DT_STRATA,\n    EXTRACT(DOW FROM TO_DATE(Date, 'MM/DD/YY')) AS DOW,\n    Hr1 AS PCT_HOURLY_0100,\n    Hr2 AS PCT_HOURLY_0200,\n    Hr3 AS PCT_HOURLY_0300,\n    Hr4 AS PCT_HOURLY_0400,\n    Hr5 AS PCT_HOURLY_0500,\n    Hr6 AS PCT_HOURLY_0600,\n    Hr7 AS PCT_HOURLY_0700,\n    Hr8 AS PCT_HOURLY_0800,\n    Hr9 AS PCT_HOURLY_0900,\n    Hr10 AS PCT_HOURLY_1000,\n    Hr11 AS PCT_HOURLY_1100,\n    Hr12 AS PCT_HOURLY_1200,\n    Hr13 AS PCT_HOURLY_1300,\n    Hr14 AS PCT_HOURLY_1400,\n    Hr15 AS PCT_HOURLY_1500,\n    Hr16 AS PCT_HOURLY_1600,\n    Hr17 AS PCT_HOURLY_1700,\n    Hr18 AS PCT_HOURLY_1800,\n    Hr19 AS PCT_HOURLY_1900,\n    Hr20 AS PCT_HOURLY_2000,\n    Hr21 AS PCT_HOURLY_2100,\n    Hr22 AS PCT_HOURLY_2200,\n    Hr23 AS PCT_HOURLY_2300,\n    Hr24 AS PCT_HOURLY_2400,\n    0 AS PCT_HOURLY_2500\nFROM Source2_6;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_7",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy. An example of Date value is Wed 01/01/2003.",
        "Schema Change Hints": "Put 0 to the attribute 25:00 in the target table.",
        "5 Samples of Source Data": "RS6        Wed 01/01/2003        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        Thu 01/02/2003        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        Fri 01/03/2003        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        Sat 01/04/2003        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        Sun 01/05/2003        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target2_7_Valid;\n\nCREATE TABLE Target2_7_Valid (\n    DT_STRATA DATE,\n    DOW INTEGER,\n    PCT_HOURLY_0100 NUMERIC,\n    PCT_HOURLY_0200 NUMERIC,\n    PCT_HOURLY_0300 NUMERIC,\n    PCT_HOURLY_0400 NUMERIC,\n    PCT_HOURLY_0500 NUMERIC,\n    PCT_HOURLY_0600 NUMERIC,\n    PCT_HOURLY_0700 NUMERIC,\n    PCT_HOURLY_0800 NUMERIC,\n    PCT_HOURLY_0900 NUMERIC,\n    PCT_HOURLY_1000 NUMERIC,\n    PCT_HOURLY_1100 NUMERIC,\n    PCT_HOURLY_1200 NUMERIC,\n    PCT_HOURLY_1300 NUMERIC,\n    PCT_HOURLY_1400 NUMERIC,\n    PCT_HOURLY_1500 NUMERIC,\n    PCT_HOURLY_1600 NUMERIC,\n    PCT_HOURLY_1700 NUMERIC,\n    PCT_HOURLY_1800 NUMERIC,\n    PCT_HOURLY_1900 NUMERIC,\n    PCT_HOURLY_2000 NUMERIC,\n    PCT_HOURLY_2100 NUMERIC,\n    PCT_HOURLY_2200 NUMERIC,\n    PCT_HOURLY_2300 NUMERIC,\n    PCT_HOURLY_2400 NUMERIC,\n    PCT_HOURLY_2500 NUMERIC\n);\n\nINSERT INTO Target2_7_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT\n    TO_DATE(SUBSTRING(Date, 5, 10), 'MM/DD/YYYY') AS DT_STRATA,\n    CASE\n        WHEN SUBSTRING(Date, 1, 3) = 'Mon' THEN 1\n        WHEN SUBSTRING(Date, 1, 3) = 'Tue' THEN 2\n        WHEN SUBSTRING(Date, 1, 3) = 'Wed' THEN 3\n        WHEN SUBSTRING(Date, 1, 3) = 'Thu' THEN 4\n        WHEN SUBSTRING(Date, 1, 3) = 'Fri' THEN 5\n        WHEN SUBSTRING(Date, 1, 3) = 'Sat' THEN 6\n        WHEN SUBSTRING(Date, 1, 3) = 'Sun' THEN 7\n    END AS DOW,\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM Source2_7;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_8",
        "Source Data Schema": "datetime cerc_logger_1",
        "Source Data Description": "The datetime attribute contains one timestamp for every 10 minutes. The cerc_logger_1 value is the total load value during the corresponding 10 minutes. ",
        "Schema Change Hints": "Use SUM aggregation when inserting all rows in the first table to the second table. ",
        "5 Samples of Source Data": "2/22/2018 0:30 22.875\n 2/22/2018 0:40 22.937\n 2/22/2018 0:50 23.651\n 2/22/2018 1:00 22.700\n 2/22/2018 1:10 23.021",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target2_8_Valid;\n\nCREATE TABLE Target2_8_Valid (\n    DT_STRATA date,\n    DOW integer,\n    PCT_HOURLY_0100 numeric,\n    PCT_HOURLY_0200 numeric,\n    PCT_HOURLY_0300 numeric,\n    PCT_HOURLY_0400 numeric,\n    PCT_HOURLY_0500 numeric,\n    PCT_HOURLY_0600 numeric,\n    PCT_HOURLY_0700 numeric,\n    PCT_HOURLY_0800 numeric,\n    PCT_HOURLY_0900 numeric,\n    PCT_HOURLY_1000 numeric,\n    PCT_HOURLY_1100 numeric,\n    PCT_HOURLY_1200 numeric,\n    PCT_HOURLY_1300 numeric,\n    PCT_HOURLY_1400 numeric,\n    PCT_HOURLY_1500 numeric,\n    PCT_HOURLY_1600 numeric,\n    PCT_HOURLY_1700 numeric,\n    PCT_HOURLY_1800 numeric,\n    PCT_HOURLY_1900 numeric,\n    PCT_HOURLY_2000 numeric,\n    PCT_HOURLY_2100 numeric,\n    PCT_HOURLY_2200 numeric,\n    PCT_HOURLY_2300 numeric,\n    PCT_HOURLY_2400 numeric\n);\n\nINSERT INTO Target2_8_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT \n    DATE(datetime) AS DT_STRATA,\n    EXTRACT(DOW FROM datetime) AS DOW,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0100,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0200,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0300,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0400,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0500,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0600,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0700,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0800,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0900,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1000,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1100,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1200,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1300,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1400,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1500,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1600,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1700,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1800,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1900,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2000,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2100,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2200,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2300,\n    SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2400\nFROM Source2_8\nGROUP BY DATE(datetime), EXTRACT(DOW FROM datetime);",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": "Sample must avoid many similar values.",
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_9",
        "Source Data Schema": "datetime zone_16",
        "Source Data Description": "The datetime attribute contains one timestamp for every 1 minutes. The zone_16 value is the total load value during the corresponding 1 minutes. ",
        "Schema Change Hints": "Use SUM aggregation when inserting all rows in the first table to the second table. ",
        "5 Samples of Source Data": "1/1/2018 0:00 67.9\n 1/1/2018 0:01 68.9\n 1/1/2018 0:02 47.9\n 1/1/2018 0:03 97.9\n 1/1/2018 0:04 27.9",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target2_9_Valid;\n\nCREATE TABLE Target2_9_Valid (\n    DT_STRATA date,\n    DOW integer,\n    PCT_HOURLY_0100 numeric,\n    PCT_HOURLY_0200 numeric,\n    PCT_HOURLY_0300 numeric,\n    PCT_HOURLY_0400 numeric,\n    PCT_HOURLY_0500 numeric,\n    PCT_HOURLY_0600 numeric,\n    PCT_HOURLY_0700 numeric,\n    PCT_HOURLY_0800 numeric,\n    PCT_HOURLY_0900 numeric,\n    PCT_HOURLY_1000 numeric,\n    PCT_HOURLY_1100 numeric,\n    PCT_HOURLY_1200 numeric,\n    PCT_HOURLY_1300 numeric,\n    PCT_HOURLY_1400 numeric,\n    PCT_HOURLY_1500 numeric,\n    PCT_HOURLY_1600 numeric,\n    PCT_HOURLY_1700 numeric,\n    PCT_HOURLY_1800 numeric,\n    PCT_HOURLY_1900 numeric,\n    PCT_HOURLY_2000 numeric,\n    PCT_HOURLY_2100 numeric,\n    PCT_HOURLY_2200 numeric,\n    PCT_HOURLY_2300 numeric,\n    PCT_HOURLY_2400 numeric\n);\nINSERT INTO Target2_9_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT DATE(datetime) AS DT_STRATA,\n       EXTRACT(DOW FROM datetime) AS DOW,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0100,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0200,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0300,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0400,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0500,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0600,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0700,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0800,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_0900,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1000,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1100,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1200,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1300,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1400,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1500,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1600,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1700,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1800,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_1900,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_2000,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_2100,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_2200,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_2300,\n       SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN zone_16 ELSE 0 END) AS PCT_HOURLY_2400\nFROM Source2_9\nGROUP BY DATE(datetime), EXTRACT(DOW FROM datetime);",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": "Sample must avoid many similar values.",
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA TEXT, DOW INTEGER, PCT_HOURLY_0100 NUMERIC, PCT_HOURLY_0200 NUMERIC, PCT_HOURLY_0300 NUMERIC, PCT_HOURLY_0400 NUMERIC, PCT_HOURLY_0500 NUMERIC, PCT_HOURLY_0600 NUMERIC, PCT_HOURLY_0700 NUMERIC, PCT_HOURLY_0800 NUMERIC, PCT_HOURLY_0900 NUMERIC, PCT_HOURLY_1000 NUMERIC, PCT_HOURLY_1100 NUMERIC, PCT_HOURLY_1200 NUMERIC, PCT_HOURLY_1300 NUMERIC, PCT_HOURLY_1400 NUMERIC, PCT_HOURLY_1500 NUMERIC, PCT_HOURLY_1600 NUMERIC, PCT_HOURLY_1700 NUMERIC, PCT_HOURLY_1800 NUMERIC, PCT_HOURLY_1900 NUMERIC, PCT_HOURLY_2000 NUMERIC, PCT_HOURLY_2100 NUMERIC, PCT_HOURLY_2200 NUMERIC, PCT_HOURLY_2300 NUMERIC, PCT_HOURLY_2400 NUMERIC, PCT_HOURLY_2500 NUMERIC",
        "Target Data Description": "DT_STRATA represents date in the format of mm/dd/yy. DOW represents the day of the week, and it should have values 1-7, corresponding to Mon-Sun. Other attributes such as PCT_HOURLY_0100, PCT_HOURLY_2400, and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Source Data Name": "Source2_10",
        "Source Data Schema": "datetime zone_16_cooling_sp",
        "Source Data Description": "The datetime attribute contains one timestamp for every 5 minutes. The zone_016_cooling_sp value is the total load value during the corresponding 5 minutes. ",
        "Schema Change Hints": "Use SUM aggregation when inserting all rows in the first table to the second table. ",
        "5 Samples of Source Data": "9/15/2018 09:55 72\n 9/15/2018 10:00 75\n 9/15/2018 10:05 73\n 9/15/2018 10:10 72\n 9/15/2018 10:15 73",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target2_10_Valid;\n \n CREATE TABLE Target2_10_Valid (\n  DT_STRATA date,\n  DOW integer,\n  PCT_HOURLY_0100 integer,\n  PCT_HOURLY_0200 integer,\n  PCT_HOURLY_0300 integer,\n  PCT_HOURLY_0400 integer,\n  PCT_HOURLY_0500 integer,\n  PCT_HOURLY_0600 integer,\n  PCT_HOURLY_0700 integer,\n  PCT_HOURLY_0800 integer,\n  PCT_HOURLY_0900 integer,\n  PCT_HOURLY_1000 integer,\n  PCT_HOURLY_1100 integer,\n  PCT_HOURLY_1200 integer,\n  PCT_HOURLY_1300 integer,\n  PCT_HOURLY_1400 integer,\n  PCT_HOURLY_1500 integer,\n  PCT_HOURLY_1600 integer,\n  PCT_HOURLY_1700 integer,\n  PCT_HOURLY_1800 integer,\n  PCT_HOURLY_1900 integer,\n  PCT_HOURLY_2000 integer,\n  PCT_HOURLY_2100 integer,\n  PCT_HOURLY_2200 integer,\n  PCT_HOURLY_2300 integer,\n  PCT_HOURLY_2400 integer,\n  PCT_HOURLY_2500 integer\n );\n \n INSERT INTO Target2_10_Valid (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\n SELECT \n  DATE(datetime) AS DT_STRATA,\n  EXTRACT(DOW FROM datetime) AS DOW,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_0900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_1900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_2000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_2100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_2200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_2300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN zone_16_cooling_sp ELSE 0 END) AS PCT_HOURLY_2400\n FROM Source2_10\n GROUP BY DATE(datetime), EXTRACT(DOW FROM datetime);",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_1",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is dayofweek, date. 1:00, 2:00 to 20:00:00 have hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Wed 04/01/2009 1.020 0.960 0.960 0.940 1.000 1.100 1.210 1.230 1.150 1.120 1.160 1.080 1.030 1.030 1.050 1.050 1.080 1.170 1.220 1.370 1.410 1.350 1.220 1.030\nThu 04/02/2009 0.930 0.870 0.860 0.870 0.920 1.030 1.130 1.170 1.140 1.110 1.120 1.080 0.990 1.010 1.040 1.080 1.170 1.270 1.330 1.460 1.450 1.420 1.220 1.100\nFri 04/03/2009 0.980 0.970 0.950 0.930 0.960 1.070 1.170 1.180 1.190 1.140 1.140 1.110 1.010 0.980 0.980 1.020 1.060 1.090 1.120 1.220 1.330 1.310 1.230 1.120\nSat 04/04/2009 1.030 0.950 0.920 0.930 0.930 0.980 1.070 1.150 1.200 1.260 1.170 1.150 1.130 1.100 1.070 1.090 1.060 1.110 1.150 1.250 1.330 1.300 1.200 1.090\nSun 04/05/2009 0.990 0.960 0.930 0.910 0.910 0.940 1.040 1.160 1.220 1.230 1.220 1.230 1.260 1.290 1.320 1.400 1.450 1.590 1.630 1.660 1.650 1.510 1.320 1.1",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target3_1_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_1_Valid (\n    Month TEXT,\n    DayType TEXT,\n    HR1 FLOAT,\n    HR2 FLOAT,\n    HR3 FLOAT,\n    HR4 FLOAT,\n    HR5 FLOAT,\n    HR6 FLOAT,\n    HR7 FLOAT,\n    HR8 FLOAT,\n    HR9 FLOAT,\n    HR10 FLOAT,\n    HR11 FLOAT,\n    HR12 FLOAT,\n    HR13 FLOAT,\n    HR14 FLOAT,\n    HR15 FLOAT,\n    HR16 FLOAT,\n    HR17 FLOAT,\n    HR18 FLOAT,\n    HR19 FLOAT,\n    HR20 FLOAT,\n    HR21 FLOAT,\n    HR22 FLOAT,\n    HR23 FLOAT,\n    HR24 FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_1_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(TO_DATE(SUBSTRING(CST, 5, 10), 'MM/DD/YYYY'), 'Month'),\n    CASE \n        WHEN TO_CHAR(TO_DATE(SUBSTRING(CST, 5, 10), 'MM/DD/YYYY'), 'D') IN ('1', '7') THEN 'weekend'\n        ELSE 'weekday'\n    END,\n    \"1:00\",\n    \"2:00\",\n    \"3:00\",\n    \"4:00\",\n    \"5:00\",\n    \"6:00\",\n    \"7:00\",\n    \"8:00\",\n    \"9:00\",\n    \"10:00\",\n    \"11:00\",\n    \"12:00\",\n    \"13:00\",\n    \"14:00\",\n    \"15:00\",\n    \"16:00\",\n    \"17:00\",\n    \"18:00\",\n    \"19:00\",\n    \"20:00\",\n    \"21:00\",\n    \"22:00\",\n    \"23:00\",\n    \"24:00:00\"\nFROM Source3_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0.96,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_2",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500 ",
        "Source Data Description": "DT_STRATA represents date. DOW is in the type of Text. PCT_HOURLY_0100 and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/16        H        .001222017108240        .001274017836250        .001131015834222        .001222017108240        .001222017108240        .001261017654247        .001144016016224        .001170016380229        .001170016380229        .001209016926237        .001183016562232        .001235017290242        .001157016198227        .001001014014196        .001014014196199        .001144016016224        .001209016926237        .001547021658303        .001560021840306        .001534021476301        .001573022022308        .001573022022308        .001326018564260        .001170016380229        .000000000000000\n1/2/16        7        .001313018382257        .001248017472245        .001222017108240        .001196016744234        .001196016744234        .001287018018252        .001300018200255        .001339018746262        .001352018928265        .001404019656275        .001417019838278        .001326018564260        .001313018382257        .001352018928265        .001339018746262        .001391019474273        .001404019656275        .001495020930293        .001521021294298        .001508021112296        .001534021476301        .001534021476301        .001469020566288        .001339018746262        .000000000000000\n1/3/16        1        .001157016198227        .001092015288214        .001053014742206        .001040014560204        .001040014560204        .001066014924209        .001053014742206        .001144016016224        .001183016562232        .001248017472245        .001326018564260        .001404019656275        .001313018382257        .001300018200255        .001313018382257        .001261017654247        .001261017654247        .001430020020280        .001469020566288        .001404019656275        .001456020384285        .001378019292270        .001287018018252        .001222017108240        .000000000000000\n1/4/16        2        .001105015470217        .001053014742206        .001001014014196        .000975013650191        .001053014742206        .001079015106211        .001183016562232        .001170016380229        .001274017836250        .001170016380229        .001157016198227        .001196016744234        .001196016744234        .001144016016224        .001170016380229        .001261017654247        .001300018200255        .001495020930293        .001586022204311        .001651023114324        .001651023114324        .001521021294298        .001417019838278        .001274017836250        .000000000000000\n1/5/16        3        .001183016562232        .001170016380229        .001079015106211        .001131015834222        .001170016380229        .001183016562232        .001300018200255        .001365019110268        .001404019656275        .001378019292270        .001352018928265        .001326018564260        .001365019110268        .001339018746262        .001300018200255        .001313018382257        .001404019656275        .001638022932321        .001716024024336        .001677023478329        .001625022750319        .001638022932321        .001573022022308        .001417019838278        .000000000000000\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_2_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_2_Valid (\n    Month TEXT,\n    DayType TEXT,\n    HR1 NUMERIC,\n    HR2 NUMERIC,\n    HR3 NUMERIC,\n    HR4 NUMERIC,\n    HR5 NUMERIC,\n    HR6 NUMERIC,\n    HR7 NUMERIC,\n    HR8 NUMERIC,\n    HR9 NUMERIC,\n    HR10 NUMERIC,\n    HR11 NUMERIC,\n    HR12 NUMERIC,\n    HR13 NUMERIC,\n    HR14 NUMERIC,\n    HR15 NUMERIC,\n    HR16 NUMERIC,\n    HR17 NUMERIC,\n    HR18 NUMERIC,\n    HR19 NUMERIC,\n    HR20 NUMERIC,\n    HR21 NUMERIC,\n    HR22 NUMERIC,\n    HR23 NUMERIC,\n    HR24 NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_2_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(DT_STRATA, 'Month'),\n    CASE WHEN DOW IN ('Saturday', 'Sunday') THEN 'weekend' ELSE 'weekday' END,\n    PCT_HOURLY_0100,\n    PCT_HOURLY_0200,\n    PCT_HOURLY_0300,\n    PCT_HOURLY_0400,\n    PCT_HOURLY_0500,\n    PCT_HOURLY_0600,\n    PCT_HOURLY_0700,\n    PCT_HOURLY_0800,\n    PCT_HOURLY_0900,\n    PCT_HOURLY_1000,\n    PCT_HOURLY_1100,\n    PCT_HOURLY_1200,\n    PCT_HOURLY_1300,\n    PCT_HOURLY_1400,\n    PCT_HOURLY_1500,\n    PCT_HOURLY_1600,\n    PCT_HOURLY_1700,\n    PCT_HOURLY_1800,\n    PCT_HOURLY_1900,\n    PCT_HOURLY_2000,\n    PCT_HOURLY_2100,\n    PCT_HOURLY_2200,\n    PCT_HOURLY_2300,\n    PCT_HOURLY_2400\nFROM Source3_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_3",
        "Source Data Schema": "Month Daytype  1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00",
        "Source Data Description": "Month is month like Sep, DayType is WD or WE and 1:00 , 2:00 are average hourly values",
        "Schema Change Hints": "For each Month and WD,WE in source should map to Month(Full Text) and daytype in target.",
        "5 Samples of Source Data": "Sep WD  0.5 0.5 0.5 0.5 0.5 0.6 0.7 0.7 0.7 0.6 0.6 0.6 0.6 0.6 0.6 0.7 0.8 0.9 1.1 1.1 1.1 0.9 0.7 0.6\nSep WE  0.6 0.6 0.5 0.5 0.5 0.5 0.6 0.7 0.8 0.8 0.9 0.9 0.9 0.9 0.9 1.1 1.1 1.1 1.1 1.1 1.1 0.8 0.7 0.6 0.8\nOct WD  0.5 0.5 0.4 0.4 0.5 0.6 0.7 0.7 0.7 0.6 0.6 0.6 0.6 0.6 0.6 0.7 0.8 0.9 1.1 1.1 1.1 0.9 0.7 0.6\nOct WE  0.5 0.5 0.5 0.5 0.5 0.5 0.6 0.7 0.7 0.8 0.8 0.9 0.8 0.8 0.8 0.7 0.8 1.1 1.1 1.1 0.9 0.9 0.7 0.6\nNov WD  0.6 0.5 0.5 0.5 0.5 0.7 0.8 0.8 0.7 0.7 0.7 0.7 0.7 0.7 0.7 0.8 0.9 1.1 1.1 1.1 1.1 0.9 0.8 0.6 0.8",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_3_Valid;\nCREATE TABLE Target3_3_Valid (\n    Month VARCHAR(10),\n    day VARCHAR(10),\n    HR1 FLOAT,\n    HR2 FLOAT,\n    HR3 FLOAT,\n    HR4 FLOAT,\n    HR5 FLOAT,\n    HR6 FLOAT,\n    HR7 FLOAT,\n    HR8 FLOAT,\n    HR9 FLOAT,\n    HR10 FLOAT,\n    HR11 FLOAT,\n    HR12 FLOAT,\n    HR13 FLOAT,\n    HR14 FLOAT,\n    HR15 FLOAT,\n    HR16 FLOAT,\n    HR17 FLOAT,\n    HR18 FLOAT,\n    HR19 FLOAT,\n    HR20 FLOAT,\n    HR21 FLOAT,\n    HR22 FLOAT,\n    HR23 FLOAT,\n    HR24 FLOAT\n);\n\nINSERT INTO Target3_3_Valid (Month, day, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    CASE\n        WHEN Month = 'Jan' THEN 'January'\n        WHEN Month = 'Feb' THEN 'February'\n        WHEN Month = 'Mar' THEN 'March'\n        WHEN Month = 'Apr' THEN 'April'\n        WHEN Month = 'May' THEN 'May'\n        WHEN Month = 'Jun' THEN 'June'\n        WHEN Month = 'Jul' THEN 'July'\n        WHEN Month = 'Aug' THEN 'August'\n        WHEN Month = 'Sep' THEN 'September'\n        WHEN Month = 'Oct' THEN 'October'\n        WHEN Month = 'Nov' THEN 'November'\n        WHEN Month = 'Dec' THEN 'December'\n        ELSE Month\n    END AS Month, \n    CASE\n        WHEN Daytype = 'WD' THEN 'weekday'\n        WHEN Daytype = 'WE' THEN 'weekend'\n        ELSE Daytype\n    END AS day,\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\nFROM Source3_3;\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.92,
        "Prompt-1 Results": 0.92,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_4",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": "class is type of class and Description is class description, analysis is type of electricity load. date is date. value1 to value 24 is hourly load values.",
        "Schema Change Hints": "The date column in source should give month and should be able to do average for weekday and weekend. ",
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_4_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_4_Valid (\n    Month VARCHAR,\n    DayType VARCHAR,\n    HR1 NUMERIC,\n    HR2 NUMERIC,\n    HR3 NUMERIC,\n    HR4 NUMERIC,\n    HR5 NUMERIC,\n    HR6 NUMERIC,\n    HR7 NUMERIC,\n    HR8 NUMERIC,\n    HR9 NUMERIC,\n    HR10 NUMERIC,\n    HR11 NUMERIC,\n    HR12 NUMERIC,\n    HR13 NUMERIC,\n    HR14 NUMERIC,\n    HR15 NUMERIC,\n    HR16 NUMERIC,\n    HR17 NUMERIC,\n    HR18 NUMERIC,\n    HR19 NUMERIC,\n    HR20 NUMERIC,\n    HR21 NUMERIC,\n    HR22 NUMERIC,\n    HR23 NUMERIC,\n    HR24 NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_4_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(date, 'Month') AS Month,\n    CASE \n        WHEN EXTRACT(DOW FROM date) IN (0, 6) THEN 'weekend'\n        ELSE 'weekday'\n    END AS DayType,\n    value1 AS HR1,\n    value2 AS HR2,\n    value3 AS HR3,\n    value4 AS HR4,\n    value5 AS HR5,\n    value6 AS HR6,\n    value7 AS HR7,\n    value8 AS HR8,\n    value9 AS HR9,\n    value10 AS HR10,\n    value11 AS HR11,\n    value12 AS HR12,\n    value13 AS HR13,\n    value14 AS HR14,\n    value15 AS HR15,\n    value16 AS HR16,\n    value17 AS HR17,\n    value18 AS HR18,\n    value19 AS HR19,\n    value20 AS HR20,\n    value21 AS HR21,\n    value22 AS HR22,\n    value23 AS HR23,\n    value24 AS HR24\nFROM Source3_4;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_5",
        "Source Data Schema": "date, 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": " DSL should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target3_5_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_5_Valid (\n    Month TEXT,\n    DayType TEXT,\n    HR1 FLOAT,\n    HR2 FLOAT,\n    HR3 FLOAT,\n    HR4 FLOAT,\n    HR5 FLOAT,\n    HR6 FLOAT,\n    HR7 FLOAT,\n    HR8 FLOAT,\n    HR9 FLOAT,\n    HR10 FLOAT,\n    HR11 FLOAT,\n    HR12 FLOAT,\n    HR13 FLOAT,\n    HR14 FLOAT,\n    HR15 FLOAT,\n    HR16 FLOAT,\n    HR17 FLOAT,\n    HR18 FLOAT,\n    HR19 FLOAT,\n    HR20 FLOAT,\n    HR21 FLOAT,\n    HR22 FLOAT,\n    HR23 FLOAT,\n    HR24 FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_5_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(date, 'FMMonth') AS Month,\n    CASE \n        WHEN EXTRACT(ISODOW FROM date) < 6 THEN 'weekday'\n        ELSE 'weekend'\n    END AS DayType,\n    \"1:00 AM\",\n    \"2:00 AM\",\n    \"3:00 AM\",\n    \"4:00 AM\",\n    \"5:00 AM\",\n    \"6:00 AM\",\n    \"7:00 AM\",\n    \"8:00 AM\",\n    \"9:00 AM\",\n    \"10:00 AM\",\n    \"11:00 AM\",\n    \"12:00 AM\",\n    \"1:00 PM\",\n    \"2:00 PM\",\n    \"3:00 PM\",\n    \"4:00 PM\",\n    \"5:00 PM\",\n    \"6:00 PM\",\n    \"7:00 PM\",\n    \"8:00 PM\",\n    \"9:00 PM\",\n    \"10:00 PM\",\n    \"11:00 PM\",\n    \"12:00 PM\"\nFROM Source3_5;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_6",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/13        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/13        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/13        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/13        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/13        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_6_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_6_Valid (\n    Month VARCHAR(10),\n    DayType VARCHAR(10),\n    HR1 NUMERIC,\n    HR2 NUMERIC,\n    HR3 NUMERIC,\n    HR4 NUMERIC,\n    HR5 NUMERIC,\n    HR6 NUMERIC,\n    HR7 NUMERIC,\n    HR8 NUMERIC,\n    HR9 NUMERIC,\n    HR10 NUMERIC,\n    HR11 NUMERIC,\n    HR12 NUMERIC,\n    HR13 NUMERIC,\n    HR14 NUMERIC,\n    HR15 NUMERIC,\n    HR16 NUMERIC,\n    HR17 NUMERIC,\n    HR18 NUMERIC,\n    HR19 NUMERIC,\n    HR20 NUMERIC,\n    HR21 NUMERIC,\n    HR22 NUMERIC,\n    HR23 NUMERIC,\n    HR24 NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_6_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(Date, 'FMMonth') AS Month,\n    CASE \n        WHEN EXTRACT(DOW FROM Date) IN (0, 6) THEN 'weekend'\n        ELSE 'weekday'\n    END AS DayType,\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM Source3_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_7",
        "Source Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": "first column does not have name, its a date column. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target3_7_Valid;   CREATE TABLE Target3_7_Valid (\n    Month TEXT,\n    DayType TEXT,\n    HR1 FLOAT,\n    HR2 FLOAT,\n    HR3 FLOAT,\n    HR4 FLOAT,\n    HR5 FLOAT,\n    HR6 FLOAT,\n    HR7 FLOAT,\n    HR8 FLOAT,\n    HR9 FLOAT,\n    HR10 FLOAT,\n    HR11 FLOAT,\n    HR12 FLOAT,\n    HR13 FLOAT,\n    HR14 FLOAT,\n    HR15 FLOAT,\n    HR16 FLOAT,\n    HR17 FLOAT,\n    HR18 FLOAT,\n    HR19 FLOAT,\n    HR20 FLOAT,\n    HR21 FLOAT,\n    HR22 FLOAT,\n    HR23 FLOAT,\n    HR24 FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_7_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(date, 'FMMonth') AS Month,\n    CASE \n        WHEN EXTRACT(ISODOW FROM date) IN (6, 7) THEN 'weekend'\n        ELSE 'weekday'\n    END AS DayType,\n    \"Hour 1\",\n    \"Hour 2\",\n    \"Hour 3\",\n    \"Hour 4\",\n    \"Hour 5\",\n    \"Hour 6\",\n    \"Hour 7\",\n    \"Hour 8\",\n    \"Hour 9\",\n    \"Hour 10\",\n    \"Hour 11\",\n    \"Hour 12\",\n    \"Hour 13\",\n    \"Hour 14\",\n    \"Hour 15\",\n    \"Hour 16\",\n    \"Hour 17\",\n    \"Hour 18\",\n    \"Hour 19\",\n    \"Hour 20\",\n    \"Hour 21\",\n    \"Hour 22\",\n    \"Hour 23\",\n    \"Hour 24\"\nFROM Source3_7;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_8",
        "Source Data Schema": "Company Rate Rate Code Date Hr1 Hr2 Hr3 Hr4 Hr5 Hr6 Hr7 Hr8 Hr9 Hr10 Hr11 Hr12 Hr13 Hr14 Hr15 Hr16 Hr17 Hr18 Hr19 Hr20 Hr21 Hr22 Hr23 Hr24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Boston Edison        G1        A9/B1        1/1/14        0.91880        0.90204        0.90953        0.89743        0.90784        0.91352        0.90426        0.84936        0.83371        0.88786        0.86311        0.93132        0.91851        0.84487        0.87496        0.84075        0.98534        1.02454        0.98755        0.99935        0.98452        0.96688        0.95505        0.91513\nBoston Edison        G1        A9/B1        1/2/14        0.87892        0.88134        0.87665        0.90858        0.91542        0.92161        0.93303        1.01043        1.14976        1.25251        1.28495        1.34673        1.31238        1.30880        1.30000        1.19045        1.16443        1.17685        1.12458        1.05529        0.98511        0.96193        0.96526        0.97122\nBoston Edison        G1        A9/B1        1/3/14        0.93044        0.92009        0.92011        0.93063        0.93666        0.94961        0.93255        0.91908        0.91562        0.96811        1.00253        1.06153        1.19003        1.19289        1.22758        1.21124        1.20832        1.22837        1.17335        1.17034        1.09601        1.08531        1.06987        1.00114\nBoston Edison        G1        A9/B1        1/4/14        0.99430        0.99976        1.00380        1.01784        1.03292        1.01593        1.03356        1.01903        1.12290        1.19339        1.23023        1.24012        1.24816        1.30648        1.21167        1.11098        1.18366        1.18973        1.15116        1.10983        1.05467        1.01286        1.03867        1.02930\nBoston Edison        G1        A9/B1        1/5/14        0.96557        0.95280        0.91880        0.91824        0.91423        0.92391        0.90871        0.87327        0.87996        0.91213        0.94840        0.91633        0.88302        0.92150        1.04565        0.96922        1.03708        1.03603        1.05365        1.03192        0.99591        0.95368        0.93241        0.93497\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_8_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_8_Valid (\n    Month VARCHAR(255),\n    DayType VARCHAR(255),\n    HR1 NUMERIC,\n    HR2 NUMERIC,\n    HR3 NUMERIC,\n    HR4 NUMERIC,\n    HR5 NUMERIC,\n    HR6 NUMERIC,\n    HR7 NUMERIC,\n    HR8 NUMERIC,\n    HR9 NUMERIC,\n    HR10 NUMERIC,\n    HR11 NUMERIC,\n    HR12 NUMERIC,\n    HR13 NUMERIC,\n    HR14 NUMERIC,\n    HR15 NUMERIC,\n    HR16 NUMERIC,\n    HR17 NUMERIC,\n    HR18 NUMERIC,\n    HR19 NUMERIC,\n    HR20 NUMERIC,\n    HR21 NUMERIC,\n    HR22 NUMERIC,\n    HR23 NUMERIC,\n    HR24 NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_8_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(Date, 'Month') AS Month,\n    CASE \n        WHEN EXTRACT(DOW FROM Date) IN (0, 6) THEN 'weekend'\n        ELSE 'weekday'\n    END AS DayType,\n    Hr1, Hr2, Hr3, Hr4, Hr5, Hr6, Hr7, Hr8, Hr9, Hr10, Hr11, Hr12, Hr13, Hr14, Hr15, Hr16, Hr17, Hr18, Hr19, Hr20, Hr21, Hr22, Hr23, Hr24\nFROM Source3_8;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_9",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "Schema Change Hints": "The Date attribute in the first table is directly mapped to CST in the second table.",
        "5 Samples of Source Data": "RS6        Wed 01/01/2003        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        Thu 01/02/2003        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        Fri 01/03/2003        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        Sat 01/04/2003        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        Sun 01/05/2003        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_9_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_9_Valid (\n    Month TEXT,\n    DayType TEXT,\n    HR1 NUMERIC,\n    HR2 NUMERIC,\n    HR3 NUMERIC,\n    HR4 NUMERIC,\n    HR5 NUMERIC,\n    HR6 NUMERIC,\n    HR7 NUMERIC,\n    HR8 NUMERIC,\n    HR9 NUMERIC,\n    HR10 NUMERIC,\n    HR11 NUMERIC,\n    HR12 NUMERIC,\n    HR13 NUMERIC,\n    HR14 NUMERIC,\n    HR15 NUMERIC,\n    HR16 NUMERIC,\n    HR17 NUMERIC,\n    HR18 NUMERIC,\n    HR19 NUMERIC,\n    HR20 NUMERIC,\n    HR21 NUMERIC,\n    HR22 NUMERIC,\n    HR23 NUMERIC,\n    HR24 NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_9_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(TO_DATE(SUBSTRING(Date, 5, 10), 'MM/DD/YYYY'), 'Month'),\n    CASE WHEN EXTRACT(DOW FROM TO_DATE(SUBSTRING(Date, 5, 10), 'MM/DD/YYYY')) IN (1, 7) THEN 'weekend' ELSE 'weekday' END,\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM Source3_9;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target3",
        "Target Data Schema": "Month DayType HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month and month should in  complete text representation(like 'April'),not numerical value(like '4'). The second column records the  day type, which can only be either 'weekday' or 'weekend'. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Source3_10",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "2/22/2018 0:30        22.875\n2/22/2018 0:40        22.937\n2/22/2018 0:50        22.937\n2/22/2018 1:00        22.937\n2/22/2018 1:10        23",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target3_10_Valid;\n\n-- Create the second table\nCREATE TABLE Target3_10_Valid (\n    Month TEXT,\n    DayType TEXT,\n    HR1 FLOAT,\n    HR2 FLOAT,\n    HR3 FLOAT,\n    HR4 FLOAT,\n    HR5 FLOAT,\n    HR6 FLOAT,\n    HR7 FLOAT,\n    HR8 FLOAT,\n    HR9 FLOAT,\n    HR10 FLOAT,\n    HR11 FLOAT,\n    HR12 FLOAT,\n    HR13 FLOAT,\n    HR14 FLOAT,\n    HR15 FLOAT,\n    HR16 FLOAT,\n    HR17 FLOAT,\n    HR18 FLOAT,\n    HR19 FLOAT,\n    HR20 FLOAT,\n    HR21 FLOAT,\n    HR22 FLOAT,\n    HR23 FLOAT,\n    HR24 FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target3_10_Valid (Month, DayType, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    TO_CHAR(date, 'Month') AS Month,\n    CASE \n        WHEN EXTRACT(ISODOW FROM date) < 6 THEN 'weekday'\n        ELSE 'weekend'\n    END AS DayType,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN cerc_templogger_1 END) AS HR1,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN cerc_templogger_1 END) AS HR2,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN cerc_templogger_1 END) AS HR3,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN cerc_templogger_1 END) AS HR4,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN cerc_templogger_1 END) AS HR5,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN cerc_templogger_1 END) AS HR6,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN cerc_templogger_1 END) AS HR7,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN cerc_templogger_1 END) AS HR8,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN cerc_templogger_1 END) AS HR9,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN cerc_templogger_1 END) AS HR10,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN cerc_templogger_1 END) AS HR11,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN cerc_templogger_1 END) AS HR12,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN cerc_templogger_1 END) AS HR13,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN cerc_templogger_1 END) AS HR14,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN cerc_templogger_1 END) AS HR15,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN cerc_templogger_1 END) AS HR16,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN cerc_templogger_1 END) AS HR17,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN cerc_templogger_1 END) AS HR18,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN cerc_templogger_1 END) AS HR19,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN cerc_templogger_1 END) AS HR20,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN cerc_templogger_1 END) AS HR21,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN cerc_templogger_1 END) AS HR22,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN cerc_templogger_1 END) AS HR23,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN cerc_templogger_1 END) AS HR24\nFROM Source3_10\nGROUP BY TO_CHAR(date, 'Month'), EXTRACT(ISODOW FROM date);",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": "could be complex to make wed to weekday, extract month from date and then aggregate for values over month wise",
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_1",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500 ",
        "Source Data Description": "DT_STRATA represents date. DOW is in the type of Text. PCT_HOURLY_0100 and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Schema Change Hints": "DT_STRATA should map to date, and PCT hourly value to respetive hours. ",
        "5 Samples of Source Data": "1/1/16        H        .001222017108240        .001274017836250        .001131015834222        .001222017108240        .001222017108240        .001261017654247        .001144016016224        .001170016380229        .001170016380229        .001209016926237        .001183016562232        .001235017290242        .001157016198227        .001001014014196        .001014014196199        .001144016016224        .001209016926237        .001547021658303        .001560021840306        .001534021476301        .001573022022308        .001573022022308        .001326018564260        .001170016380229        .000000000000000\n1/2/16        7        .001313018382257        .001248017472245        .001222017108240        .001196016744234        .001196016744234        .001287018018252        .001300018200255        .001339018746262        .001352018928265        .001404019656275        .001417019838278        .001326018564260        .001313018382257        .001352018928265        .001339018746262        .001391019474273        .001404019656275        .001495020930293        .001521021294298        .001508021112296        .001534021476301        .001534021476301        .001469020566288        .001339018746262        .000000000000000\n1/3/16        1        .001157016198227        .001092015288214        .001053014742206        .001040014560204        .001040014560204        .001066014924209        .001053014742206        .001144016016224        .001183016562232        .001248017472245        .001326018564260        .001404019656275        .001313018382257        .001300018200255        .001313018382257        .001261017654247        .001261017654247        .001430020020280        .001469020566288        .001404019656275        .001456020384285        .001378019292270        .001287018018252        .001222017108240        .000000000000000\n1/4/16        2        .001105015470217        .001053014742206        .001001014014196        .000975013650191        .001053014742206        .001079015106211        .001183016562232        .001170016380229        .001274017836250        .001170016380229        .001157016198227        .001196016744234        .001196016744234        .001144016016224        .001170016380229        .001261017654247        .001300018200255        .001495020930293        .001586022204311        .001651023114324        .001651023114324        .001521021294298        .001417019838278        .001274017836250        .000000000000000\n1/5/16        3        .001183016562232        .001170016380229        .001079015106211        .001131015834222        .001170016380229        .001183016562232        .001300018200255        .001365019110268        .001404019656275        .001378019292270        .001352018928265        .001326018564260        .001365019110268        .001339018746262        .001300018200255        .001313018382257        .001404019656275        .001638022932321        .001716024024336        .001677023478329        .001625022750319        .001638022932321        .001573022022308        .001417019838278        .000000000000000\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_1_Valid;\nCREATE TABLE Target4_1_Valid (\n    date TEXT,\n    \"Hour 1\" TEXT,\n    \"Hour 2\" TEXT,\n    \"Hour 3\" TEXT,\n    \"Hour 4\" TEXT,\n    \"Hour 5\" TEXT,\n    \"Hour 6\" TEXT,\n    \"Hour 7\" TEXT,\n    \"Hour 8\" TEXT,\n    \"Hour 9\" TEXT,\n    \"Hour 10\" TEXT,\n    \"Hour 11\" TEXT,\n    \"Hour 12\" TEXT,\n    \"Hour 13\" TEXT,\n    \"Hour 14\" TEXT,\n    \"Hour 15\" TEXT,\n    \"Hour 16\" TEXT,\n    \"Hour 17\" TEXT,\n    \"Hour 18\" TEXT,\n    \"Hour 19\" TEXT,\n    \"Hour 20\" TEXT,\n    \"Hour 21\" TEXT,\n    \"Hour 22\" TEXT,\n    \"Hour 23\" TEXT,\n    \"Hour 24\" TEXT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_1_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n    DT_STRATA,\n    PCT_HOURLY_0100,\n    PCT_HOURLY_0200,\n    PCT_HOURLY_0300,\n    PCT_HOURLY_0400,\n    PCT_HOURLY_0500,\n    PCT_HOURLY_0600,\n    PCT_HOURLY_0700,\n    PCT_HOURLY_0800,\n    PCT_HOURLY_0900,\n    PCT_HOURLY_1000,\n    PCT_HOURLY_1100,\n    PCT_HOURLY_1200,\n    PCT_HOURLY_1300,\n    PCT_HOURLY_1400,\n    PCT_HOURLY_1500,\n    PCT_HOURLY_1600,\n    PCT_HOURLY_1700,\n    PCT_HOURLY_1800,\n    PCT_HOURLY_1900,\n    PCT_HOURLY_2000,\n    PCT_HOURLY_2100,\n    PCT_HOURLY_2200,\n    PCT_HOURLY_2300,\n    PCT_HOURLY_2400\nFROM Source4_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": "in E, schema have first column empty which is date"
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_2",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "2/22/2018 0:30        22.875\n2/22/2018 0:40        22.937\n2/22/2018 0:50        22.937\n2/22/2018 1:00        22.937\n2/22/2018 1:10        23",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_2_Valid;\n\n-- Create the second table\nCREATE TABLE Target4_2_Valid (\n    date TEXT,\n    \"Hour 1\" DECIMAL(5,3),\n    \"Hour 2\" DECIMAL(5,3),\n    \"Hour 3\" DECIMAL(5,3),\n    \"Hour 4\" DECIMAL(5,3),\n    \"Hour 5\" DECIMAL(5,3),\n    \"Hour 6\" DECIMAL(5,3),\n    \"Hour 7\" DECIMAL(5,3),\n    \"Hour 8\" DECIMAL(5,3),\n    \"Hour 9\" DECIMAL(5,3),\n    \"Hour 10\" DECIMAL(5,3),\n    \"Hour 11\" DECIMAL(5,3),\n    \"Hour 12\" DECIMAL(5,3),\n    \"Hour 13\" DECIMAL(5,3),\n    \"Hour 14\" DECIMAL(5,3),\n    \"Hour 15\" DECIMAL(5,3),\n    \"Hour 16\" DECIMAL(5,3),\n    \"Hour 17\" DECIMAL(5,3),\n    \"Hour 18\" DECIMAL(5,3),\n    \"Hour 19\" DECIMAL(5,3),\n    \"Hour 20\" DECIMAL(5,3),\n    \"Hour 21\" DECIMAL(5,3),\n    \"Hour 22\" DECIMAL(5,3),\n    \"Hour 23\" DECIMAL(5,3),\n    \"Hour 24\" DECIMAL(5,3)\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_2_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n    TO_CHAR(date, 'MM/DD/YYYY') AS date,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN cerc_templogger_1 END) AS \"Hour 1\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN cerc_templogger_1 END) AS \"Hour 2\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN cerc_templogger_1 END) AS \"Hour 3\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN cerc_templogger_1 END) AS \"Hour 4\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN cerc_templogger_1 END) AS \"Hour 5\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN cerc_templogger_1 END) AS \"Hour 6\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN cerc_templogger_1 END) AS \"Hour 7\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN cerc_templogger_1 END) AS \"Hour 8\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN cerc_templogger_1 END) AS \"Hour 9\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN cerc_templogger_1 END) AS \"Hour 10\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN cerc_templogger_1 END) AS \"Hour 11\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN cerc_templogger_1 END) AS \"Hour 12\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN cerc_templogger_1 END) AS \"Hour 13\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN cerc_templogger_1 END) AS \"Hour 14\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN cerc_templogger_1 END) AS \"Hour 15\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN cerc_templogger_1 END) AS \"Hour 16\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN cerc_templogger_1 END) AS \"Hour 17\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN cerc_templogger_1 END) AS \"Hour 18\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN cerc_templogger_1 END) AS \"Hour 19\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN cerc_templogger_1 END) AS \"Hour 20\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN cerc_templogger_1 END) AS \"Hour 21\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN cerc_templogger_1 END) AS \"Hour 22\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN cerc_templogger_1 END) AS \"Hour 23\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN cerc_templogger_1 END) AS \"Hour 24\"\nFROM Source4_2\nGROUP BY TO_CHAR(date, 'MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_3",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "1/1/2018 0:00        67.9\n1/1/2018 0:01        67.9\n1/1/2018 0:02        67.9\n1/1/2018 0:03        67.9\n1/1/2018 0:04        67.9",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_3_Valid;\n\n-- Create the second table\nCREATE TABLE Target4_3_Valid (\n    date TEXT,\n    \"Hour 1\" NUMERIC(5,1),\n    \"Hour 2\" NUMERIC(5,1),\n    \"Hour 3\" NUMERIC(5,1),\n    \"Hour 4\" NUMERIC(5,1),\n    \"Hour 5\" NUMERIC(5,1),\n    \"Hour 6\" NUMERIC(5,1),\n    \"Hour 7\" NUMERIC(5,1),\n    \"Hour 8\" NUMERIC(5,1),\n    \"Hour 9\" NUMERIC(5,1),\n    \"Hour 10\" NUMERIC(5,1),\n    \"Hour 11\" NUMERIC(5,1),\n    \"Hour 12\" NUMERIC(5,1),\n    \"Hour 13\" NUMERIC(5,1),\n    \"Hour 14\" NUMERIC(5,1),\n    \"Hour 15\" NUMERIC(5,1),\n    \"Hour 16\" NUMERIC(5,1),\n    \"Hour 17\" NUMERIC(5,1),\n    \"Hour 18\" NUMERIC(5,1),\n    \"Hour 19\" NUMERIC(5,1),\n    \"Hour 20\" NUMERIC(5,1),\n    \"Hour 21\" NUMERIC(5,1),\n    \"Hour 22\" NUMERIC(5,1),\n    \"Hour 23\" NUMERIC(5,1),\n    \"Hour 24\" NUMERIC(5,1)\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_3_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT \n    TO_CHAR(date, 'MM/DD/YYYY') AS date,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_16_temp END) AS \"Hour 1\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_16_temp END) AS \"Hour 2\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_16_temp END) AS \"Hour 3\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_16_temp END) AS \"Hour 4\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_16_temp END) AS \"Hour 5\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_16_temp END) AS \"Hour 6\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_16_temp END) AS \"Hour 7\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_16_temp END) AS \"Hour 8\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_16_temp END) AS \"Hour 9\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_16_temp END) AS \"Hour 10\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_16_temp END) AS \"Hour 11\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_16_temp END) AS \"Hour 12\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_16_temp END) AS \"Hour 13\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_16_temp END) AS \"Hour 14\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_16_temp END) AS \"Hour 15\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_16_temp END) AS \"Hour 16\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_16_temp END) AS \"Hour 17\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_16_temp END) AS \"Hour 18\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_16_temp END) AS \"Hour 19\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_16_temp END) AS \"Hour 20\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_16_temp END) AS \"Hour 21\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_16_temp END) AS \"Hour 22\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_16_temp END) AS \"Hour 23\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN zone_16_temp END) AS \"Hour 24\"\nFROM Source4_3\nGROUP BY TO_CHAR(date, 'MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_4",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "9/15/2018 10:00        73\n9/15/2018 10:05        73\n9/15/2018 10:10        73\n9/15/2018 10:15        73\n9/15/2018 10:20        73",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_4_Valid;\n\n-- Create the second table\nCREATE TABLE Target4_4_Valid (\n    date TEXT,\n    \"Hour 1\" INTEGER,\n    \"Hour 2\" INTEGER,\n    \"Hour 3\" INTEGER,\n    \"Hour 4\" INTEGER,\n    \"Hour 5\" INTEGER,\n    \"Hour 6\" INTEGER,\n    \"Hour 7\" INTEGER,\n    \"Hour 8\" INTEGER,\n    \"Hour 9\" INTEGER,\n    \"Hour 10\" INTEGER,\n    \"Hour 11\" INTEGER,\n    \"Hour 12\" INTEGER,\n    \"Hour 13\" INTEGER,\n    \"Hour 14\" INTEGER,\n    \"Hour 15\" INTEGER,\n    \"Hour 16\" INTEGER,\n    \"Hour 17\" INTEGER,\n    \"Hour 18\" INTEGER,\n    \"Hour 19\" INTEGER,\n    \"Hour 20\" INTEGER,\n    \"Hour 21\" INTEGER,\n    \"Hour 22\" INTEGER,\n    \"Hour 23\" INTEGER,\n    \"Hour 24\" INTEGER\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_4_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n    TO_CHAR(date, 'MM/DD/YYYY') AS date,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_016_cooling_sp END) AS \"Hour 1\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_016_cooling_sp END) AS \"Hour 2\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_016_cooling_sp END) AS \"Hour 3\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_016_cooling_sp END) AS \"Hour 4\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_016_cooling_sp END) AS \"Hour 5\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_016_cooling_sp END) AS \"Hour 6\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_016_cooling_sp END) AS \"Hour 7\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_016_cooling_sp END) AS \"Hour 8\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_016_cooling_sp END) AS \"Hour 9\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_016_cooling_sp END) AS \"Hour 10\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_016_cooling_sp END) AS \"Hour 11\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_016_cooling_sp END) AS \"Hour 12\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_016_cooling_sp END) AS \"Hour 13\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_016_cooling_sp END) AS \"Hour 14\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_016_cooling_sp END) AS \"Hour 15\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_016_cooling_sp END) AS \"Hour 16\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_016_cooling_sp END) AS \"Hour 17\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_016_cooling_sp END) AS \"Hour 18\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_016_cooling_sp END) AS \"Hour 19\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_016_cooling_sp END) AS \"Hour 20\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_016_cooling_sp END) AS \"Hour 21\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_016_cooling_sp END) AS \"Hour 22\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_016_cooling_sp END) AS \"Hour 23\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN zone_016_cooling_sp END) AS \"Hour 24\"\nFROM Source4_4\nGROUP BY TO_CHAR(date, 'MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_5",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": "class is type of class and Description is class description, analysis is type of electricity load. date is date. value1 to value 24 is hourly load values.",
        "Schema Change Hints": "class, description, analysis can be dropped.",
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_5_Valid;\n\n-- Create the second table\nCREATE TABLE Target4_5_Valid (\n    date TEXT,\n    \"Hour 1\" FLOAT,\n    \"Hour 2\" FLOAT,\n    \"Hour 3\" FLOAT,\n    \"Hour 4\" FLOAT,\n    \"Hour 5\" FLOAT,\n    \"Hour 6\" FLOAT,\n    \"Hour 7\" FLOAT,\n    \"Hour 8\" FLOAT,\n    \"Hour 9\" FLOAT,\n    \"Hour 10\" FLOAT,\n    \"Hour 11\" FLOAT,\n    \"Hour 12\" FLOAT,\n    \"Hour 13\" FLOAT,\n    \"Hour 14\" FLOAT,\n    \"Hour 15\" FLOAT,\n    \"Hour 16\" FLOAT,\n    \"Hour 17\" FLOAT,\n    \"Hour 18\" FLOAT,\n    \"Hour 19\" FLOAT,\n    \"Hour 20\" FLOAT,\n    \"Hour 21\" FLOAT,\n    \"Hour 22\" FLOAT,\n    \"Hour 23\" FLOAT,\n    \"Hour 24\" FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_5_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT date, value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22, value23, value24\nFROM Source4_5;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_6",
        "Source Data Schema": "date, 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": "DSL should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_6_Valid;\nCREATE TABLE Target4_6_Valid (\n    date TEXT,\n    \"Hour 1\" FLOAT,\n    \"Hour 2\" FLOAT,\n    \"Hour 3\" FLOAT,\n    \"Hour 4\" FLOAT,\n    \"Hour 5\" FLOAT,\n    \"Hour 6\" FLOAT,\n    \"Hour 7\" FLOAT,\n    \"Hour 8\" FLOAT,\n    \"Hour 9\" FLOAT,\n    \"Hour 10\" FLOAT,\n    \"Hour 11\" FLOAT,\n    \"Hour 12\" FLOAT,\n    \"Hour 13\" FLOAT,\n    \"Hour 14\" FLOAT,\n    \"Hour 15\" FLOAT,\n    \"Hour 16\" FLOAT,\n    \"Hour 17\" FLOAT,\n    \"Hour 18\" FLOAT,\n    \"Hour 19\" FLOAT,\n    \"Hour 20\" FLOAT,\n    \"Hour 21\" FLOAT,\n    \"Hour 22\" FLOAT,\n    \"Hour 23\" FLOAT,\n    \"Hour 24\" FLOAT\n);\n\n-- Insert data into the Target4 table\nINSERT INTO Target4_6_Valid\nSELECT\n    date,\n    \"1:00 AM\", \n    \"2:00 AM\", \n    \"3:00 AM\", \n    \"4:00 AM\", \n    \"5:00 AM\", \n    \"6:00 AM\", \n    \"7:00 AM\", \n    \"8:00 AM\", \n    \"9:00 AM\", \n    \"10:00 AM\", \n    \"11:00 AM\", \n    \"12:00 AM\", \n    \"1:00 PM\", \n    \"2:00 PM\", \n    \"3:00 PM\", \n    \"4:00 PM\", \n    \"5:00 PM\", \n    \"6:00 PM\", \n    \"7:00 PM\", \n    \"8:00 PM\", \n    \"9:00 PM\", \n    \"10:00 PM\", \n    \"11:00 PM\", \n    \"12:00 PM\"\nFROM Source4_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_7",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/13        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/13        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/13        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/13        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/13        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_7_Valid;\n\n-- Create the second table\nCREATE TABLE Target4_7_Valid (\n    date TEXT,\n    \"Hour 1\" NUMERIC,\n    \"Hour 2\" NUMERIC,\n    \"Hour 3\" NUMERIC,\n    \"Hour 4\" NUMERIC,\n    \"Hour 5\" NUMERIC,\n    \"Hour 6\" NUMERIC,\n    \"Hour 7\" NUMERIC,\n    \"Hour 8\" NUMERIC,\n    \"Hour 9\" NUMERIC,\n    \"Hour 10\" NUMERIC,\n    \"Hour 11\" NUMERIC,\n    \"Hour 12\" NUMERIC,\n    \"Hour 13\" NUMERIC,\n    \"Hour 14\" NUMERIC,\n    \"Hour 15\" NUMERIC,\n    \"Hour 16\" NUMERIC,\n    \"Hour 17\" NUMERIC,\n    \"Hour 18\" NUMERIC,\n    \"Hour 19\" NUMERIC,\n    \"Hour 20\" NUMERIC,\n    \"Hour 21\" NUMERIC,\n    \"Hour 22\" NUMERIC,\n    \"Hour 23\" NUMERIC,\n    \"Hour 24\" NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_7_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT Date, \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM Source4_7;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_8",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is a column that contains both the day of week and the date. 1:00 to 24:00 are hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Wed 04/01/2009 1.020 0.960 0.960 0.940 1.000 1.100 1.210 1.230 1.150 1.120 1.160 1.080 1.030 1.030 1.050 1.050 1.080 1.170 1.220 1.370 1.410 1.350 1.220 1.030\nThu 04/02/2009 0.930 0.870 0.860 0.870 0.920 1.030 1.130 1.170 1.140 1.110 1.120 1.080 0.990 1.010 1.040 1.080 1.170 1.270 1.330 1.460 1.450 1.420 1.220 1.100\nFri 04/03/2009 0.980 0.970 0.950 0.930 0.960 1.070 1.170 1.180 1.190 1.140 1.140 1.110 1.010 0.980 0.980 1.020 1.060 1.090 1.120 1.220 1.330 1.310 1.230 1.120\nSat 04/04/2009 1.030 0.950 0.920 0.930 0.930 0.980 1.070 1.150 1.200 1.260 1.170 1.150 1.130 1.100 1.070 1.090 1.060 1.110 1.150 1.250 1.330 1.300 1.200 1.090\nSun 04/05/2009 0.990 0.960 0.930 0.910 0.910 0.940 1.040 1.160 1.220 1.230 1.220 1.230 1.260 1.290 1.320 1.400 1.450 1.590 1.630 1.660 1.650 1.510 1.320 1.1",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_8_Valid;\nCREATE TABLE Target4_8_Valid (\n    date TEXT,\n    \"Hour 1\" FLOAT,\n    \"Hour 2\" FLOAT,\n    \"Hour 3\" FLOAT,\n    \"Hour 4\" FLOAT,\n    \"Hour 5\" FLOAT,\n    \"Hour 6\" FLOAT,\n    \"Hour 7\" FLOAT,\n    \"Hour 8\" FLOAT,\n    \"Hour 9\" FLOAT,\n    \"Hour 10\" FLOAT,\n    \"Hour 11\" FLOAT,\n    \"Hour 12\" FLOAT,\n    \"Hour 13\" FLOAT,\n    \"Hour 14\" FLOAT,\n    \"Hour 15\" FLOAT,\n    \"Hour 16\" FLOAT,\n    \"Hour 17\" FLOAT,\n    \"Hour 18\" FLOAT,\n    \"Hour 19\" FLOAT,\n    \"Hour 20\" FLOAT,\n    \"Hour 21\" FLOAT,\n    \"Hour 22\" FLOAT,\n    \"Hour 23\" FLOAT,\n    \"Hour 24\" FLOAT\n);\n\n-- Insert data into the Target4 table\nINSERT INTO Target4_8_Valid\nSELECT\n    split_part(CST, ' ', 2),\n    \"1:00\", \n    \"2:00\", \n    \"3:00\", \n    \"4:00\", \n    \"5:00\", \n    \"6:00\", \n    \"7:00\", \n    \"8:00\", \n    \"9:00\", \n    \"10:00\", \n    \"11:00\", \n    \"12:00\", \n    \"13:00\", \n    \"14:00\", \n    \"15:00\", \n    \"16:00\", \n    \"17:00\", \n    \"18:00\", \n    \"19:00\", \n    \"20:00\", \n    \"21:00\", \n    \"22:00\", \n    \"23:00\", \n    \"24:00:00\"\nFROM Source4_8;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_9",
        "Source Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_9_Valid;\nCREATE TABLE Target4_9_Valid (\n    date TEXT,\n    \"Hour 1\" FLOAT,\n    \"Hour 2\" FLOAT,\n    \"Hour 3\" FLOAT,\n    \"Hour 4\" FLOAT,\n    \"Hour 5\" FLOAT,\n    \"Hour 6\" FLOAT,\n    \"Hour 7\" FLOAT,\n    \"Hour 8\" FLOAT,\n    \"Hour 9\" FLOAT,\n    \"Hour 10\" FLOAT,\n    \"Hour 11\" FLOAT,\n    \"Hour 12\" FLOAT,\n    \"Hour 13\" FLOAT,\n    \"Hour 14\" FLOAT,\n    \"Hour 15\" FLOAT,\n    \"Hour 16\" FLOAT,\n    \"Hour 17\" FLOAT,\n    \"Hour 18\" FLOAT,\n    \"Hour 19\" FLOAT,\n    \"Hour 20\" FLOAT,\n    \"Hour 21\" FLOAT,\n    \"Hour 22\" FLOAT,\n    \"Hour 23\" FLOAT,\n    \"Hour 24\" FLOAT\n);\n\n-- Insert data into the Target4 table\nINSERT INTO Target4_9_Valid\nSELECT\n    Date,\n    Hr1, \n    Hr2, \n    Hr3, \n    Hr4, \n    Hr5, \n    Hr6, \n    Hr7, \n    Hr8, \n    Hr9, \n    Hr10, \n    Hr11, \n    Hr12, \n    Hr13, \n    Hr14, \n    Hr15, \n    Hr16, \n    Hr17, \n    Hr18, \n    Hr19, \n    Hr20, \n    Hr21, \n    Hr22, \n    Hr23, \n    Hr24\nFROM Source4_9;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0.96,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy.",
        "Source Data Name": "Source4_10",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "Schema Change Hints": "The part of the day of week should be ignored.",
        "5 Samples of Source Data": "RS6        Wed 01/01/2003        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        Thu 01/02/2003        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        Fri 01/03/2003        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        Sat 01/04/2003        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        Sun 01/05/2003        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target4_10_Valid;\n\n-- Create the second table\nCREATE TABLE Target4_10_Valid (\n    date TEXT,\n    \"Hour 1\" NUMERIC,\n    \"Hour 2\" NUMERIC,\n    \"Hour 3\" NUMERIC,\n    \"Hour 4\" NUMERIC,\n    \"Hour 5\" NUMERIC,\n    \"Hour 6\" NUMERIC,\n    \"Hour 7\" NUMERIC,\n    \"Hour 8\" NUMERIC,\n    \"Hour 9\" NUMERIC,\n    \"Hour 10\" NUMERIC,\n    \"Hour 11\" NUMERIC,\n    \"Hour 12\" NUMERIC,\n    \"Hour 13\" NUMERIC,\n    \"Hour 14\" NUMERIC,\n    \"Hour 15\" NUMERIC,\n    \"Hour 16\" NUMERIC,\n    \"Hour 17\" NUMERIC,\n    \"Hour 18\" NUMERIC,\n    \"Hour 19\" NUMERIC,\n    \"Hour 20\" NUMERIC,\n    \"Hour 21\" NUMERIC,\n    \"Hour 22\" NUMERIC,\n    \"Hour 23\" NUMERIC,\n    \"Hour 24\" NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target4_10_Valid (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT \n    SUBSTRING(Date, 5, 10) AS date,\n    \"1:00\",\n    \"2:00\",\n    \"3:00\",\n    \"4:00\",\n    \"5:00\",\n    \"6:00\",\n    \"7:00\",\n    \"8:00\",\n    \"9:00\",\n    \"10:00\",\n    \"11:00\",\n    \"12:00\",\n    \"13:00\",\n    \"14:00\",\n    \"15:00\",\n    \"16:00\",\n    \"17:00\",\n    \"18:00\",\n    \"19:00\",\n    \"20:00\",\n    \"21:00\",\n    \"22:00\",\n    \"23:00\",\n    \"24:00\"\nFROM Source4_10;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 0.96,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_1",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is a column that contains both the day of week and the date. 1:00 to 24:00 are hourly values of electricity load.",
        "Schema Change Hints": "Only extract the date from CST in the first table to map to \u201cdate\u201d in the second table.",
        "5 Samples of Source Data": "\u201cWed 06/15/2016\u201d        1.654        1.476        1.326        1.332        1.320        1.394        1.567        1.809        1.971        2.142        2.222        2.594        2.755        2.835        2.940        3.083        3.195        3.399        3.392        2.991        2.791        2.869        2.614        2.319\n\u201cThu 06/16/2016\u201d        1.950        1.649        1.546        1.425        1.383        1.473        1.625        1.721        1.698        1.743        1.658        1.798        1.820        1.783        1.714        1.791        1.895        2.029        2.019        1.857        1.870        1.943        1.815        1.463\n\u201cFri 06/17/2016\u201d       1.360        1.170        1.101        1.100        1.114        1.240        1.424        1.656        1.688        1.626        1.733        1.969        2.073        2.276        2.422        2.559        2.589        2.582        2.580        2.474        2.262        2.056        1.882        1.735\n\u201cSat 06/18/2016\u201d        1.455        1.309        1.256        1.180        1.135        1.203        1.272        1.581        1.599        1.638        1.895        2.246        2.255        2.413        2.499        2.632        2.615        2.721        2.574        2.538        2.288        2.300        2.116        1.802\n\u201cSun 06/19/2016\u201d        1.521        1.392        1.214        1.171        1.168        1.300        1.346        1.517        1.643        1.914        2.133        2.435        2.817        2.878        2.790        2.909        2.823        2.810        2.806        2.736        2.547        2.619        2.568        2.104\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_1_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_1_Valid (\n    date TEXT,\n    \"1:00 AM\" FLOAT,\n    \"2:00 AM\" FLOAT,\n    \"3:00 AM\" FLOAT,\n    \"4:00 AM\" FLOAT,\n    \"5:00 AM\" FLOAT,\n    \"6:00 AM\" FLOAT,\n    \"7:00 AM\" FLOAT,\n    \"8:00 AM\" FLOAT,\n    \"9:00 AM\" FLOAT,\n    \"10:00 AM\" FLOAT,\n    \"11:00 AM\" FLOAT,\n    \"12:00 AM\" FLOAT,\n    \"1:00 PM\" FLOAT,\n    \"2:00 PM\" FLOAT,\n    \"3:00 PM\" FLOAT,\n    \"4:00 PM\" FLOAT,\n    \"5:00 PM\" FLOAT,\n    \"6:00 PM\" FLOAT,\n    \"7:00 PM\" FLOAT,\n    \"8:00 PM\" FLOAT,\n    \"9:00 PM\" FLOAT,\n    \"10:00 PM\" FLOAT,\n    \"11:00 PM\" FLOAT,\n    \"12:00 PM\" FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_1_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    TO_CHAR(TO_DATE(SUBSTRING(CST, 5, 10), 'MM/DD/YYYY'), 'MM/DD/YYYY') AS date,\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM Source5_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": "in E, schema have first column empty which is date"
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_2",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": "class is type of class and Description is class description, analysis is type of electricity load. date is date. value1 to value 24 is hourly load values.",
        "Schema Change Hints": "class, description, analysis can be dropped.",
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_2_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_2_Valid (\n    date TEXT,\n    \"1:00 AM\" FLOAT,\n    \"2:00 AM\" FLOAT,\n    \"3:00 AM\" FLOAT,\n    \"4:00 AM\" FLOAT,\n    \"5:00 AM\" FLOAT,\n    \"6:00 AM\" FLOAT,\n    \"7:00 AM\" FLOAT,\n    \"8:00 AM\" FLOAT,\n    \"9:00 AM\" FLOAT,\n    \"10:00 AM\" FLOAT,\n    \"11:00 AM\" FLOAT,\n    \"12:00 AM\" FLOAT,\n    \"1:00 PM\" FLOAT,\n    \"2:00 PM\" FLOAT,\n    \"3:00 PM\" FLOAT,\n    \"4:00 PM\" FLOAT,\n    \"5:00 PM\" FLOAT,\n    \"6:00 PM\" FLOAT,\n    \"7:00 PM\" FLOAT,\n    \"8:00 PM\" FLOAT,\n    \"9:00 PM\" FLOAT,\n    \"10:00 PM\" FLOAT,\n    \"11:00 PM\" FLOAT,\n    \"12:00 PM\" FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_2_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    date,\n    value1 AS \"1:00 AM\",\n    value2 AS \"2:00 AM\",\n    value3 AS \"3:00 AM\",\n    value4 AS \"4:00 AM\",\n    value5 AS \"5:00 AM\",\n    value6 AS \"6:00 AM\",\n    value7 AS \"7:00 AM\",\n    value8 AS \"8:00 AM\",\n    value9 AS \"9:00 AM\",\n    value10 AS \"10:00 AM\",\n    value11 AS \"11:00 AM\",\n    value12 AS \"12:00 AM\",\n    value13 AS \"1:00 PM\",\n    value14 AS \"2:00 PM\",\n    value15 AS \"3:00 PM\",\n    value16 AS \"4:00 PM\",\n    value17 AS \"5:00 PM\",\n    value18 AS \"6:00 PM\",\n    value19 AS \"7:00 PM\",\n    value20 AS \"8:00 PM\",\n    value21 AS \"9:00 PM\",\n    value22 AS \"10:00 PM\",\n    value23 AS \"11:00 PM\",\n    value24 AS \"12:00 PM\"\nFROM Source5_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_3",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "DT_STRATA represents date. DOW is in the type of Text. PCT_HOURLY_0100 and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/16        H        .001222017108240        .001274017836250        .001131015834222        .001222017108240        .001222017108240        .001261017654247        .001144016016224        .001170016380229        .001170016380229        .001209016926237        .001183016562232        .001235017290242        .001157016198227        .001001014014196        .001014014196199        .001144016016224        .001209016926237        .001547021658303        .001560021840306        .001534021476301        .001573022022308        .001573022022308        .001326018564260        .001170016380229        .000000000000000\n1/2/16        7        .001313018382257        .001248017472245        .001222017108240        .001196016744234        .001196016744234        .001287018018252        .001300018200255        .001339018746262        .001352018928265        .001404019656275        .001417019838278        .001326018564260        .001313018382257        .001352018928265        .001339018746262        .001391019474273        .001404019656275        .001495020930293        .001521021294298        .001508021112296        .001534021476301        .001534021476301        .001469020566288        .001339018746262        .000000000000000\n1/3/16        1        .001157016198227        .001092015288214        .001053014742206        .001040014560204        .001040014560204        .001066014924209        .001053014742206        .001144016016224        .001183016562232        .001248017472245        .001326018564260        .001404019656275        .001313018382257        .001300018200255        .001313018382257        .001261017654247        .001261017654247        .001430020020280        .001469020566288        .001404019656275        .001456020384285        .001378019292270        .001287018018252        .001222017108240        .000000000000000\n1/4/16        2        .001105015470217        .001053014742206        .001001014014196        .000975013650191        .001053014742206        .001079015106211        .001183016562232        .001170016380229        .001274017836250        .001170016380229        .001157016198227        .001196016744234        .001196016744234        .001144016016224        .001170016380229        .001261017654247        .001300018200255        .001495020930293        .001586022204311        .001651023114324        .001651023114324        .001521021294298        .001417019838278        .001274017836250        .000000000000000\n1/5/16        3        .001183016562232        .001170016380229        .001079015106211        .001131015834222        .001170016380229        .001183016562232        .001300018200255        .001365019110268        .001404019656275        .001378019292270        .001352018928265        .001326018564260        .001365019110268        .001339018746262        .001300018200255        .001313018382257        .001404019656275        .001638022932321        .001716024024336        .001677023478329        .001625022750319        .001638022932321        .001573022022308        .001417019838278        .000000000000000\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_3_Valid;\nCREATE TABLE Target5_3_Valid (\n    date TEXT,\n    \"1:00 AM\" NUMERIC,\n    \"2:00 AM\" NUMERIC,\n    \"3:00 AM\" NUMERIC,\n    \"4:00 AM\" NUMERIC,\n    \"5:00 AM\" NUMERIC,\n    \"6:00 AM\" NUMERIC,\n    \"7:00 AM\" NUMERIC,\n    \"8:00 AM\" NUMERIC,\n    \"9:00 AM\" NUMERIC,\n    \"10:00 AM\" NUMERIC,\n    \"11:00 AM\" NUMERIC,\n    \"12:00 AM\" NUMERIC,\n    \"1:00 PM\" NUMERIC,\n    \"2:00 PM\" NUMERIC,\n    \"3:00 PM\" NUMERIC,\n    \"4:00 PM\" NUMERIC,\n    \"5:00 PM\" NUMERIC,\n    \"6:00 PM\" NUMERIC,\n    \"7:00 PM\" NUMERIC,\n    \"8:00 PM\" NUMERIC,\n    \"9:00 PM\" NUMERIC,\n    \"10:00 PM\" NUMERIC,\n    \"11:00 PM\" NUMERIC,\n    \"12:00 PM\" NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_3_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    TO_CHAR(TO_DATE(DT_STRATA, 'MM/DD/YY'), 'MM/DD/YYYY') AS date,\n    PCT_HOURLY_0100 AS \"1:00 AM\",\n    PCT_HOURLY_0200 AS \"2:00 AM\",\n    PCT_HOURLY_0300 AS \"3:00 AM\",\n    PCT_HOURLY_0400 AS \"4:00 AM\",\n    PCT_HOURLY_0500 AS \"5:00 AM\",\n    PCT_HOURLY_0600 AS \"6:00 AM\",\n    PCT_HOURLY_0700 AS \"7:00 AM\",\n    PCT_HOURLY_0800 AS \"8:00 AM\",\n    PCT_HOURLY_0900 AS \"9:00 AM\",\n    PCT_HOURLY_1000 AS \"10:00 AM\",\n    PCT_HOURLY_1100 AS \"11:00 AM\",\n    PCT_HOURLY_1200 AS \"12:00 AM\",\n    PCT_HOURLY_1300 AS \"1:00 PM\",\n    PCT_HOURLY_1400 AS \"2:00 PM\",\n    PCT_HOURLY_1500 AS \"3:00 PM\",\n    PCT_HOURLY_1600 AS \"4:00 PM\",\n    PCT_HOURLY_1700 AS \"5:00 PM\",\n    PCT_HOURLY_1800 AS \"6:00 PM\",\n    PCT_HOURLY_1900 AS \"7:00 PM\",\n    PCT_HOURLY_2000 AS \"8:00 PM\",\n    PCT_HOURLY_2100 AS \"9:00 PM\",\n    PCT_HOURLY_2200 AS \"10:00 PM\",\n    PCT_HOURLY_2300 AS \"11:00 PM\",\n    PCT_HOURLY_2400 AS \"12:00 PM\"\nFROM Source5_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_4",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/13        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/13        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/13        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/13        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/13        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_4_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_4_Valid (\n    date TEXT,\n    \"1:00 AM\" FLOAT,\n    \"2:00 AM\" FLOAT,\n    \"3:00 AM\" FLOAT,\n    \"4:00 AM\" FLOAT,\n    \"5:00 AM\" FLOAT,\n    \"6:00 AM\" FLOAT,\n    \"7:00 AM\" FLOAT,\n    \"8:00 AM\" FLOAT,\n    \"9:00 AM\" FLOAT,\n    \"10:00 AM\" FLOAT,\n    \"11:00 AM\" FLOAT,\n    \"12:00 AM\" FLOAT,\n    \"1:00 PM\" FLOAT,\n    \"2:00 PM\" FLOAT,\n    \"3:00 PM\" FLOAT,\n    \"4:00 PM\" FLOAT,\n    \"5:00 PM\" FLOAT,\n    \"6:00 PM\" FLOAT,\n    \"7:00 PM\" FLOAT,\n    \"8:00 PM\" FLOAT,\n    \"9:00 PM\" FLOAT,\n    \"10:00 PM\" FLOAT,\n    \"11:00 PM\" FLOAT,\n    \"12:00 PM\" FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_4_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT \n    TO_CHAR(TO_DATE(Date, 'MM/DD/YY'), 'MM/DD/YYYY') AS date,\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM Source5_4;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_5",
        "Source Data Schema": "date,Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": "first column does not have name, its a date column. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_5_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_5_Valid (\n    date TEXT,\n    \"1:00 AM\" NUMERIC,\n    \"2:00 AM\" NUMERIC,\n    \"3:00 AM\" NUMERIC,\n    \"4:00 AM\" NUMERIC,\n    \"5:00 AM\" NUMERIC,\n    \"6:00 AM\" NUMERIC,\n    \"7:00 AM\" NUMERIC,\n    \"8:00 AM\" NUMERIC,\n    \"9:00 AM\" NUMERIC,\n    \"10:00 AM\" NUMERIC,\n    \"11:00 AM\" NUMERIC,\n    \"12:00 AM\" NUMERIC,\n    \"1:00 PM\" NUMERIC,\n    \"2:00 PM\" NUMERIC,\n    \"3:00 PM\" NUMERIC,\n    \"4:00 PM\" NUMERIC,\n    \"5:00 PM\" NUMERIC,\n    \"6:00 PM\" NUMERIC,\n    \"7:00 PM\" NUMERIC,\n    \"8:00 PM\" NUMERIC,\n    \"9:00 PM\" NUMERIC,\n    \"10:00 PM\" NUMERIC,\n    \"11:00 PM\" NUMERIC,\n    \"12:00 PM\" NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_5_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    date,\n    \"Hour 1\",\n    \"Hour 2\",\n    \"Hour 3\",\n    \"Hour 4\",\n    \"Hour 5\",\n    \"Hour 6\",\n    \"Hour 7\",\n    \"Hour 8\",\n    \"Hour 9\",\n    \"Hour 10\",\n    \"Hour 11\",\n    \"Hour 12\",\n    \"Hour 13\",\n    \"Hour 14\",\n    \"Hour 15\",\n    \"Hour 16\",\n    \"Hour 17\",\n    \"Hour 18\",\n    \"Hour 19\",\n    \"Hour 20\",\n    \"Hour 21\",\n    \"Hour 22\",\n    \"Hour 23\",\n    \"Hour 24\"\nFROM Source5_5;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_6",
        "Source Data Schema": "Company Rate Rate Code Date Hr1 Hr2 Hr3 Hr4 Hr5 Hr6 Hr7 Hr8 Hr9 Hr10 Hr11 Hr12 Hr13 Hr14 Hr15 Hr16 Hr17 Hr18 Hr19 Hr20 Hr21 Hr22 Hr23 Hr24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Boston Edison        G1        A9/B1        1/1/14        0.91880        0.90204        0.90953        0.89743        0.90784        0.91352        0.90426        0.84936        0.83371        0.88786        0.86311        0.93132        0.91851        0.84487        0.87496        0.84075        0.98534        1.02454        0.98755        0.99935        0.98452        0.96688        0.95505        0.91513\nBoston Edison        G1        A9/B1        1/2/14        0.87892        0.88134        0.87665        0.90858        0.91542        0.92161        0.93303        1.01043        1.14976        1.25251        1.28495        1.34673        1.31238        1.30880        1.30000        1.19045        1.16443        1.17685        1.12458        1.05529        0.98511        0.96193        0.96526        0.97122\nBoston Edison        G1        A9/B1        1/3/14        0.93044        0.92009        0.92011        0.93063        0.93666        0.94961        0.93255        0.91908        0.91562        0.96811        1.00253        1.06153        1.19003        1.19289        1.22758        1.21124        1.20832        1.22837        1.17335        1.17034        1.09601        1.08531        1.06987        1.00114\nBoston Edison        G1        A9/B1        1/4/14        0.99430        0.99976        1.00380        1.01784        1.03292        1.01593        1.03356        1.01903        1.12290        1.19339        1.23023        1.24012        1.24816        1.30648        1.21167        1.11098        1.18366        1.18973        1.15116        1.10983        1.05467        1.01286        1.03867        1.02930\nBoston Edison        G1        A9/B1        1/5/14        0.96557        0.95280        0.91880        0.91824        0.91423        0.92391        0.90871        0.87327        0.87996        0.91213        0.94840        0.91633        0.88302        0.92150        1.04565        0.96922        1.03708        1.03603        1.05365        1.03192        0.99591        0.95368        0.93241        0.93497\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_6_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_6_Valid (\n    date TEXT,\n    \"1:00 AM\" NUMERIC,\n    \"2:00 AM\" NUMERIC,\n    \"3:00 AM\" NUMERIC,\n    \"4:00 AM\" NUMERIC,\n    \"5:00 AM\" NUMERIC,\n    \"6:00 AM\" NUMERIC,\n    \"7:00 AM\" NUMERIC,\n    \"8:00 AM\" NUMERIC,\n    \"9:00 AM\" NUMERIC,\n    \"10:00 AM\" NUMERIC,\n    \"11:00 AM\" NUMERIC,\n    \"12:00 AM\" NUMERIC,\n    \"1:00 PM\" NUMERIC,\n    \"2:00 PM\" NUMERIC,\n    \"3:00 PM\" NUMERIC,\n    \"4:00 PM\" NUMERIC,\n    \"5:00 PM\" NUMERIC,\n    \"6:00 PM\" NUMERIC,\n    \"7:00 PM\" NUMERIC,\n    \"8:00 PM\" NUMERIC,\n    \"9:00 PM\" NUMERIC,\n    \"10:00 PM\" NUMERIC,\n    \"11:00 PM\" NUMERIC,\n    \"12:00 PM\" NUMERIC\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_6_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    Date,\n    Hr1,\n    Hr2,\n    Hr3,\n    Hr4,\n    Hr5,\n    Hr6,\n    Hr7,\n    Hr8,\n    Hr9,\n    Hr10,\n    Hr11,\n    Hr12,\n    Hr13,\n    Hr14,\n    Hr15,\n    Hr16,\n    Hr17,\n    Hr18,\n    Hr19,\n    Hr20,\n    Hr21,\n    Hr22,\n    Hr23,\n    Hr24\nFROM Source5_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_7",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "Schema Change Hints": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "5 Samples of Source Data": "Only extract the date from DATA in the first table to map to \u201cdate\u201d in the second table.Ignore the part of day of week.",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_7_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_7_Valid (\n    date TEXT,\n    \"1:00 AM\" FLOAT,\n    \"2:00 AM\" FLOAT,\n    \"3:00 AM\" FLOAT,\n    \"4:00 AM\" FLOAT,\n    \"5:00 AM\" FLOAT,\n    \"6:00 AM\" FLOAT,\n    \"7:00 AM\" FLOAT,\n    \"8:00 AM\" FLOAT,\n    \"9:00 AM\" FLOAT,\n    \"10:00 AM\" FLOAT,\n    \"11:00 AM\" FLOAT,\n    \"12:00 AM\" FLOAT,\n    \"1:00 PM\" FLOAT,\n    \"2:00 PM\" FLOAT,\n    \"3:00 PM\" FLOAT,\n    \"4:00 PM\" FLOAT,\n    \"5:00 PM\" FLOAT,\n    \"6:00 PM\" FLOAT,\n    \"7:00 PM\" FLOAT,\n    \"8:00 PM\" FLOAT,\n    \"9:00 PM\" FLOAT,\n    \"10:00 PM\" FLOAT,\n    \"11:00 PM\" FLOAT,\n    \"12:00 PM\" FLOAT\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_7_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    SUBSTRING(Date, 5, 10) AS date,\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM Source5_7;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_8",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "2/22/2018 0:30        22.875\n2/22/2018 0:40        22.937\n2/22/2018 0:50        22.937\n2/22/2018 1:00        22.937\n2/22/2018 1:10        23",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_8_Valid;\n\n-- Create the second table\nCREATE TABLE Target5_8_Valid (\n    date TEXT,\n    \"1:00 AM\" DECIMAL(5,3),\n    \"2:00 AM\" DECIMAL(5,3),\n    \"3:00 AM\" DECIMAL(5,3),\n    \"4:00 AM\" DECIMAL(5,3),\n    \"5:00 AM\" DECIMAL(5,3),\n    \"6:00 AM\" DECIMAL(5,3),\n    \"7:00 AM\" DECIMAL(5,3),\n    \"8:00 AM\" DECIMAL(5,3),\n    \"9:00 AM\" DECIMAL(5,3),\n    \"10:00 AM\" DECIMAL(5,3),\n    \"11:00 AM\" DECIMAL(5,3),\n    \"12:00 PM\" DECIMAL(5,3),\n    \"1:00 PM\" DECIMAL(5,3),\n    \"2:00 PM\" DECIMAL(5,3),\n    \"3:00 PM\" DECIMAL(5,3),\n    \"4:00 PM\" DECIMAL(5,3),\n    \"5:00 PM\" DECIMAL(5,3),\n    \"6:00 PM\" DECIMAL(5,3),\n    \"7:00 PM\" DECIMAL(5,3),\n    \"8:00 PM\" DECIMAL(5,3),\n    \"9:00 PM\" DECIMAL(5,3),\n    \"10:00 PM\" DECIMAL(5,3),\n    \"11:00 PM\" DECIMAL(5,3),\n    \"12:00 AM\" DECIMAL(5,3)\n);\n\n-- Insert all rows from the first table into the second table\nINSERT INTO Target5_8_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\")\nSELECT\n    TO_CHAR(date, 'MM/DD/YYYY') AS date,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN cerc_templogger_1 END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN cerc_templogger_1 END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN cerc_templogger_1 END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN cerc_templogger_1 END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN cerc_templogger_1 END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN cerc_templogger_1 END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN cerc_templogger_1 END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN cerc_templogger_1 END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN cerc_templogger_1 END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN cerc_templogger_1 END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN cerc_templogger_1 END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN cerc_templogger_1 END) AS \"12:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN cerc_templogger_1 END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN cerc_templogger_1 END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN cerc_templogger_1 END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN cerc_templogger_1 END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN cerc_templogger_1 END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN cerc_templogger_1 END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN cerc_templogger_1 END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN cerc_templogger_1 END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN cerc_templogger_1 END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN cerc_templogger_1 END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN cerc_templogger_1 END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN cerc_templogger_1 END) AS \"12:00 AM\"\nFROM Source5_8\nGROUP BY TO_CHAR(date, 'MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_9",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "1/1/2018 0:00        67.9\n1/1/2018 0:01        67.9\n1/1/2018 0:02        67.9\n1/1/2018 0:03        67.9\n1/1/2018 0:04        67.9",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_9_Valid;\n\n-- Create the validation table\nCREATE TABLE Target5_9_Valid (\n    date TEXT,\n    \"1:00 AM\" DECIMAL(5,3),\n    \"2:00 AM\" DECIMAL(5,3),\n    \"3:00 AM\" DECIMAL(5,3),\n    \"4:00 AM\" DECIMAL(5,3),\n    \"5:00 AM\" DECIMAL(5,3),\n    \"6:00 AM\" DECIMAL(5,3),\n    \"7:00 AM\" DECIMAL(5,3),\n    \"8:00 AM\" DECIMAL(5,3),\n    \"9:00 AM\" DECIMAL(5,3),\n    \"10:00 AM\" DECIMAL(5,3),\n    \"11:00 AM\" DECIMAL(5,3),\n    \"12:00 PM\" DECIMAL(5,3),\n    \"1:00 PM\" DECIMAL(5,3),\n    \"2:00 PM\" DECIMAL(5,3),\n    \"3:00 PM\" DECIMAL(5,3),\n    \"4:00 PM\" DECIMAL(5,3),\n    \"5:00 PM\" DECIMAL(5,3),\n    \"6:00 PM\" DECIMAL(5,3),\n    \"7:00 PM\" DECIMAL(5,3),\n    \"8:00 PM\" DECIMAL(5,3),\n    \"9:00 PM\" DECIMAL(5,3),\n    \"10:00 PM\" DECIMAL(5,3),\n    \"11:00 PM\" DECIMAL(5,3),\n    \"12:00 AM\" DECIMAL(5,3)\n);\n\n-- Insert all rows from the first table into the validation table\nINSERT INTO Target5_9_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\")\nSELECT\n    TO_CHAR(date, 'MM/DD/YYYY') AS date,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_16_temp END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_16_temp END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_16_temp END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_16_temp END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_16_temp END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_16_temp END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_16_temp END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_16_temp END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_16_temp END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_16_temp END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_16_temp END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_16_temp END) AS \"12:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_16_temp END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_16_temp END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_16_temp END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_16_temp END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_16_temp END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_16_temp END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_16_temp END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_16_temp END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_16_temp END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_16_temp END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_16_temp END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN zone_16_temp END) AS \"12:00 AM\"\nFROM Source5_9\nGROUP BY TO_CHAR(date, 'MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "The date column is in the text type and it should in the form of mm/dd/yyyy. Other attributes are hourly values.",
        "Source Data Name": "Source5_10",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": "Use aggregation and get the MAX of each our.",
        "5 Samples of Source Data": "9/15/2018 10:00        73\n9/15/2018 10:05        73\n9/15/2018 10:10        73\n9/15/2018 10:15        73\n9/15/2018 10:20        73",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target5_10_Valid;\n\n-- Create the validation table\nCREATE TABLE Target5_10_Valid (\n    date TEXT,\n    \"1:00 AM\" DECIMAL(5,3),\n    \"2:00 AM\" DECIMAL(5,3),\n    \"3:00 AM\" DECIMAL(5,3),\n    \"4:00 AM\" DECIMAL(5,3),\n    \"5:00 AM\" DECIMAL(5,3),\n    \"6:00 AM\" DECIMAL(5,3),\n    \"7:00 AM\" DECIMAL(5,3),\n    \"8:00 AM\" DECIMAL(5,3),\n    \"9:00 AM\" DECIMAL(5,3),\n    \"10:00 AM\" DECIMAL(5,3),\n    \"11:00 AM\" DECIMAL(5,3),\n    \"12:00 PM\" DECIMAL(5,3),\n    \"1:00 PM\" DECIMAL(5,3),\n    \"2:00 PM\" DECIMAL(5,3),\n    \"3:00 PM\" DECIMAL(5,3),\n    \"4:00 PM\" DECIMAL(5,3),\n    \"5:00 PM\" DECIMAL(5,3),\n    \"6:00 PM\" DECIMAL(5,3),\n    \"7:00 PM\" DECIMAL(5,3),\n    \"8:00 PM\" DECIMAL(5,3),\n    \"9:00 PM\" DECIMAL(5,3),\n    \"10:00 PM\" DECIMAL(5,3),\n    \"11:00 PM\" DECIMAL(5,3),\n    \"12:00 AM\" DECIMAL(5,3)\n);\n\n-- Insert all rows from the first table into the validation table\nINSERT INTO Target5_10_Valid (date, \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 PM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 AM\")\nSELECT\n    TO_CHAR(date, 'MM/DD/YYYY') AS date,\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_016_cooling_sp END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_016_cooling_sp END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_016_cooling_sp END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_016_cooling_sp END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_016_cooling_sp END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_016_cooling_sp END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_016_cooling_sp END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_016_cooling_sp END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_016_cooling_sp END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_016_cooling_sp END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_016_cooling_sp END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_016_cooling_sp END) AS \"12:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_016_cooling_sp END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_016_cooling_sp END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_016_cooling_sp END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_016_cooling_sp END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_016_cooling_sp END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_016_cooling_sp END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_016_cooling_sp END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_016_cooling_sp END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_016_cooling_sp END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_016_cooling_sp END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_016_cooling_sp END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN zone_016_cooling_sp END) AS \"12:00 AM\"\nFROM Source5_10\nGROUP BY TO_CHAR(date, 'MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target6",
        "Target Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 LOSS_FACTOR",
        "Target Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 are nondecreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, and HIGH_3 = LOW_4. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 are some coefficients.",
        "Source Data Name": "Source6_1",
        "Source Data Schema": "CLASS SEASON_DAY_TYPE HOUR T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3",
        "Source Data Description": "CLASS is class type, SEASON_DAY_TYPE is composed of a month and a day type, where the day type can either be WD (weekday) or WE (weekend). T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3 are nondecreasing temperatures, where T_MAX_1 = T_MIN_2 and T_MAX_2 = T_MIN_3. ",
        "Schema Change Hints": "Extract only the first word as month from SEASON_DAY_TYPE and convert to so that it maps to MONTH in the target schema. YEAR and DAY are not in this schema, so please just ignore them.",
        "5 Samples of Source Data": "RS0, January WD, 1, 9, 22, 22, 35.5, 35.5, 62\nRS0, February WD, 2, 10, 22, 22, 35.5, 35.5, 63\nRS0, March WD, 3, 9, 21, 21, 34.5, 34.5, 65\nRS0, May WD, 4, 10, 21.5, 21.5, 34.5, 35.5, 66\nRS0, December WD, 5, 9, 26.5, 26.5, 66, NULL, NULL",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_6_1_Valid;\n\nCREATE TABLE target_6_1_Valid (\n    PROFILE_CLASS VARCHAR,\n    YEAR INTEGER,\n    MONTH INTEGER,\n    DAY INTEGER,\n    HOUR NUMERIC,\n    LOW_1 NUMERIC,\n    HIGH_1 NUMERIC,\n    LOW_2 NUMERIC,\n    HIGH_2 NUMERIC,\n    LOW_3 NUMERIC,\n    HIGH_3 NUMERIC,\n    LOW_4 NUMERIC,\n    HIGH_4 NUMERIC,\n    CONSTANT NUMERIC,\n    COEFF_1 NUMERIC,\n    COEFF_2 NUMERIC,\n    COEFF_3 NUMERIC,\n    COEFF_4 NUMERIC,\n    LOSS_FACTOR NUMERIC\n);\n\nINSERT INTO target_6_1_Valid (PROFILE_CLASS, MONTH, HOUR, LOW_1, HIGH_1, LOW_2, HIGH_2, LOW_3, HIGH_3)\nSELECT \n    CLASS AS PROFILE_CLASS,\n    CASE \n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Jan' THEN 1\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Feb' THEN 2\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Mar' THEN 3\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Apr' THEN 4\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'May' THEN 5\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Jun' THEN 6\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Jul' THEN 7\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Aug' THEN 8\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Sep' THEN 9\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Oct' THEN 10\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Nov' THEN 11\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Dec' THEN 12\n    END AS MONTH,\n    HOUR,\n    T_MIN_1 AS LOW_1,\n    T_MAX_1 AS HIGH_1,\n    T_MIN_2 AS LOW_2,\n    T_MAX_2 AS HIGH_2,\n    T_MIN_3 AS LOW_3,\n    T_MAX_3 AS HIGH_3\nFROM Source6_1;\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.63,
        "Prompt-1 Results": 0.95,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target6",
        "Target Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 LOSS_FACTOR",
        "Target Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 are nondecreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, and HIGH_3 = LOW_4. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 are some coefficients.",
        "Source Data Name": "Source6_2",
        "Source Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Source Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Schema Change Hints": "Only insert Hour, Constant, Coefficient, Low_End, and High_End from the first table to the second table. Ignore the others, such as Season, DayType, and Temperature_Range. Map Coefficient only to COEFF_1 only , but not others. Map Low_End to LOW_1 only, but not others. Map High_End to HIGH_4 only, but not others.\n",
        "5 Samples of Source Data": "SUMMER, WEEKDAY, 1, 73.1, 165.6, -24.96991, 0.0, 73.11\nSUMMER, WEEKDAY, 1, 73.1, 165.6, -24.96991, 0.0, 73.11\nSUMMER, WEEKDAY, 2, 73.1, 165.6, -24.96991, 0.0, 73.11\nSUMMER, WEEKDAY, 2, 73.1, 165.6, -24.96991, 0.0, 73.11\nSUMMER, WEEKDAY, 3, 73.1, 165.6, -24.96991, 0.0, 73.11",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_6_2_Valid; \n\nCREATE TABLE target_6_2_Valid (\n    PROFILE_CLASS VARCHAR(10),\n    YEAR INTEGER,\n    MONTH INTEGER,\n    DAY INTEGER,\n    HOUR NUMERIC,\n    LOW_1 NUMERIC,\n    HIGH_1 NUMERIC,\n    LOW_2 NUMERIC,\n    HIGH_2 NUMERIC,\n    LOW_3 NUMERIC,\n    HIGH_3 NUMERIC,\n    LOW_4 NUMERIC,\n    HIGH_4 NUMERIC,\n    CONSTANT NUMERIC,\n    COEFF_1 NUMERIC,\n    COEFF_2 NUMERIC,\n    COEFF_3 NUMERIC,\n    COEFF_4 NUMERIC,\n    LOSS_FACTOR NUMERIC\n);\n\nINSERT INTO target_6_2_Valid (HOUR, LOW_1, HIGH_4, CONSTANT, COEFF_1)\nSELECT\n    Hour AS HOUR,\n    Low_End AS LOW_1,\n    High_End AS HIGH_4,\n    Constant AS CONSTANT,\n    Coefficient AS COEFF_1\nFROM Source6_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": 0.74,
        "Complexity": NaN,
        "Remark or Note": "When data is complex, will have a \"numeric field overflow error\""
    },
    {
        "Target Data Name": "Target7",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source7_1",
        "Source Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 LOSS_FACTOR",
        "Source Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 are non decreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, and HIGH_3 = LOW_4. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 are some coefficients.",
        "Schema Change Hints": "Convert MONTH to Season: Map the first three months (1 to 3) to SPRING; Map the second three months (4 to 6) to SUMMER; Map the third three months (7 to 9) to FALL; Map the fourth three months (10 to 12) to WINTER. Convert Day to DayType: Map 1 to 5 to WEEKDAY; Map 6 to 7 to WEEKEND. High_End is the highest temperature computed by the maximum not NULL value in (HIGH_1, HIGH_2, HIGH_3, HIGH_4). Low_End is the lowest temperature computed by the minimum not NULL value in (LOW_1, LOW_2, LOW_3, LOW_4). Temperature_Range is the highest temperature minus the lowest temperature.",
        "5 Samples of Source Data": "BL 2013.0 1.0 1.0 100.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 27.14508803 -0.16848963 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 200.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 26.96353506 -0.17599548 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 300.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 27.01939240 -0.18220682 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 400.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 26.48350120 -0.17713677 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 500.0 2.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 26.18736094 -0.16678692 NULL NULL NULL 1.08047231",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_7_1_Valid;\nCREATE TABLE target_7_1_Valid (\n    Season VARCHAR(10),\n    DayType VARCHAR(10),\n    Hour NUMERIC,\n    Temperature_Range NUMERIC,\n    Constant NUMERIC,\n    Coefficient NUMERIC,\n    Low_End NUMERIC,\n    High_End NUMERIC\n);\n\n\nINSERT INTO target_7_1_Valid (Season, DayType, Hour, Temperature_Range, Constant, Coefficient, Low_End, High_End)\nSELECT\n    CASE\n        WHEN MONTH BETWEEN 1 AND 3 THEN 'SPRING'\n        WHEN MONTH BETWEEN 4 AND 6 THEN 'SUMMER'\n        WHEN MONTH BETWEEN 7 AND 9 THEN 'FALL'\n        ELSE 'WINTER'\n    END AS Season,\n    CASE\n        WHEN DAY BETWEEN 1 AND 5 THEN 'WEEKDAY'\n        ELSE 'WEEKEND'\n    END AS DayType,\n    HOUR AS Hour,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4) - LEAST(LOW_1, LOW_2, LOW_3, LOW_4) AS Temperature_Range,\n    CONSTANT AS Constant,\n    COEFF_1 AS Coefficient,\n    LEAST(LOW_1, LOW_2, LOW_3, LOW_4) AS Low_End,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4) AS High_End\nFROM Source7_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.75,
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": "y = mx + b; low and hig end temperature"
    },
    {
        "Target Data Name": "Target7",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source7_2",
        "Source Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR NUMBER_OF_RANGES LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 LOW_5 HIGH_5 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 COEFF_5 LOSS_FACTOR",
        "Source Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 LOW_5 HIGH_5 are nondecreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, HIGH_3 = LOW_4, and HIGH_4 = LOW_5. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 COEFF_5 are some coefficients.",
        "Schema Change Hints": "Convert MONTH to Season: Map the first three months (1 to 3) to SPRING; Map the second three months (4 to 6) to SUMMER; Map the third three months (7 to 9) to FALL; Map the fourth three months (10 to 12) to WINTER. Convert Day to DayType: Map 1 to 5 to WEEKDAY; Map 6 to 7 to WEEKEND. High_End is the highest temperature computed by the maximum not NULL value in (HIGH_1, HIGH_2, HIGH_3, HIGH_4, HIGH_5). Low_End is the lowest temperature computed by the minimum not NULL value in (LOW_1, LOW_2, LOW_3, LOW_4, LOW_5). Temperature_Range is the highest temperature minus the lowest temperature.",
        "5 Samples of Source Data": "BL 2013.0 1.0 1.0 100.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 27.14508803 -0.16848963 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 200.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 26.96353506 -0.17599548 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 300.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 27.01939240 -0.18220682 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 400.0 1.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 26.48350120 -0.17713677 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 500.0 3.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 26.18736094 -0.16678692 NULL NULL NULL NULL 1.08047231",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_7_2_Valid;\nCREATE TABLE target_7_2_Valid (\n    Season VARCHAR(10),\n    DayType VARCHAR(10),\n    Hour NUMERIC,\n    Temperature_Range NUMERIC,\n    Constant NUMERIC,\n    Coefficient NUMERIC,\n    Low_End NUMERIC,\n    High_End NUMERIC\n);\n\n\nINSERT INTO target_7_2_Valid (Season, DayType, Hour, Temperature_Range, Constant, Coefficient, Low_End, High_End)\nSELECT\n    CASE\n        WHEN MONTH BETWEEN 1 AND 3 THEN 'SPRING'\n        WHEN MONTH BETWEEN 4 AND 6 THEN 'SUMMER'\n        WHEN MONTH BETWEEN 7 AND 9 THEN 'FALL'\n        ELSE 'WINTER'\n    END AS Season,\n    CASE\n        WHEN DAY BETWEEN 1 AND 5 THEN 'WEEKDAY'\n        ELSE 'WEEKEND'\n    END AS DayType,\n    HOUR AS Hour,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4, HIGH_5) - LEAST(LOW_1, LOW_2, LOW_3, LOW_4, LOW_5) AS Temperature_Range,\n    CONSTANT AS Constant,\n    COEFF_1 AS Coefficient,\n    LEAST(LOW_1, LOW_2, LOW_3, LOW_4, LOW_5) AS Low_End,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4, HIGH_5) AS High_End\nFROM Source7_2;",
        "Prompt-3 Results": "Fail",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": "Insertion fail: values to be inserted have 8 consecutive NULLs but generated insert statement has only 7 consecutive NULLs "
    },
    {
        "Target Data Name": "Target7",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source7_3",
        "Source Data Schema": "CLASS SEASON_DAY_TYPE HOUR T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3",
        "Source Data Description": "CLASS is class type, SEASON_DAY_TYPE is composed of a month and a day type, where the day type can either be WD (weekday) or WE (weekend). T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3 are non decreasing temperatures, where T_MAX_1 = T_MIN_2 and T_MAX_2 = T_MIN_3. ",
        "Schema Change Hints": "Class is not in the target schema so just ignore it. Follow these rules to convert SEASON_DAY_TYPE in the first table to Season and DayType in the second table: split SEASON_DAY_TYPE into two words, the first word maps a month to Season: Map January or February or Match to SPRING; Map April or May or June to SUMMER; Map July or August or September to FALL; Map October or November or December to WINTER ; the second word maps to DayType by expanding \u201cWD\u201d to \u201cWEEKDAY\u201d and \u201cWE\u201d to \u201cWEEKEND\u201d. High_End is the highest temperature computed by the maximum not NULL value in (T_MAX_1, T_MAX_2, T_MAX_3). Low_End is the lowest temperature computed by the minimum not NULL value in (T_MIN_1, T_MIN_2, T_MIN_3). Temperature_Range is the highest temperature minus the lowest temperature.",
        "5 Samples of Source Data": "RS0, January WD, 1, 9, 22, 22, 35.5, 35.5, 62\nRS0, February WD, 2, 10, 22, 22, 35.5, 35.5, 63\nRS0, March WD, 3, 9, 21, 21, 34.5, 34.5, 65\nRS0, May WD, 4, 10, 21.5, 21.5, 34.5, 35.5, 66\nRS0, December WD, 5, 9, 26.5, 26.5, 66, NULL, NULL",
        "Ground Truth SQL": "DROP TABLE IF EXISTS  target_7_3_Valid;\nCREATE TABLE target_7_3_Valid (\n    Season VARCHAR(10),\n    DayType VARCHAR(10),\n    Hour INT,\n    Temperature_Range NUMERIC,\n    Constant NUMERIC,\n    Coefficient NUMERIC,\n    Low_End NUMERIC,\n    High_End NUMERIC\n);\n\n\nINSERT INTO target_7_3_Valid (Season, DayType, Hour, Temperature_Range, Low_End, High_End)\nSELECT\n    CASE\n        WHEN SEASON_DAY_TYPE LIKE 'January%' OR SEASON_DAY_TYPE LIKE 'February%' OR SEASON_DAY_TYPE LIKE 'March%' THEN 'SPRING'\n        WHEN SEASON_DAY_TYPE LIKE 'April%' OR SEASON_DAY_TYPE LIKE 'May%' OR SEASON_DAY_TYPE LIKE 'June%' THEN 'SUMMER'\n        WHEN SEASON_DAY_TYPE LIKE 'July%' OR SEASON_DAY_TYPE LIKE 'August%' OR SEASON_DAY_TYPE LIKE 'September%' THEN 'FALL'\n        ELSE 'WINTER'\n    END AS Season,\n    CASE\n        WHEN SEASON_DAY_TYPE LIKE '%WD' THEN 'WEEKDAY'\n        ELSE 'WEEKEND'\n    END AS DayType,\n    HOUR AS Hour,\n    GREATEST(T_MAX_1, T_MAX_2, T_MAX_3) - LEAST(T_MIN_1, T_MIN_2, T_MIN_3) AS Temperature_Range,\n    LEAST(T_MIN_1, T_MIN_2, T_MIN_3) AS Low_End,\n    GREATEST(T_MAX_1, T_MAX_2, T_MAX_3) AS High_End\nFROM Source7_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.5,
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target8",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season is one of (SPRING, SUMMER, FALL, WINTER). Low_End is the lowest temperature measured. High_End is the highest temperature measured. Both Low_End and High_End are float numbers.",
        "Source Data Name": "Source8_1",
        "Source Data Schema": "date, cerc_logger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is the zone temperature of the interior zone.\n ",
        "Schema Change Hints": "Please follow the following two steps to insert the first table to the second table\nFirst step, map \"date\" in the first table to \"Season\" and \"Hour\" in the second table by extracting month and hour from \"date\", and convert month to season. \nSecond step, group rows by \"Season\" and \"Hour\", map \"Low_End\" to the minumum value in \"cerc_logger_1\" and map \"High_End\" to the maxiumum value in \"cerc_logger_1\".",
        "5 Samples of Source Data": "2/22/2018 0:30        22.875\n2/22/2018 0:40        22.937\n2/22/2018 0:50        22.937\n2/22/2018 1:00        22.937\n2/22/2018 1:10        23",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_8_1_Valid;\n\nCREATE TABLE target_8_1_Valid (\n    \"Hour\" NUMERIC,\n   \"January\" NUMERIC,\n   \"February\" NUMERIC,\n   \"March\" NUMERIC,\n   \"April\" NUMERIC,\n   \"May\" NUMERIC,\n   \"June\" NUMERIC,\n   \"July\" NUMERIC,\n   \"August\" NUMERIC,\n   \"September\" NUMERIC,\n   \"October\" NUMERIC,\n   \"November\" NUMERIC,\n   \"December\" NUMERIC\n);\n\nINSERT INTO target_8_1_Valid (\"Hour\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nSELECT\n    EXTRACT(HOUR FROM \"date\") AS \"Hour\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"January\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"February\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"March\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"April\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"May\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"June\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"July\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"August\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"September\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"October\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"November\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"December\"\nFROM Source8_1\nGROUP BY EXTRACT(HOUR FROM \"date\")\nORDER BY \"Hour\";\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail: try to insert nan",
        "Prompt-1 Results": "Fail: try to insert nan",
        "Complexity": NaN,
        "Remark or Note": "Hour value are 1,2,...24"
    },
    {
        "Target Data Name": "Target8",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season is one of (SPRING, SUMMER, FALL, WINTER). Low_End is the lowest temperature measured. High_End is the highest temperature measured. Both Low_End and High_End are float numbers.",
        "Source Data Name": "Source8_2",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/2018 0:00        67.9\n1/1/2018 0:01        67.9\n1/1/2018 0:02        67.9\n1/1/2018 0:03        67.9\n1/1/2018 0:04        67.9",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_8_2_Valid;\n\nCREATE TABLE target_8_2_Valid (\n    \"Hour\" NUMERIC,\n    \"January\" NUMERIC,\n    \"February\" NUMERIC,\n    \"March\" NUMERIC,\n    \"April\" NUMERIC,\n    \"May\" NUMERIC,\n    \"June\" NUMERIC,\n    \"July\" NUMERIC,\n    \"August\" NUMERIC,\n    \"September\" NUMERIC,\n    \"October\" NUMERIC,\n    \"November\" NUMERIC,\n    \"December\" NUMERIC\n);\n\nINSERT INTO target_8_2_Valid (\"Hour\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nSELECT\n    EXTRACT(HOUR FROM \"date\") AS \"Hour\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 1 THEN zone_16_temp END) AS \"January\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 2 THEN zone_16_temp END) AS \"February\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 3 THEN zone_16_temp END) AS \"March\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 4 THEN zone_16_temp END) AS \"April\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 5 THEN zone_16_temp END) AS \"May\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 6 THEN zone_16_temp END) AS \"June\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 7 THEN zone_16_temp END) AS \"July\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 8 THEN zone_16_temp END) AS \"August\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 9 THEN zone_16_temp END) AS \"September\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 10 THEN zone_16_temp END) AS \"October\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 11 THEN zone_16_temp END) AS \"November\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 12 THEN zone_16_temp END) AS \"December\"\nFROM Source8_2\nGROUP BY EXTRACT(HOUR FROM \"date\")\nORDER BY \"Hour\";",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail: try to insert nan",
        "Prompt-1 Results": "Fail: try to insert nan",
        "Complexity": NaN,
        "Remark or Note": "pivoting example"
    },
    {
        "Target Data Name": "Target8",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season is one of (SPRING, SUMMER, FALL, WINTER). Low_End is the lowest temperature measured. High_End is the highest temperature measured. Both Low_End and High_End are float numbers.",
        "Source Data Name": "Source8_3",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "9/15/2018 10:00        73\n9/15/2018 10:05        73\n9/15/2018 10:10        73\n9/15/2018 10:15        73\n9/15/2018 10:20        73",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_8_3_Valid;\n\nCREATE TABLE target_8_3_Valid (\n    \"Hour\" NUMERIC,\n    \"January\" NUMERIC,\n    \"February\" NUMERIC,\n    \"March\" NUMERIC,\n    \"April\" NUMERIC,\n    \"May\" NUMERIC,\n    \"June\" NUMERIC,\n    \"July\" NUMERIC,\n    \"August\" NUMERIC,\n    \"September\" NUMERIC,\n    \"October\" NUMERIC,\n    \"November\" NUMERIC,\n    \"December\" NUMERIC\n);\n\nINSERT INTO target_8_3_Valid (\"Hour\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nSELECT\n    EXTRACT(HOUR FROM \"date\") AS \"Hour\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 1 THEN zone_016_cooling_sp END) AS \"January\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 2 THEN zone_016_cooling_sp END) AS \"February\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 3 THEN zone_016_cooling_sp END) AS \"March\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 4 THEN zone_016_cooling_sp END) AS \"April\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 5 THEN zone_016_cooling_sp END) AS \"May\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 6 THEN zone_016_cooling_sp END) AS \"June\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 7 THEN zone_016_cooling_sp END) AS \"July\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 8 THEN zone_016_cooling_sp END) AS \"August\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 9 THEN zone_016_cooling_sp END) AS \"September\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 10 THEN zone_016_cooling_sp END) AS \"October\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 11 THEN zone_016_cooling_sp END) AS \"November\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 12 THEN zone_016_cooling_sp END) AS \"December\"\nFROM Source8_3\nGROUP BY EXTRACT(HOUR FROM \"date\")\nORDER BY \"Hour\";\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail: try to insert nan",
        "Prompt-1 Results": "Fail: try to insert nan",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_1",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "Strata_ID is  ID, Strata is Strata name, DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "0001\tRC301 Strata 1\t1/1/16\tH\t.001222017108240\t.001274017836250\t.001131015834222\t.001222017108240\t.001222017108240\t.001261017654247\t.001144016016224\t.001170016380229\t.001170016380229\t.001209016926237\t.001183016562232\t.001235017290242\t.001157016198227\t.001001014014196\t.001014014196199\t.001144016016224\t.001209016926237\t.001547021658303\t.001560021840306\t.001534021476301\t.001573022022308\t.001573022022308\t.001326018564260\t.001170016380229\t.000000000000000\n0001\tRC301 Strata 1\t1/2/16\t7\t.001313018382257\t.001248017472245\t.001222017108240\t.001196016744234\t.001196016744234\t.001287018018252\t.001300018200255\t.001339018746262\t.001352018928265\t.001404019656275\t.001417019838278\t.001326018564260\t.001313018382257\t.001352018928265\t.001339018746262\t.001391019474273\t.001404019656275\t.001495020930293\t.001521021294298\t.001508021112296\t.001534021476301\t.001534021476301\t.001469020566288\t.001339018746262\t.000000000000000\n0001\tRC301 Strata 1\t1/3/16\t1\t.001157016198227\t.001092015288214\t.001053014742206\t.001040014560204\t.001040014560204\t.001066014924209\t.001053014742206\t.001144016016224\t.001183016562232\t.001248017472245\t.001326018564260\t.001404019656275\t.001313018382257\t.001300018200255\t.001313018382257\t.001261017654247\t.001261017654247\t.001430020020280\t.001469020566288\t.001404019656275\t.001456020384285\t.001378019292270\t.001287018018252\t.001222017108240\t.000000000000000\n0001\tRC301 Strata 1\t1/4/16\t2\t.001105015470217\t.001053014742206\t.001001014014196\t.000975013650191\t.001053014742206\t.001079015106211\t.001183016562232\t.001170016380229\t.001274017836250\t.001170016380229\t.001157016198227\t.001196016744234\t.001196016744234\t.001144016016224\t.001170016380229\t.001261017654247\t.001300018200255\t.001495020930293\t.001586022204311\t.001651023114324\t.001651023114324\t.001521021294298\t.001417019838278\t.001274017836250\t.000000000000000\n0001\tRC301 Strata 1\t1/5/16\t3\t.001183016562232\t.001170016380229\t.001079015106211\t.001131015834222\t.001170016380229\t.001183016562232\t.001300018200255\t.001365019110268\t.001404019656275\t.001378019292270\t.001352018928265\t.001326018564260\t.001365019110268\t.001339018746262\t.001300018200255\t.001313018382257\t.001404019656275\t.001638022932321\t.001716024024336\t.001677023478329\t.001625022750319\t.001638022932321\t.001573022022308\t.001417019838278\t.000000000000000",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_1_Valid;\nCREATE TABLE target_9_1_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\nINSERT INTO target_9_1_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"dt_strata\",\n    \"pct_hourly_0100\", \"pct_hourly_0200\", \"pct_hourly_0300\", \"pct_hourly_0400\", \"pct_hourly_0500\",\n    \"pct_hourly_0600\", \"pct_hourly_0700\", \"pct_hourly_0800\", \"pct_hourly_0900\", \"pct_hourly_1000\",\n    \"pct_hourly_1100\", \"pct_hourly_1200\", \"pct_hourly_1300\", \"pct_hourly_1400\", \"pct_hourly_1500\",\n    \"pct_hourly_1600\", \"pct_hourly_1700\", \"pct_hourly_1800\", \"pct_hourly_1900\", \"pct_hourly_2000\",\n    \"pct_hourly_2100\", \"pct_hourly_2200\", \"pct_hourly_2300\", \"pct_hourly_2400\"\nFROM Source9_1;",
        "Prompt-3 Results": "Fail: try to insert PCT_HOURLY_2500 so that INSERT has more expressions than target columns",
        "Prompt-2 Results": "Fail: try to insert PCT_HOURLY_2500 so that INSERT has more expressions than target columns",
        "Prompt-1 Results": "Fail: try to insert PCT_HOURLY_2500 so that INSERT has more expressions than target columns",
        "Complexity": NaN,
        "Remark or Note": "First three columns would have null values"
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_2",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is dayofweek, date. From 1:00 to 24:00:00 are hourly values.",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "\"Wed 04/01/2009\"        1.020        0.960        0.960        0.940        1.000        1.100        1.210        1.230        1.150        1.120        1.160        1.080        1.030        1.030        1.050        1.050        1.080        1.170        1.220        1.370        1.410        1.350        1.220        1.030\n\"Thu 04/02/2009\"        0.930        0.870        0.860        0.870        0.920        1.030        1.130        1.170        1.140        1.110        1.120        1.080        0.990        1.010        1.040        1.080        1.170        1.270        1.330        1.460        1.450        1.420        1.220        1.100\n\"Fri 04/03/2009\"        0.980        0.970        0.950        0.930        0.960        1.070        1.170        1.180        1.190        1.140        1.140        1.110        1.010        0.980        0.980        1.020        1.060        1.090        1.120        1.220        1.330        1.310        1.230        1.120\n\"Sat 04/04/2009\"        1.030        0.950        0.920        0.930        0.930        0.980        1.070        1.150        1.200        1.260        1.170        1.150        1.130        1.100        1.070        1.090        1.060        1.110        1.150        1.250        1.330        1.300        1.200        1.090\n\"Sun 04/05/2009\"        0.990        0.960        0.930        0.910        0.910        0.940        1.040        1.160        1.220        1.230        1.220        1.230        1.260        1.290        1.320        1.400        1.450        1.590        1.630        1.660        1.650        1.510        1.320        1.140",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_2_Valid;\nCREATE TABLE target_9_2_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\n\nINSERT INTO target_9_2_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    TO_DATE(\"cst\", 'Dy MM/DD/YYYY'),\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\n    \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\",\n    \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM Source9_2;\n",
        "Prompt-3 Results": 0.96,
        "Prompt-2 Results": 0.96,
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_3",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Missing samples",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_3_Valid;\nCREATE TABLE target_9_3_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\n\nINSERT INTO target_9_3_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"cerc_logger_1\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"cerc_logger_1\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"cerc_logger_1\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"cerc_logger_1\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"cerc_logger_1\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"cerc_logger_1\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"cerc_logger_1\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"cerc_logger_1\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"cerc_logger_1\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"cerc_logger_1\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"cerc_logger_1\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"cerc_logger_1\" END) AS \"12:00 PM\"\nFROM Source9_3\nGROUP BY DATE(\"date\");",
        "Prompt-3 Results": "Fail: try to insert nan",
        "Prompt-2 Results": "Fail: try to insert nan",
        "Prompt-1 Results": "Fail: try to insert nan",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_4",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Missing samples",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_4_Valid;\nCREATE TABLE target_9_4_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\nINSERT INTO target_9_4_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_temp\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_temp\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_temp\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_temp\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_temp\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_temp\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_temp\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_temp\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_temp\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_temp\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_temp\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_temp\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_temp\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_temp\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_temp\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_temp\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_temp\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_temp\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_temp\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_temp\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_temp\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_temp\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_temp\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_temp\" END) AS \"12:00 PM\"\nFROM Source9_4\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": "Fail: try to insert nan",
        "Prompt-2 Results": "Fail: try to insert nan",
        "Prompt-1 Results": "Fail: try to insert nan",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_5",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Missing samples",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_5_Valid;\nCREATE TABLE target_9_5_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\n\nINSERT INTO target_9_5_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_cooling_sp\" END) AS \"1:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_cooling_sp\" END) AS \"2:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_cooling_sp\" END) AS \"3:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_cooling_sp\" END) AS \"4:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_cooling_sp\" END) AS \"5:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_cooling_sp\" END) AS \"6:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_cooling_sp\" END) AS \"7:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_cooling_sp\" END) AS \"8:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_cooling_sp\" END) AS \"9:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_cooling_sp\" END) AS \"10:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_cooling_sp\" END) AS \"11:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_cooling_sp\" END) AS \"12:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_cooling_sp\" END) AS \"1:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_cooling_sp\" END) AS \"2:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_cooling_sp\" END) AS \"3:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_cooling_sp\" END) AS \"4:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_cooling_sp\" END) AS \"5:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_cooling_sp\" END) AS \"6:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_cooling_sp\" END) AS \"7:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_cooling_sp\" END) AS \"8:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_cooling_sp\" END) AS \"9:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_cooling_sp\" END) AS \"10:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_cooling_sp\" END) AS \"11:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_cooling_sp\" END) AS \"12:00 PM\"\nFROM Source9_5\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": "Fail: try to insert nan",
        "Prompt-2 Results": "Fail: try to insert nan",
        "Prompt-1 Results": "Fail: try to insert nan",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_6",
        "Source Data Schema": "\"date\" \"1:00 AM\" \"2:00 AM\" \"3:00 AM\" \"4:00 AM\" \"5:00 AM\" \"6:00 AM\" \"7:00 AM\" \"8:00 AM\" \"9:00 AM\" \"10:00 AM\" \"11:00 AM\" \"12:00 AM\" \"1:00 PM\" \"2:00 PM\" \"3:00 PM\" \"4:00 PM\" \"5:00 PM\" \"6:00 PM\" \"7:00 PM\" \"8:00 PM\" \"9:00 PM\" \"10:00 PM\" \"11:00 PM\" \"12:00 PM\" \"DSL\"",
        "Source Data Description": "From \"1:00 AM\" to \"12:00 PM\" are 24 hourly values.",
        "Schema Change Hints": "Map all hourly values. Attribute \"DSL\" in the first table is not in the second table, so do not map it to anything.",
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_6_Valid;\nCREATE TABLE target_9_6_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\nINSERT INTO target_9_6_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"date\",\n    \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\",\n    \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\"\nFROM Source9_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail: try to insert DSL",
        "Prompt-1 Results": "Fail: try to insert DSL",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_7",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": "From 1 to 24 are hourly values.",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "1/1/13\tRESIDENT\t 0.89 \t 0.80 \t 0.74 \t 0.72 \t 0.71 \t 0.72 \t 0.76 \t 0.87 \t 1.02 \t 1.13 \t 1.16 \t 1.16 \t 1.14 \t 1.11 \t 1.08 \t 1.10 \t 1.26 \t 1.40 \t 1.39 \t 1.34 \t 1.26 \t 1.14 \t 1.02 \t 0.90 \n1/2/13\tRESIDENT\t 0.84 \t 0.80 \t 0.80 \t 0.80 \t 0.82 \t 0.92 \t 1.05 \t 1.09 \t 1.03 \t 1.00 \t 0.97 \t 0.95 \t 0.93 \t 0.92 \t 0.92 \t 1.00 \t 1.15 \t 1.36 \t 1.43 \t 1.40 \t 1.34 \t 1.25 \t 1.11 \t 1.00 \n1/3/13\tRESIDENT\t 0.95 \t 0.92 \t 0.91 \t 0.91 \t 0.94 \t 1.03 \t 1.16 \t 1.18 \t 1.12 \t 1.07 \t 1.03 \t 1.01 \t 0.99 \t 0.98 \t 0.96 \t 1.02 \t 1.17 \t 1.35 \t 1.43 \t 1.42 \t 1.35 \t 1.24 \t 1.10 \t 0.99 \n1/4/13\tRESIDENT\t 0.92 \t 0.89 \t 0.88 \t 0.87 \t 0.89 \t 0.97 \t 1.10 \t 1.13 \t 1.05 \t 1.02 \t 1.00 \t 0.96 \t 0.94 \t 0.92 \t 0.91 \t 0.95 \t 1.08 \t 1.24 \t 1.28 \t 1.25 \t 1.20 \t 1.13 \t 1.01 \t 0.89 \n1/5/13\tRESIDENT\t 0.82 \t 0.76 \t 0.73 \t 0.71 \t 0.71 \t 0.75 \t 0.83 \t 0.95 \t 1.01 \t 1.04 \t 1.02 \t 1.01 \t 1.00 \t 0.98 \t 0.99 \t 1.04 \t 1.18 \t 1.34 \t 1.35 \t 1.28 \t 1.22 \t 1.15 \t 1.03 \t 0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_7_Valid;\nCREATE TABLE target_9_7_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\n\nINSERT INTO target_9_7_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    Date,\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM Source9_7;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_8",
        "Source Data Schema": "\"date\" \"Hour 1\" \"Hour 2\" \"Hour 3\" \"Hour 4\" \"Hour 5\" \"Hour 6\" \"Hour 7\" \"Hour 8\" \"Hour 9\" \"Hour 10\" \"Hour 11\" \"Hour 12\" \"Hour 13\" \"Hour 14\" \"Hour 15\" \"Hour 16\" \"Hour 17\" \"Hour 18\" \"Hour 19\" \"Hour 20\" \"Hour 21\" \"Hour 22\" \"Hour 23\" \"Hour 24\"",
        "Source Data Description": "From \"Hour 1\" to \"Hour 24\" are hourly values.",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_8_Valid;\nCREATE TABLE target_9_8_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\nINSERT INTO target_9_8_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    date,\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM Source9_8;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_9",
        "Source Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"\n\n\n\n\n\n\n\n\n",
        "Source Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values.",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "1/2/14        2.07534        2.02341        1.99875        1.97059        2.01401        2.20204        2.43967        2.76455        3.04516        3.18261        3.31282        3.24361        3.13723        3.11737        3.07019        2.92809        2.95433        2.77192        2.68518        2.58320        2.44227        2.29191        2.21852        2.10929\n1/3/14        2.10348        2.12653        2.11108        2.13027        2.17054        2.27965        2.39945        2.40350        2.41534        2.58242        2.59465        2.63209        2.69787        2.73421        2.67389        2.75383        2.89596        2.99412        2.87998        2.81429        2.76394        2.62247        2.43720        2.35176\n1/4/14        2.31847        2.28302        2.25447        2.29661        2.29236        2.40792        2.46238        2.49451        2.55116        2.63960        2.67559        2.76426        2.66526        2.56883        2.52273        2.48996        2.67065        2.77066        2.71285        2.62586        2.56877        2.40296        2.24707        2.11809\n1/5/14        2.03612        2.03015        2.00598        2.01600        2.05847        2.10732        2.20186        2.08804        2.05397        2.16995        2.28402        2.37878        2.33051        2.31443        2.21714        2.18796        2.41997        2.47264        2.40963        2.38839        2.27536        2.12136        2.00571        1.87587\n1/6/14        1.80036        1.75492        1.74878        1.72888        1.74747        1.91927        2.15370        2.48602        2.84825        3.09056        3.14585        3.16914        3.09796        2.97771        2.98086        2.91304        2.96945        2.78943        2.63069        2.59174        2.51653        2.34993        2.14925        2.03715",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_9_Valid;\nCREATE TABLE target_9_9_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\n\nINSERT INTO target_9_9_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\" FROM Source9_9;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target9",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "From value1 to value24 are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source9_10",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00 ",
        "Source Data Description": "From 1:00 to 24:00 are hourly values.",
        "Schema Change Hints": "Map all hourly values. Segment in the first table is not in the second table so do not map segment to anything.",
        "5 Samples of Source Data": "RS6        \"Wed 01/01/2003\"        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        \"Thu 01/02/2003\"        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        \"Fri 01/03/2003\"        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        \"Sat 01/04/2003\"        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        \"Sun 01/05/2003\"        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_9_10_Valid;\nCREATE TABLE target_9_10_Valid (\n   date VARCHAR(20),\n   value1  NUMERIC,\n   value2 NUMERIC,\n   value3 NUMERIC,\n   value4 NUMERIC,\n   value5 NUMERIC,\n   value6 NUMERIC,\n   value7 NUMERIC,\n   value8 NUMERIC,\n   value9 NUMERIC,\n   value10 NUMERIC,\n   value11 NUMERIC,\n   value12 NUMERIC,\n   value13 NUMERIC,\n   value14 NUMERIC,\n   value15 NUMERIC,\n   value16 NUMERIC,\n   value17 NUMERIC,\n   value18 NUMERIC,\n   value19 NUMERIC,\n   value20 NUMERIC,\n   value21 NUMERIC,\n   value22 NUMERIC,\n   value23 NUMERIC,\n   value24 NUMERIC\n);\n\nINSERT INTO target_9_10_Valid (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    Date,    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\n     FROM Source9_10;",
        "Prompt-3 Results": "Fail",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_1",
        "Source Data Schema": "Strata_ID        Strata        DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "Strata_ID is  ID, Strata is Strata name, DT_STRATA is date, DOW is Day Of Week. From PCT_HOURLY_0100 to PCT_HOURLY_2500 are hourly values.",
        "Schema Change Hints": "Map DT_STRATA from the first table to Date in the second table. Map all hourly values. Do not map PCT_HOURLY_2500 in the first table to anything because it is not in the second table.",
        "5 Samples of Source Data": "0001        RC301 Strata 1        1/1/16        H        .001222017108240        .001274017836250        .001131015834222        .001222017108240        .001222017108240        .001261017654247        .001144016016224        .001170016380229        .001170016380229        .001209016926237        .001183016562232        .001235017290242        .001157016198227        .001001014014196        .001014014196199        .001144016016224        .001209016926237        .001547021658303        .001560021840306        .001534021476301        .001573022022308        .001573022022308        .001326018564260        .001170016380229        .000000000000000\n0001        RC301 Strata 1        1/2/16        7        .001313018382257        .001248017472245        .001222017108240        .001196016744234        .001196016744234        .001287018018252        .001300018200255        .001339018746262        .001352018928265        .001404019656275        .001417019838278        .001326018564260        .001313018382257        .001352018928265        .001339018746262        .001391019474273        .001404019656275        .001495020930293        .001521021294298        .001508021112296        .001534021476301        .001534021476301        .001469020566288        .001339018746262        .000000000000000\n0001        RC301 Strata 1        1/3/16        1        .001157016198227        .001092015288214        .001053014742206        .001040014560204        .001040014560204        .001066014924209        .001053014742206        .001144016016224        .001183016562232        .001248017472245        .001326018564260        .001404019656275        .001313018382257        .001300018200255        .001313018382257        .001261017654247        .001261017654247        .001430020020280        .001469020566288        .001404019656275        .001456020384285        .001378019292270        .001287018018252        .001222017108240        .000000000000000\n0001        RC301 Strata 1        1/4/16        2        .001105015470217        .001053014742206        .001001014014196        .000975013650191        .001053014742206        .001079015106211        .001183016562232        .001170016380229        .001274017836250        .001170016380229        .001157016198227        .001196016744234        .001196016744234        .001144016016224        .001170016380229        .001261017654247        .001300018200255        .001495020930293        .001586022204311        .001651023114324        .001651023114324        .001521021294298        .001417019838278        .001274017836250        .000000000000000\n0001        RC301 Strata 1        1/5/16        3        .001183016562232        .001170016380229        .001079015106211        .001131015834222        .001170016380229        .001183016562232        .001300018200255        .001365019110268        .001404019656275        .001378019292270        .001352018928265        .001326018564260        .001365019110268        .001339018746262        .001300018200255        .001313018382257        .001404019656275        .001638022932321        .001716024024336        .001677023478329        .001625022750319        .001638022932321        .001573022022308        .001417019838278        .000000000000000",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_1_Valid;\nCREATE TABLE target_10_1_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\nINSERT INTO target_10_1_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"dt_strata\",\n    \"pct_hourly_0100\", \"pct_hourly_0200\", \"pct_hourly_0300\", \"pct_hourly_0400\", \"pct_hourly_0500\",\n    \"pct_hourly_0600\", \"pct_hourly_0700\", \"pct_hourly_0800\", \"pct_hourly_0900\", \"pct_hourly_1000\",\n    \"pct_hourly_1100\", \"pct_hourly_1200\", \"pct_hourly_1300\", \"pct_hourly_1400\", \"pct_hourly_1500\",\n    \"pct_hourly_1600\", \"pct_hourly_1700\", \"pct_hourly_1800\", \"pct_hourly_1900\", \"pct_hourly_2000\",\n    \"pct_hourly_2100\", \"pct_hourly_2200\", \"pct_hourly_2300\", \"pct_hourly_2400\"\nFROM Source10_1;",
        "Prompt-3 Results": "Fail",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_2",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is composed of day of week and the date. From 1:00 to 24:00:00 are hourly values ",
        "Schema Change Hints": "Map the second word in CST in the first table to Date in the second table. Map all hourly values. ",
        "5 Samples of Source Data": "\"Wed 04/01/2009\"        1.020        0.960        0.960        0.940        1.000        1.100        1.210        1.230        1.150        1.120        1.160        1.080        1.030        1.030        1.050        1.050        1.080        1.170        1.220        1.370        1.410        1.350        1.220        1.030\n\"Thu 04/02/2009\"        0.930        0.870        0.860        0.870        0.920        1.030        1.130        1.170        1.140        1.110        1.120        1.080        0.990        1.010        1.040        1.080        1.170        1.270        1.330        1.460        1.450        1.420        1.220        1.100\n\"Fri 04/03/2009\"        0.980        0.970        0.950        0.930        0.960        1.070        1.170        1.180        1.190        1.140        1.140        1.110        1.010        0.980        0.980        1.020        1.060        1.090        1.120        1.220        1.330        1.310        1.230        1.120\n\"Sat 04/04/2009\"        1.030        0.950        0.920        0.930        0.930        0.980        1.070        1.150        1.200        1.260        1.170        1.150        1.130        1.100        1.070        1.090        1.060        1.110        1.150        1.250        1.330        1.300        1.200        1.090\n\"Sun 04/05/2009\"        0.990        0.960        0.930        0.910        0.910        0.940        1.040        1.160        1.220        1.230        1.220        1.230        1.260        1.290        1.320        1.400        1.450        1.590        1.630        1.660        1.650        1.510        1.320        1.140",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_2_Valid;\nCREATE TABLE target_10_2_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\nINSERT INTO target_10_2_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    TO_DATE(\"cst\", 'Dy MM/DD/YYYY'),\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\n    \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\",\n    \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM Source10_2;\n",
        "Prompt-3 Results": 0.96,
        "Prompt-2 Results": 0.96,
        "Prompt-1 Results": 0.96,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_3",
        "Source Data Schema": "class escription analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": "From value1 to value 24 are hourly values.",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_3_Valid;\nCREATE TABLE target_10_3_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\n\nINSERT INTO target_10_3_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"date\",\n    \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\"\nFROM Source10_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_4",
        "Source Data Schema": "\"date\" \"1:00 AM\" \"2:00 AM\" \"3:00 AM\" \"4:00 AM\" \"5:00 AM\" \"6:00 AM\" \"7:00 AM\" \"8:00 AM\" \"9:00 AM\" \"10:00 AM\" \"11:00 AM\" \"12:00 AM\" \"1:00 PM\" \"2:00 PM\" \"3:00 PM\" \"4:00 PM\" \"5:00 PM\" \"6:00 PM\" \"7:00 PM\" \"8:00 PM\" \"9:00 PM\" \"10:00 PM\" \"11:00 PM\" \"12:00 PM\" \"DSL\"",
        "Source Data Description": "From \"1:00 AM\" to \"12:00 PM\" are hourly values.",
        "Schema Change Hints": "Map all hourly values. Attribute \"DSL\" in the first table is not in the second table, so do not map it to anything.",
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_4_Valid;\nCREATE TABLE target_10_4_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\n\nINSERT INTO target_10_4_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"date\",\n    \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\",\n    \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\"\nFROM Source10_4;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_5",
        "Source Data Schema": "Date Class 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": "From 1 to 24 are hourly values.",
        "Schema Change Hints": "Map all hourly values. ",
        "5 Samples of Source Data": "1/1/2013        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/2013        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/2013        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/2013        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/2013        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_5_Valid;\nCREATE TABLE target_10_5_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\n\nINSERT INTO target_10_5_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    Date,\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM Source10_5;",
        "Prompt-3 Results": "Fail: creates incorrect source table",
        "Prompt-2 Results": "Fail: creates incorrect source table",
        "Prompt-1 Results": "Fail: creates incorrect source table",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_6",
        "Source Data Schema": "\"date\" \"Hour 1\" \"Hour 2\" \"Hour 3\" \"Hour 4\" \"Hour 5\" \"Hour 6\" \"Hour 7\" \"Hour 8\" \"Hour 9\" \"Hour 10\" \"Hour 11\" \"Hour 12\" \"Hour 13\" \"Hour 14\" \"Hour 15\" \"Hour 16\" \"Hour 17\" \"Hour 18\" \"Hour 19\" \"Hour 20\" \"Hour 21\" \"Hour 22\" \"Hour 23\" \"Hour 24\"",
        "Source Data Description": "From \"Hour 1\" to \"Hour 24\" are hourly values.",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000000000        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_6_Valid;\nCREATE TABLE target_10_6_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\n\nINSERT INTO target_10_6_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"date\",\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM Source10_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1,
        "Prompt-1 Results": 1,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_7",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Date is compose of the day of the week and the date. From 1:00 to 24:00:00 are hourly values",
        "Schema Change Hints": "Map all hourly values.",
        "5 Samples of Source Data": "RS6        \"Wed 01/01/2003\"        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        \"Thu 01/02/2003\"        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        \"Fri 01/03/2003\"        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        \"Sat 01/04/2003\"        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        \"Sun 01/05/2003\"        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_7_Valid;\nCREATE TABLE target_10_7_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\n\nINSERT INTO target_10_7_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"Date\",    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\n     FROM Source10_7;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_8",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": " ",
        "5 Samples of Source Data": "Missing samples",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_8_Valid;\nCREATE TABLE target_10_8_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\n\nINSERT INTO target_10_8_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"cerc_logger_1\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"cerc_logger_1\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"cerc_logger_1\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"cerc_logger_1\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"cerc_logger_1\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"cerc_logger_1\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"cerc_logger_1\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"cerc_logger_1\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"cerc_logger_1\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"cerc_logger_1\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"cerc_logger_1\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"cerc_logger_1\" END) AS \"12:00 PM\"\nFROM Souce10_8\nGROUP BY DATE(\"date\");",
        "Prompt-3 Results": "Fail",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_9",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Missing samples",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_9_Valid;\nCREATE TABLE target_10_9_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\nINSERT INTO target_10_9_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_temp\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_temp\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_temp\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_temp\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_temp\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_temp\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_temp\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_temp\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_temp\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_temp\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_temp\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_temp\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_temp\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_temp\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_temp\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_temp\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_temp\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_temp\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_temp\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_temp\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_temp\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_temp\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_temp\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_temp\" END) AS \"12:00 PM\"\nFROM Source10_9\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": "Fail",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target10",
        "Target Data Schema": "\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"",
        "Target Data Description": "From \"Hr 1\" to \"Hr 24\" are hourly values. What is the format of the Date? We should specify it.",
        "Source Data Name": "Source10_10",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Missing samples",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_10_10_Valid;\nCREATE TABLE target_10_10_Valid (\n   \"Date\" VARCHAR(20),\n   \"Hr 1\"  NUMERIC,\n   \"Hr 2\" NUMERIC,\n   \"Hr 3\" NUMERIC,\n   \"Hr 4\" NUMERIC,\n   \"Hr 5\" NUMERIC,\n   \"Hr 6\" NUMERIC,\n   \"Hr 7\" NUMERIC,\n   \"Hr 8\" NUMERIC,\n   \"Hr 9\" NUMERIC,\n   \"Hr 10\" NUMERIC,\n   \"Hr 11\" NUMERIC,\n   \"Hr 12\" NUMERIC,\n   \"Hr 13\" NUMERIC,\n   \"Hr 14\" NUMERIC,\n   \"Hr 15\" NUMERIC,\n   \"Hr 16\" NUMERIC,\n   \"Hr 17\" NUMERIC,\n   \"Hr 18\" NUMERIC,\n   \"Hr 19\" NUMERIC,\n   \"Hr 20\" NUMERIC,\n   \"Hr 21\" NUMERIC,\n   \"Hr 22\" NUMERIC,\n   \"Hr 23\" NUMERIC,\n   \"Hr 24\" NUMERIC\n);\n\nINSERT INTO target_10_10_Valid (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_cooling_sp\" END) AS \"1:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_cooling_sp\" END) AS \"2:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_cooling_sp\" END) AS \"3:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_cooling_sp\" END) AS \"4:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_cooling_sp\" END) AS \"5:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_cooling_sp\" END) AS \"6:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_cooling_sp\" END) AS \"7:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_cooling_sp\" END) AS \"8:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_cooling_sp\" END) AS \"9:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_cooling_sp\" END) AS \"10:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_cooling_sp\" END) AS \"11:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_cooling_sp\" END) AS \"12:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_cooling_sp\" END) AS \"1:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_cooling_sp\" END) AS \"2:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_cooling_sp\" END) AS \"3:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_cooling_sp\" END) AS \"4:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_cooling_sp\" END) AS \"5:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_cooling_sp\" END) AS \"6:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_cooling_sp\" END) AS \"7:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_cooling_sp\" END) AS \"8:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_cooling_sp\" END) AS \"9:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_cooling_sp\" END) AS \"10:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_cooling_sp\" END) AS \"11:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_cooling_sp\" END) AS \"12:00 PM\"\nFROM Source10_10\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": "Fail",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": "Fail",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target11",
        "Target Data Schema": "datetime HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "Each value of the datatime attribute includes a date in the format of yyyy-mm-dd and the time in the format of hh:00:00, which specifies the hour. An example of a datetime value is 2013-01-01 00:00:00. Most of attributes except datetime are of float types.",
        "Source Data Name": "Source11_1",
        "Source Data Schema": "eiaid, time, raw_count, scaled_unit_count, net_site_electricity_kwh, electricity_heating_kwh, electricity_central_system_heating_kwh, electricity_cooling_kwh electricity_central_system_cooling_kwh electricity_interior_lighting_kwh ,  electricity_exterior_lighting_kwh, electricity_fans_heating_kwh, electricity_fans_cooling_kwh, electricity_pumps_heating_kwh, electricity_central_system_pumps_heating_kwh, electricity_pumps_cooling_kwh, electricity_central_system_pumps_cooling_kwh, electricity_water_systems_kwh, electricity_refrigerator_kwh, electricity_clothes_washer_kwh, electricity_clothes_dryer_kwh, electricity_cooking_range_kwh, electricity_dishwasher_kwh, electricity_plug_loads_kwh, electricity_house_fan_kwh, electricity_range_fan_kwh, electricity_bath_fan_kwh, electricity_ceiling_fan_kwh, electricity_pool_heater_kwh, electricity_pool_pump_kwh, electricity_hot_tub_heater_kwh, electricity_hot_tub_pump_kwh",
        "Source Data Description": "several columns need to be summed up to map to a target attribute",
        "Schema Change Hints": "HVAC should map to sum of 'electricity_heating_kwh', 'Electricity_central_system_heating_kwh', 'electricity_cooling_kwh', 'Electricity_central_system_cooling_kwh', 'electricity_fans_heating_kwh', 'electricity_fans_cooling_kwh', 'electricity_pumps_heating_kwh', 'electricity_central_system_pumps_heating_kwh', 'electricity_pumps_cooling_kwh', 'Electricity_central_system_pumps_cooling_kwh', 'electricity_house_fan_kwh', 'electricity_range_fan_kwh', 'electricity_bath_fan_kwh'\u201d. Water_heating should map to \u2018electricity_water_systems_kwh\u2019. Pool_spa_pumps should be mapped to electricity_pool_pump_kwh', 'electricity_hot_tub_pump_kwh. Pool_spa_heaters should be mapped to electricity_pool_heater_kwh', 'electricity_hot_tub_heater_kwh. Lighting should map to 'electricity_interior_lighting_kwh', and 'electricity_exterior_lighting_kwh' only. Total should be mapped to net_site_electricity_kwh.",
        "5 Samples of Source Data": "4110\t1/1/12 0:15\t541079\t2991885.1\t725805.7599\t170365.3215\t12237.88533\t10173.73547\t34.21563194\t39205.13808\t7653.40551\t96214.55964\t1873.76192\t19.49044138\t356.2631311\t0\t36.81847325\t1745.742562\t40159.03534\t1058.877211\t25403.5408\t4560.913747\t2750.422583\t246207.2847\t0\t169.5248655\t1366.53176\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 0:30\t541079\t2991885.1\t722554.2831\t160103.2925\t10935.92883\t9711.168898\t37.86693016\t39205.13808\t7653.40551\t91366.3144\t1797.149517\t17.30827445\t289.4441454\t0\t39.9232761\t9110.146486\t40159.03534\t2015.263437\t30236.85493\t4560.913747\t3368.781329\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 0:45\t541079\t2991885.1\t716130.2572\t149229.6223\t10279.38991\t9061.367217\t36.14018945\t39205.13808\t7653.40551\t85162.82118\t1780.246698\t16.01782697\t268.8654444\t0\t43.81686068\t10928.70128\t40159.03534\t1012.157917\t42020.76348\t4560.913747\t2765.506754\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 1:00\t541079\t2991885.1\t671242.2494\t139390.4937\t9711.063783\t8148.226778\t34.61219386\t39205.13808\t7653.40551\t79591.76375\t1713.909978\t14.95129313\t251.1661129\t0\t44.0454923\t12663.48761\t40159.03534\t1784.424788\t13567.96229\t4560.913747\t801.3015034\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 1:15\t541079\t2991885.1\t589531.7712\t116364.942\t8094.490046\t7864.6224\t40.77766032\t23523.08285\t4592.043306\t67394.69316\t1885.288338\t12.82276972\t219.448326\t0\t45.01302594\t10212.27534\t39155.05946\t587.2272891\t14589.76377\t4560.913747\t430.0967761\t227741.7383\t0\t178.0227522\t1347.748753\t13609.00806\t51.2034934\t939.1945122\t2644.994663\t3209.364682",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target11_1_Valid;\n\n\nCREATE TABLE Target11_1_Valid (\n    datetime TIMESTAMP,\n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);                  INSERT INTO Target11_1_Valid (datetime, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT \n    time AS datetime,\n    electricity_heating_kwh + electricity_central_system_heating_kwh + electricity_cooling_kwh + electricity_central_system_cooling_kwh + electricity_fans_heating_kwh + electricity_fans_cooling_kwh + electricity_pumps_heating_kwh + electricity_central_system_pumps_heating_kwh + electricity_pumps_cooling_kwh + electricity_central_system_pumps_cooling_kwh + electricity_house_fan_kwh + electricity_range_fan_kwh + electricity_bath_fan_kwh AS HVAC,\n    electricity_water_systems_kwh AS water_heating,\n    electricity_refrigerator_kwh AS refrigerator,\n    electricity_clothes_washer_kwh AS clothes_washer,\n    electricity_clothes_dryer_kwh AS clothes_dryer,\n    electricity_dishwasher_kwh AS dishwasher,\n    electricity_cooking_range_kwh AS cooking_range,\n    electricity_pool_pump_kwh + electricity_hot_tub_pump_kwh AS pool_spa_pumps,\n    electricity_interior_lighting_kwh AS interior_lighting,\n    electricity_exterior_lighting_kwh AS exterior_lighting,\n    electricity_interior_lighting_kwh + electricity_exterior_lighting_kwh AS lighting,\n    electricity_plug_loads_kwh AS plug,\n    electricity_pool_heater_kwh + electricity_hot_tub_heater_kwh AS pool_spa_heater\nFROM Source11_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.93,
        "Prompt-1 Results": 0.7,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target11",
        "Target Data Schema": "datetime HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "Each value of the datatime attribute includes a date in the format of yyyy-mm-dd and the time in the format of hh:00:00, which specifies the hour. An example of a datetime value is 2013-01-01 00:00:00. Most of attributes except datetime are of float types.",
        "Source Data Name": "Source11_2",
        "Source Data Schema": "local_15min        air1_sum        air1_count        air2_sum        air2_count        air3_sum        air3_count        airwindowunit1_sum        airwindowunit1_count        aquarium1_sum        aquarium1_count        bathroom1_sum        bathroom1_count        bathroom2_sum        bathroom2_count        bedroom1_sum        bedroom1_count        bedroom2_sum        bedroom2_count        bedroom3_sum        bedroom3_count        bedroom4_sum        bedroom4_count        bedroom5_sum        bedroom5_count        battery1_sum        battery1_count        car1_sum        car1_count        car2_sum        car2_count        circpump1_sum        circpump1_count        clotheswasher1_sum        clotheswasher1_count        clotheswasher_dryg1_sum        clotheswasher_dryg1_count        diningroom1_sum        diningroom1_count        diningroom2_sum        diningroom2_count        dishwasher1_sum        dishwasher1_count        disposal1_sum        disposal1_count        drye1_sum        drye1_count        dryg1_sum        dryg1_count        freezer1_sum        freezer1_count        furnace1_sum        furnace1_count        furnace2_sum        furnace2_count        garage1_sum        garage1_count        garage2_sum        garage2_count        grid_sum        grid_count        heater1_sum        heater1_count        heater2_sum        heater2_count        heater3_sum        heater3_count        housefan1_sum        housefan1_count        icemaker1_sum        icemaker1_count        jacuzzi1_sum        jacuzzi1_count        kitchen1_sum        kitchen1_count        kitchen2_sum        kitchen2_count        kitchenapp1_sum        kitchenapp1_count        kitchenapp2_sum        kitchenapp2_count        lights_plugs1_sum        lights_plugs1_count        lights_plugs2_sum        lights_plugs2_count        lights_plugs3_sum        lights_plugs3_count        lights_plugs4_sum        lights_plugs4_count        lights_plugs5_sum        lights_plugs5_count        lights_plugs6_sum        lights_plugs6_count        livingroom1_sum        livingroom1_count        livingroom2_sum        livingroom2_count        microwave1_sum        microwave1_count        office1_sum        office1_count        outsidelights_plugs1_sum        outsidelights_plugs1_count        outsidelights_plugs2_sum        outsidelights_plugs2_count        oven1_sum        oven1_count        oven2_sum        oven2_count        pool1_sum        pool1_count        pool2_sum        pool2_count        poollight1_sum        poollight1_count        poolpump1_sum        poolpump1_count        pump1_sum        pump1_count        range1_sum        range1_count        refrigerator1_sum        refrigerator1_count        refrigerator2_sum        refrigerator2_count        security1_sum        security1_count        sewerpump1_sum        sewerpump1_count        shed1_sum        shed1_count        solar_sum        solar_count        solar2_sum        solar2_count        sprinkler1_sum        sprinkler1_count        sumppump1_sum        sumppump1_count        utilityroom1_sum        utilityroom1_count        venthood1_sum        venthood1_count        waterheater1_sum        waterheater1_count        waterheater2_sum        waterheater2_count        wellpump1_sum        wellpump1_count        winecooler1_sum        winecooler1_count",
        "Source Data Description": "several columns need to be summed up to map to a target attribute. attributes with \"_count\" can be ignored. \n\n",
        "Schema Change Hints": "HVAC is ['airwindowunit1', 'furnace1', 'furnace2', 'heater1', 'housefan1']\nwater_heating is ['waterheater1', 'waterheater2'] interior_lighting is ['lights_plugs1','lights_plugs2','lights_plugs3','lights_plugs4','lights_plugs5','lights_plugs6']\nexterior_lighting is ['outsidelights_plugs1','outsidelights_plugs2','poollight1'], cooking range is ['oven1', 'oven2', 'range1'], plug is ['aquarium1', 'disposal1', 'kitchenapp1', 'kitchenapp2', 'microwave1', 'security1', 'shed1', 'sprinkler1', 'pump1', 'icemaker1'],\nlighting is interior_lighting + exterior_lighting, pool_spa_pumps is ['poolpump1']",
        "5 Samples of Source Data": "12/31/11 23:00                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0        0.524        2                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0        -0.008        2                0                0                0                0                0                0                0                0                0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target11_2_Valid;\n\n\nCREATE TABLE Target11_2_Valid (\n    datetime TIMESTAMP,\n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);\n\n\nINSERT INTO Target11 (datetime, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT \n    local_15min AS datetime,\n    airwindowunit1_sum + furnace1_sum + furnace2_sum + heater1_sum + housefan1_sum AS HVAC,\n    waterheater1_sum + waterheater2_sum AS water_heating,\n    refrigerator1_sum + refrigerator2_sum AS refrigerator,\n    clotheswasher1_sum AS clothes_washer,\n    clotheswasher_dryg1_sum AS clothes_dryer,\n    dishwasher1_sum AS dishwasher,\n    oven1_sum + oven2_sum + range1_sum AS cooking_range,\n    poolpump1_sum AS pool_spa_pumps,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum + lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum AS interior_lighting,\n    outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum AS exterior_lighting,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum + lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum + outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum AS lighting,\n    aquarium1_sum + disposal1_sum + kitchenapp1_sum + kitchenapp2_sum + microwave1_sum + security1_sum + shed1_sum + sprinkler1_sum + pump1_sum + icemaker1_sum AS plug,\n    0 AS pool_spa_heater\nFROM Source11_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.5,
        "Prompt-1 Results": 0.36,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target11",
        "Target Data Schema": "datetime HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "Each value of the datatime attribute includes a date in the format of yyyy-mm-dd and the time in the format of hh:00:00, which specifies the hour. An example of a datetime value is 2013-01-01 00:00:00. Most of attributes except datetime are of float types.",
        "Source Data Name": "Source11_3",
        "Source Data Schema": "site,timestamp,\"TOTAL BLDG WHS [emon ch1,2]\",\"AC COMPRESSOR WHS [emon ch3,4]\",\"AIR HANDLER WHS [emon ch5,6]\",\"WATER HEATER WHS [emon ch7,8]\",DRYER WHS (1-CT) [emon ch9],RANGE WHS (1-CT) [emon ch10],DISH WASHER WHS [emon ch11],Primary Fridge WHS [emon ch12],2nd Fridge WHS [emon ch13],SPARE1 WHS (1-CT) [emon ch14],SPARE2 WHS (1-CT) [xpod chA-1],SPARE3 WHS (1-CT) [xpod chA-2],\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\",\"SPARE4 WHS (2-CTs) [xpod chA-5,6]\",\"Minisplit WHS (2-CTs) [xpod chA-7,8]\",\"Dryer WHS (2-CTs) [xpod chA-9,10]\",Calculated Unmeasured loads (Whr),Calculated Energy Use (Whr),\"Future use- WHS (2-CTs)[xpod chB-3,4]\",\"Future use- WHS (2-CTs)[xpod chB-5,6]\",eMonitor Temp (deg. F),Wattsup Cumulative Ent.Ctr (WHS),Wattsup Energy Ent.Ctr (WHS),Wattsup Cumulative Washer (WHS),Wattsup Energy Washer (WHS),LaCrosse Device Temp (deg. F),PointSix Temp (deg. F),PointSix Humidity (%),HOBO LOGGER TEMP (deg. F),HOBO LOGGER RH (%)",
        "Source Data Description": "timestamp is for every hour time.  Most of the attributes are of the float type, except site and timestamp. No attributes in the source table corresponds to interior_lighting, exterior_lighting, clothes_washer, and Pool/spa_heater in the target table, but we still need these attributes in the transformed table with values being 0. some columns need to be sumed up to map to a target attribute.",
        "Schema Change Hints": "HVAC corresponds to the sum of \"AC COMPRESSOR WHS [emon ch3,4]\", \"AIR HANDLER WHS [emon ch5,6]\", and \"Minisplit WHS (2-CTs) [xpod chA-7,8]\". water_heating corresponds to \"WATER HEATER WHS [emon ch7,8]\". clothes_dryer corresponds to \"DRYER WHS (1-CT) [emon ch9]\" and \"Dryer WHS (2-CTs) [xpod chA-9,10]\". \"Cooking range corresponds to \"RANGE WHS (1-CT) [emon ch10]\". Refrigerator corresponds to \"Primary Fridge WHS [emon ch12]\" and \"2nd Fridge WHS [emon ch13]\". Dish_washer corresponds to \"DISH WASHER WHS [emon ch11]\". pool_spa_pumps corresponds to \"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\".",
        "5 Samples of Source Data": "36        8/22/12 16:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 17:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 18:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 19:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 20:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target11_3_Valid;\nCREATE TABLE Target11_3_Valid (\n    datetime TIMESTAMP,\n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);\n\nINSERT INTO Target11_3_Valid (datetime, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT\n    timestamp,\n    COALESCE(\"AC COMPRESSOR WHS [emon ch3,4]\", 0) + COALESCE(\"AIR HANDLER WHS [emon ch5,6]\", 0) + COALESCE(\"Minisplit WHS (2-CTs) [xpod chA-7,8]\", 0) AS HVAC,\n    COALESCE(\"WATER HEATER WHS [emon ch7,8]\", 0) AS water_heating,\n    COALESCE(\"Primary Fridge WHS [emon ch12]\", 0) + COALESCE(\"2nd Fridge WHS [emon ch13]\", 0) AS refrigerator,\n    0 AS clothes_washer,\n    COALESCE(\"DRYER WHS (1-CT) [emon ch9]\", 0) + COALESCE(\"Dryer WHS (2-CTs) [xpod chA-9,10]\", 0) AS clothes_dryer,\n    COALESCE(\"DISH WASHER WHS [emon ch11]\", 0) AS dishwasher,\n    COALESCE(\"RANGE WHS (1-CT) [emon ch10]\", 0) AS cooking_range,\n    COALESCE(\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\", 0) AS pool_spa_pumps,\n    0 AS interior_lighting,\n    0 AS exterior_lighting,\n    0 AS lighting,\n    0 AS plug,\n    0 AS pool_spa_heater\nFROM Source11_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.87,
        "Prompt-1 Results": 0.87,
        "Complexity": NaN,
        "Remark or Note": "If the sample values are all constant like 32767, ChatGPT insert statement will be different with the one that we requested. One attribute value will get missing. Changing the sample values to be different will fix the problem"
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_1",
        "Source Data Schema": "eiaid, time, raw_count, scaled_unit_count, net_site_electricity_kwh, electricity_heating_kwh, electricity_central_system_heating_kwh, electricity_cooling_kwh electricity_central_system_cooling_kwh electricity_interior_lighting_kwh ,  electricity_exterior_lighting_kwh, electricity_fans_heating_kwh, electricity_fans_cooling_kwh, electricity_pumps_heating_kwh, electricity_central_system_pumps_heating_kwh, electricity_pumps_cooling_kwh, electricity_central_system_pumps_cooling_kwh, electricity_water_systems_kwh, electricity_refrigerator_kwh, electricity_clothes_washer_kwh, electricity_clothes_dryer_kwh, electricity_cooking_range_kwh, electricity_dishwasher_kwh, electricity_plug_loads_kwh, electricity_house_fan_kwh, electricity_range_fan_kwh, electricity_bath_fan_kwh, electricity_ceiling_fan_kwh, electricity_pool_heater_kwh, electricity_pool_pump_kwh, electricity_hot_tub_heater_kwh, electricity_hot_tub_pump_kwh",
        "Source Data Description": "several columns need to be summed up to map to a target attribute",
        "Schema Change Hints": "HVAC should map to sum of 'electricity_heating_kwh', 'Electricity_central_system_heating_kwh', 'electricity_cooling_kwh', 'Electricity_central_system_cooling_kwh', 'electricity_fans_heating_kwh', 'electricity_fans_cooling_kwh', 'electricity_pumps_heating_kwh', 'electricity_central_system_pumps_heating_kwh', 'electricity_pumps_cooling_kwh', 'Electricity_central_system_pumps_cooling_kwh', 'electricity_house_fan_kwh', 'electricity_range_fan_kwh', 'electricity_bath_fan_kwh'\u201d. Water_heating should map to \u2018electricity_water_systems_kwh\u2019. Pool_spa_pumps should be mapped to electricity_pool_pump_kwh', 'electricity_hot_tub_pump_kwh. Pool_spa_heaters should be mapped to electricity_pool_heater_kwh', 'electricity_hot_tub_heater_kwh. Lighting should map to 'electricity_interior_lighting_kwh', and 'electricity_exterior_lighting_kwh' only. Total should be mapped to net_site_electricity_kwh.",
        "5 Samples of Source Data": "4110\t1/1/12 0:15\t541079\t2991885.1\t725805.7599\t170365.3215\t12237.88533\t10173.73547\t34.21563194\t39205.13808\t7653.40551\t96214.55964\t1873.76192\t19.49044138\t356.2631311\t0\t36.81847325\t1745.742562\t40159.03534\t1058.877211\t25403.5408\t4560.913747\t2750.422583\t246207.2847\t0\t169.5248655\t1366.53176\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 0:30\t541079\t2991885.1\t722554.2831\t160103.2925\t10935.92883\t9711.168898\t37.86693016\t39205.13808\t7653.40551\t91366.3144\t1797.149517\t17.30827445\t289.4441454\t0\t39.9232761\t9110.146486\t40159.03534\t2015.263437\t30236.85493\t4560.913747\t3368.781329\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 0:45\t541079\t2991885.1\t716130.2572\t149229.6223\t10279.38991\t9061.367217\t36.14018945\t39205.13808\t7653.40551\t85162.82118\t1780.246698\t16.01782697\t268.8654444\t0\t43.81686068\t10928.70128\t40159.03534\t1012.157917\t42020.76348\t4560.913747\t2765.506754\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 1:00\t541079\t2991885.1\t671242.2494\t139390.4937\t9711.063783\t8148.226778\t34.61219386\t39205.13808\t7653.40551\t79591.76375\t1713.909978\t14.95129313\t251.1661129\t0\t44.0454923\t12663.48761\t40159.03534\t1784.424788\t13567.96229\t4560.913747\t801.3015034\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 1:15\t541079\t2991885.1\t589531.7712\t116364.942\t8094.490046\t7864.6224\t40.77766032\t23523.08285\t4592.043306\t67394.69316\t1885.288338\t12.82276972\t219.448326\t0\t45.01302594\t10212.27534\t39155.05946\t587.2272891\t14589.76377\t4560.913747\t430.0967761\t227741.7383\t0\t178.0227522\t1347.748753\t13609.00806\t51.2034934\t939.1945122\t2644.994663\t3209.364682",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target12_1_Valid;\n\nCREATE TABLE Target12_1_Valid (\n    month INT,\n    hour INT,\n    HVAC FLOAT,\n    water_heating FLOAT,\n    refrigerator FLOAT,\n    clothes_washer FLOAT,\n    clothes_dryer FLOAT,\n    dishwasher FLOAT,\n    cooking_range FLOAT,\n    pool_spa_pumps FLOAT,\n    interior_lighting FLOAT,\n    exterior_lighting FLOAT,\n    lighting FLOAT,\n    plug FLOAT,\n    pool_spa_heater FLOAT\n);    INSERT INTO Target12_1_Valid (\n    month,\n    hour,\n    HVAC,\n    water_heating,\n    refrigerator,\n    clothes_washer,\n    clothes_dryer,\n    dishwasher,\n    cooking_range,\n    pool_spa_pumps,\n    interior_lighting,\n    exterior_lighting,\n    lighting,\n    plug,\n    pool_spa_heater\n)\nSELECT\n    EXTRACT(MONTH FROM time) AS month,\n    EXTRACT(HOUR FROM time) AS hour,\n    electricity_heating_kwh + electricity_central_system_heating_kwh + electricity_cooling_kwh + electricity_central_system_cooling_kwh + electricity_fans_heating_kwh + electricity_fans_cooling_kwh + electricity_pumps_heating_kwh + electricity_central_system_pumps_heating_kwh + electricity_pumps_cooling_kwh + electricity_central_system_pumps_cooling_kwh + electricity_house_fan_kwh + electricity_range_fan_kwh + electricity_bath_fan_kwh AS HVAC,\n    electricity_water_systems_kwh AS water_heating,\n    electricity_refrigerator_kwh AS refrigerator,\n    electricity_clothes_washer_kwh AS clothes_washer,\n    electricity_clothes_dryer_kwh AS clothes_dryer,\n    electricity_dishwasher_kwh AS dishwasher,\n    electricity_cooking_range_kwh AS cooking_range,\n    electricity_pool_pump_kwh + electricity_hot_tub_pump_kwh AS pool_spa_pumps,\n    electricity_interior_lighting_kwh AS interior_lighting,\n    electricity_exterior_lighting_kwh AS exterior_lighting,\n    electricity_interior_lighting_kwh + electricity_exterior_lighting_kwh AS lighting,\n    electricity_plug_loads_kwh AS plug,\n    electricity_pool_heater_kwh + electricity_hot_tub_heater_kwh AS pool_spa_heater\nFROM Source12_1;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.93,
        "Prompt-1 Results": 0.87,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_2",
        "Source Data Schema": "local_15min        air1_sum        air1_count        air2_sum        air2_count        air3_sum        air3_count        airwindowunit1_sum        airwindowunit1_count        aquarium1_sum        aquarium1_count        bathroom1_sum        bathroom1_count        bathroom2_sum        bathroom2_count        bedroom1_sum        bedroom1_count        bedroom2_sum        bedroom2_count        bedroom3_sum        bedroom3_count        bedroom4_sum        bedroom4_count        bedroom5_sum        bedroom5_count        battery1_sum        battery1_count        car1_sum        car1_count        car2_sum        car2_count        circpump1_sum        circpump1_count        clotheswasher1_sum        clotheswasher1_count        clotheswasher_dryg1_sum        clotheswasher_dryg1_count        diningroom1_sum        diningroom1_count        diningroom2_sum        diningroom2_count        dishwasher1_sum        dishwasher1_count        disposal1_sum        disposal1_count        drye1_sum        drye1_count        dryg1_sum        dryg1_count        freezer1_sum        freezer1_count        furnace1_sum        furnace1_count        furnace2_sum        furnace2_count        garage1_sum        garage1_count        garage2_sum        garage2_count        grid_sum        grid_count        heater1_sum        heater1_count        heater2_sum        heater2_count        heater3_sum        heater3_count        housefan1_sum        housefan1_count        icemaker1_sum        icemaker1_count        jacuzzi1_sum        jacuzzi1_count        kitchen1_sum        kitchen1_count        kitchen2_sum        kitchen2_count        kitchenapp1_sum        kitchenapp1_count        kitchenapp2_sum        kitchenapp2_count        lights_plugs1_sum        lights_plugs1_count        lights_plugs2_sum        lights_plugs2_count        lights_plugs3_sum        lights_plugs3_count        lights_plugs4_sum        lights_plugs4_count        lights_plugs5_sum        lights_plugs5_count        lights_plugs6_sum        lights_plugs6_count        livingroom1_sum        livingroom1_count        livingroom2_sum        livingroom2_count        microwave1_sum        microwave1_count        office1_sum        office1_count        outsidelights_plugs1_sum        outsidelights_plugs1_count        outsidelights_plugs2_sum        outsidelights_plugs2_count        oven1_sum        oven1_count        oven2_sum        oven2_count        pool1_sum        pool1_count        pool2_sum        pool2_count        poollight1_sum        poollight1_count        poolpump1_sum        poolpump1_count        pump1_sum        pump1_count        range1_sum        range1_count        refrigerator1_sum        refrigerator1_count        refrigerator2_sum        refrigerator2_count        security1_sum        security1_count        sewerpump1_sum        sewerpump1_count        shed1_sum        shed1_count        solar_sum        solar_count        solar2_sum        solar2_count        sprinkler1_sum        sprinkler1_count        sumppump1_sum        sumppump1_count        utilityroom1_sum        utilityroom1_count        venthood1_sum        venthood1_count        waterheater1_sum        waterheater1_count        waterheater2_sum        waterheater2_count        wellpump1_sum        wellpump1_count        winecooler1_sum        winecooler1_count",
        "Source Data Description": "several columns need to be summed up to map to a target attribute. attributes with \"_count\" can be ignored. \n\n",
        "Schema Change Hints": "HVAC is ['airwindowunit1', 'furnace1', 'furnace2', 'heater1', 'housefan1']\nwater_heating is ['waterheater1', 'waterheater2'] interior_lighting is ['lights_plugs1','lights_plugs2','lights_plugs3','lights_plugs4','lights_plugs5','lights_plugs6']\nexterior_lighting is ['outsidelights_plugs1','outsidelights_plugs2','poollight1'], cooking range is ['oven1', 'oven2', 'range1'], plug is ['aquarium1', 'disposal1', 'kitchenapp1', 'kitchenapp2', 'microwave1', 'security1', 'shed1', 'sprinkler1', 'pump1', 'icemaker1'],\nlighting is interior_lighting + exterior_lighting, pool_spa_pumps is ['poolpump1']",
        "5 Samples of Source Data": "12/31/11 23:00                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0        0.524        2                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0        -0.008        2                0                0                0                0                0                0                0                0                0",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target12_2_Valid;   CREATE TABLE Target12 (\n    month INT, hour INT,\n    HVAC FLOAT, water_heating FLOAT,\n    refrigerator FLOAT, clothes_washer FLOAT,\n    clothes_dryer FLOAT, dishwasher FLOAT,\n    cooking_range FLOAT, pool_spa_pumps FLOAT,\n    interior_lighting FLOAT, exterior_lighting FLOAT,\n    lighting FLOAT, plug FLOAT,\n    pool_spa_heater FLOAT\n);\n\n-- Insert data from Source12_2 into Target12\nINSERT INTO Target12 (month, hour, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT \n    EXTRACT(MONTH FROM local_15min) AS month,\n    EXTRACT(HOUR FROM local_15min) AS hour,\n    airwindowunit1_sum + furnace1_sum + furnace2_sum + heater1_sum + housefan1_sum AS HVAC,\n    waterheater1_sum + waterheater2_sum AS water_heating,\n    refrigerator1_sum + refrigerator2_sum AS refrigerator,\n    clotheswasher1_sum AS clothes_washer,\n    clotheswasher_dryg1_sum AS clothes_dryer,\n    dishwasher1_sum AS dishwasher,\n    oven1_sum + oven2_sum + range1_sum AS cooking_range,\n    poolpump1_sum AS pool_spa_pumps,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum + lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum AS interior_lighting,\n    outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum AS exterior_lighting,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum + lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum + outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum AS lighting,\n    aquarium1_sum + disposal1_sum + kitchenapp1_sum + kitchenapp2_sum + microwave1_sum + security1_sum + shed1_sum + sprinkler1_sum + pump1_sum + icemaker1_sum AS plug,\n    jacuzzi1_sum AS pool_spa_heater\nFROM Source12_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.8,
        "Prompt-1 Results": 0.13,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_3",
        "Source Data Schema": "site,timestamp,\"TOTAL BLDG WHS [emon ch1,2]\",\"AC COMPRESSOR WHS [emon ch3,4]\",\"AIR HANDLER WHS [emon ch5,6]\",\"WATER HEATER WHS [emon ch7,8]\",DRYER WHS (1-CT) [emon ch9],RANGE WHS (1-CT) [emon ch10],DISH WASHER WHS [emon ch11],Primary Fridge WHS [emon ch12],2nd Fridge WHS [emon ch13],SPARE1 WHS (1-CT) [emon ch14],SPARE2 WHS (1-CT) [xpod chA-1],SPARE3 WHS (1-CT) [xpod chA-2],\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\",\"SPARE4 WHS (2-CTs) [xpod chA-5,6]\",\"Minisplit WHS (2-CTs) [xpod chA-7,8]\",\"Dryer WHS (2-CTs) [xpod chA-9,10]\",Calculated Unmeasured loads (Whr),Calculated Energy Use (Whr),\"Future use- WHS (2-CTs)[xpod chB-3,4]\",\"Future use- WHS (2-CTs)[xpod chB-5,6]\",eMonitor Temp (deg. F),Wattsup Cumulative Ent.Ctr (WHS),Wattsup Energy Ent.Ctr (WHS),Wattsup Cumulative Washer (WHS),Wattsup Energy Washer (WHS),LaCrosse Device Temp (deg. F),PointSix Temp (deg. F),PointSix Humidity (%),HOBO LOGGER TEMP (deg. F),HOBO LOGGER RH (%)\n",
        "Source Data Description": "timestamp is for every hour time.  Most of the attributes are of the float type, except site and timestamp. No attributes in the source table corresponds to clothes_washer, interior_lighting, exterior_lighting, and Pool/spa_heater in the target table, but we still need these attributes in the transformed table with values being 0. some columns need to be sumed up to map to a target attribute.",
        "Schema Change Hints": "HVAC corresponds to the sum of \"AC COMPRESSOR WHS [emon ch3,4]\", \"AIR HANDLER WHS [emon ch5,6]\", and \"Minisplit WHS (2-CTs) [xpod chA-7,8]\". water_heating corresponds to \"WATER HEATER WHS [emon ch7,8]\". clothes_dryer corresponds to \"DRYER WHS (1-CT) [emon ch9]\" and \"Dryer WHS (2-CTs) [xpod chA-9,10]\". \"Cooking range corresponds to \"RANGE WHS (1-CT) [emon ch10]\". Refrigerator corresponds to \"Primary Fridge WHS [emon ch12]\" and \"2nd Fridge WHS [emon ch13]\". Dish_washer corresponds to \"DISH WASHER WHS [emon ch11]\". pool_spa_pumps corresponds to \"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\".",
        "5 Samples of Source Data": "36        8/22/12 16:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 17:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 18:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 19:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 20:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target12_3_Valid;\nCREATE TABLE Target12_3_Valid (\n    month INT,  hour INT, \n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);\n\nINSERT INTO Target12_3_Valid (month, hour, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT\n    EXTRACT(MONTH FROM timestamp) AS month, EXTRACT (HOUR FROM timestamp) AS hour, \n    COALESCE(\"AC COMPRESSOR WHS [emon ch3,4]\", 0) + COALESCE(\"AIR HANDLER WHS [emon ch5,6]\", 0) + COALESCE(\"Minisplit WHS (2-CTs) [xpod chA-7,8]\", 0) AS HVAC,\n    COALESCE(\"WATER HEATER WHS [emon ch7,8]\", 0) AS water_heating,\n    COALESCE(\"Primary Fridge WHS [emon ch12]\", 0) + COALESCE(\"2nd Fridge WHS [emon ch13]\", 0) AS refrigerator,\n    0 AS clothes_washer,\n    COALESCE(\"DRYER WHS (1-CT) [emon ch9]\", 0) + COALESCE(\"Dryer WHS (2-CTs) [xpod chA-9,10]\", 0) AS clothes_dryer,\n    COALESCE(\"DISH WASHER WHS [emon ch11]\", 0) AS dishwasher,\n    COALESCE(\"RANGE WHS (1-CT) [emon ch10]\", 0) AS cooking_range,\n    COALESCE(\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\", 0) AS pool_spa_pumps,\n    0 AS interior_lighting,\n    0 AS exterior_lighting,\n    0 AS lighting,\n    0 AS plug,\n    0 AS pool_spa_heater\nFROM Source12_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.93,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_4",
        "Source Data Schema": "End Use Category,        End Use,        Time Period,        Day Type,        Hour Ending,        Number of Homes in Bin With This End Use Metered,        Average Demand Per Home With This End Use [kW]\n",
        "Source Data Description": "The end use category attribute has categorical values including HVAC, Water Heating, Primary Refrigerator, Clothes Washer, Clothes Dryer-Electric, Dishwasher, Pool Pump, Lighting, Primary TV and Peripherals, Primary Desktop, Computer, Dehumidifier, Other Pump, Misc Metered, Remaining Load, Secondary Refrigerator, Freezer. The end use attribute provides more detailed end use information, which can be ignored in transformation. The time period contains months such as January, Febuary, and so on, Hour Ending specifies the hour as an integer between 1 and 24. ",
        "Schema Change Hints": "Use pivoting. Water heating corresponds to the sum of  Water Heater \u2013 Electric\nand Water Heater - Heat Pump. Refrigerator corresponds to the sum of Primary refrigerator , Secondary refrigerator, and Freezer. Plug corresponds to the sum of Primary TV and Peripherals, Primary Desktop, Computer, Dehumidifier, Other Pump, Misc Metered, Remaining Load. There is no corresponding attributes in the source to cooking range, Interior lighting, exterior lighting, and pool/spa heaters.\n",
        "5 Samples of Source Data": "HVAC        Furnace Fan        January        Weekday        1        80        0.13\nHVAC        Furnace Fan        January        Weekday        2        80        0.14\nHVAC        Furnace Fan        January        Weekday        3        80        0.15\nWater Heating        Water Heater - Heat Pump        December        Weekend        1        5        0.11\nWater Heating        Water Heater - Heat Pump        December        Weekend        2        5        0.052",
        "Ground Truth SQL": "\nDROP TABLE IF EXISTS Target12_4_Valid;\n\n-- Create the second table\nCREATE TABLE Target12_4_Valid (\n    month INTEGER,\n    hour INTEGER,\n    HVAC FLOAT,\n    water_heating FLOAT,\n    refrigerator FLOAT,\n    clothes_washer FLOAT,\n    clothes_dryer FLOAT,\n    dishwasher FLOAT,\n    cooking_range FLOAT,\n    pool_spa_pumps FLOAT,\n    interior_lighting FLOAT,\n    exterior_lighting FLOAT,\n    lighting FLOAT,\n    plug FLOAT,\n    pool_spa_heater FLOAT\n);\n\n-- Insert rows from the first table into the second table\nINSERT INTO Target12_4_Valid (month, hour, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT \n    CASE \"Time Period\"\n        WHEN 'January' THEN 1\n        WHEN 'February' THEN 2\n        WHEN 'March' THEN 3\n        WHEN 'April' THEN 4 WHEN 'May' THEN 5 WHEN 'June' THEN 6 WHEN 'July' THEN 7 WHEN 'August' THEN 8 WHEN 'September' THEN 9 WHEN 'October' THEN 10 WHEN 'November' THEN 11 WHEN 'December' THEN 12\n    END AS month,\n    \"Hour Ending\" AS hour,\n    CASE \"End Use Category\"\n        WHEN 'HVAC' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS HVAC,\n    CASE \"End Use Category\"\n        WHEN 'Water Heating' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS water_heating,\n    CASE \"End Use Category\"\n        WHEN 'Primary Refrigerator' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Secondary Refrigerator' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Freezer' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS refrigerator,\n    CASE \"End Use Category\"\n        WHEN 'Clothes Washer' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS clothes_washer,\n    CASE \"End Use Category\"\n        WHEN 'Clothes Dryer-Electric' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS clothes_dryer,\n    CASE \"End Use Category\"\n        WHEN 'Dishwasher' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS dishwasher,\n    0 AS cooking_range,\n    0 AS pool_spa_pumps,\n    0 AS interior_lighting,\n    0 AS exterior_lighting,\n    0 AS lighting,\n    CASE \"End Use Category\"\n        WHEN 'Primary TV and Peripherals' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Primary Desktop' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Computer' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Dehumidifier' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Other Pump' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Misc Metered' THEN \"Average Demand Per Home With This End Use [kW]\"\n        WHEN 'Remaining Load' THEN \"Average Demand Per Home With This End Use [kW]\"\n        ELSE 0\n    END AS plug,\n    0 AS pool_spa_heater\nFROM Source12_4;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.27,
        "Prompt-1 Results": 0.27,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2020-04-02T00:00:00",
        "Source Data Schema": "FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2021-02-15T00:00:00",
        "Source Data Schema": "FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key,Incident_Rate,Case_Fatality_Ratio",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2021-01-01T00:00:00",
        "Source Data Schema": "Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,FIPS,Incident_Rate,Total_Test_Results,People_Hospitalized,Case_Fatality_Ratio,UID,ISO3,Testing_Rate,Hospitalization_Rate,Date,People_Tested,Mortality_Rate",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2023-01-01T00:00:00",
        "Source Data Schema": "Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,FIPS,Incident_Rate,Total_Test_Results,People_Hospitalized,Case_Fatality_Ratio,UID,ISO3,Testing_Rate,Hospitalization_Rate",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Machine Log dataset",
        "Target Data Schema": "Parsed Data",
        "Target Data Description": "(time        Tasks_total        Tasks_running        Tasks_sleeping        Tasks_stopped        Tasks_zombie        Mem_total        Mem_used        Mem_free        Mem_bufferes        Swap_total        Swap_used        Swap_free        Swap_cached        cpu_user        cpu_nice        cpu_sys        cpu_idle        cpu_iow        cpu_irq        cpu_sirq        cpu_host\n)",
        "Source Data Name": "mac os ",
        "Source Data Schema": "(Processes_total        Processes_running        Processes_sleeping        Processes_threads        time        Load_Avg        CPU_usage_user        CPU_usage_sys        CPU_usage_idle        SharedLibs_resident        SharedLibs_data        SharedLibs_linkedit        MemRegions_total        MemRegions_resident        MemRegions_private        MemRegions_shared        PhysMem_used        PhysMem_wired        PhysMem_unused        VM_vsize        VM_framework_vsize        VM_swapins        VM_swapouts        Networks_packets_in        Networks_packets_out        Disks_read        Disks_written)",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Machine Log dataset",
        "Target Data Schema": "Parsed Data",
        "Target Data Description": "(time        Tasks_total        Tasks_running        Tasks_sleeping        Tasks_stopped        Tasks_zombie        Mem_total        Mem_used        Mem_free        Mem_bufferes        Swap_total        Swap_used        Swap_free        Swap_cached        cpu_user        cpu_nice        cpu_sys        cpu_idle        cpu_iow        cpu_irq        cpu_sirq        cpu_host\n)",
        "Source Data Name": "linux",
        "Source Data Schema": "(time        users        load_average        Tasks_total        Tasks_running        Tasks_sleeping        Tasks_stopped        Tasks_zombie        Cpu_us        Cpu_sy        Cpu_ni        Cpu_id        Cpu_wa        Cpu_hi        Cpu_si        Cpu_st        Mem_MiB_total        Mem_MiB_free        Mem_MiB_used        Mem_MiB_buff        Swap_MiB_total        Swap_MiB_free        Swap_MiB_used        Swap_MiB_avail)",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target15",
        "Target Data Schema": "month hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "month and hour have integer values. Other attributes have float values.",
        "Source Data Name": "Source15_1",
        "Source Data Schema": "eiaid, time, raw_count, scaled_unit_count, net_site_electricity_kwh, electricity_heating_kwh, electricity_central_system_heating_kwh, electricity_cooling_kwh electricity_central_system_cooling_kwh electricity_interior_lighting_kwh ,  electricity_exterior_lighting_kwh, electricity_fans_heating_kwh, electricity_fans_cooling_kwh, electricity_pumps_heating_kwh, electricity_central_system_pumps_heating_kwh, electricity_pumps_cooling_kwh, electricity_central_system_pumps_cooling_kwh, electricity_water_systems_kwh, electricity_refrigerator_kwh, electricity_clothes_washer_kwh, electricity_clothes_dryer_kwh, electricity_cooking_range_kwh, electricity_dishwasher_kwh, electricity_plug_loads_kwh, electricity_house_fan_kwh, electricity_range_fan_kwh, electricity_bath_fan_kwh, electricity_ceiling_fan_kwh, electricity_pool_heater_kwh, electricity_pool_pump_kwh, electricity_hot_tub_heater_kwh, electricity_hot_tub_pump_kwh",
        "Source Data Description": "\"eiaid\" is an ID. \"time\" consists of date and hour. Many columns are for different electricity loads.",
        "Schema Change Hints": "Please follow two steps. \nThe first step, map \"time\" to month and hour by extracting the month and hour information.\nMap several columns need to be summed up to map to a target attribute: \nHVAC should map to the sum of 'electricity_heating_kwh', 'electricity_central_system_heating_kwh', 'electricity_cooling_kwh', 'electricity_central_system_cooling_kwh', 'electricity_fans_heating_kwh', 'electricity_fans_cooling_kwh', 'electricity_pumps_heating_kwh', 'electricity_central_system_pumps_heating_kwh', 'electricity_pumps_cooling_kwh', 'electricity_central_system_pumps_cooling_kwh', 'electricity_house_fan_kwh', 'electricity_range_fan_kwh', 'electricity_bath_fan_kwh'.\ndomestic_water_heating should map to 'electricity_water_systems_kwh'. \nmajor_appliances should be mapped to the sum of 'electricity_refrigerator_kwh', 'electricity_clothes_washer_kwh', 'electricity_clothes_dryer_kwh', 'electricity_dishwasher_kwh', 'electricity_cooking_range_kwh', 'electricity_pool_pump_kwh', 'electricity_hot_tub_pump_kwh', 'electricity_pool_heater_kwh', 'electricity_hot_tub_heater_kwh'. \nlighting should map to the sum of 'electricity_interior_lighting_kwh', and 'electricity_exterior_lighting_kwh'. \nmiscellaneous_plug_loads should map to 'electricity_plug_loads_kwh'.\nTotal should be mapped to 'net_site_electricity_kwh'.\n\nThe second step, group rows by month and hour, and aggregate them by summation. ",
        "5 Samples of Source Data": "4110        \u201c1/1/12 0:15\u201d        541079        2991885.1        725805.7599        170365.3215        12237.88533        10173.73547        34.21563194        39205.13808        7653.40551        96214.55964        1873.76192        19.49044138        356.2631311        0        36.81847325        1745.742562        40159.03534        1058.877211        25403.5408        4560.913747        2750.422583        246207.2847        0        169.5248655        1366.53176        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 0:30\u201d        541079        2991885.1        722554.2831        160103.2925        10935.92883        9711.168898        37.86693016        39205.13808        7653.40551        91366.3144        1797.149517        17.30827445        289.4441454        0        39.9232761        9110.146486        40159.03534        2015.263437        30236.85493        4560.913747        3368.781329        246207.2847        0        178.0227522        1347.748753        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 0:45\u201d        541079        2991885.1        716130.2572        149229.6223        10279.38991        9061.367217        36.14018945        39205.13808        7653.40551        85162.82118        1780.246698        16.01782697        268.8654444        0        43.81686068        10928.70128        40159.03534        1012.157917        42020.76348        4560.913747        2765.506754        246207.2847        0        178.0227522        1347.748753        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 1:00\u201d        541079        2991885.1        671242.2494        139390.4937        9711.063783        8148.226778        34.61219386        39205.13808        7653.40551        79591.76375        1713.909978        14.95129313        251.1661129        0        44.0454923        12663.48761        40159.03534        1784.424788        13567.96229        4560.913747        801.3015034        246207.2847        0        178.0227522        1347.748753        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 1:15\u201d        541079        2991885.1        589531.7712        116364.942        8094.490046        7864.6224        40.77766032        23523.08285        4592.043306        67394.69316        1885.288338        12.82276972        219.448326        0        45.01302594        10212.27534        39155.05946        587.2272891        14589.76377        4560.913747        430.0967761        227741.7383        0        178.0227522        1347.748753        13609.00806        51.2034934        939.1945122        2644.994663        3209.364682\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target15_Valid;\nCREATE TABLE Target15_Valid (\n    month INT,\n    hour INT,\n    HVAC FLOAT,\n    domestic_water_heating FLOAT,\n    major_appliances FLOAT,\n    lighting FLOAT,\n    miscellaneous_plug_loads FLOAT,\n    Total FLOAT\n);\n\nINSERT INTO Target15_Valid (month, hour, HVAC, domestic_water_heating, major_appliances, lighting, miscellaneous_plug_loads, Total)\nSELECT\n    EXTRACT(MONTH FROM time) AS month,\n    EXTRACT(HOUR FROM time) AS hour,\n    SUM(electricity_heating_kwh + electricity_central_system_heating_kwh +\n        electricity_cooling_kwh + electricity_central_system_cooling_kwh +\n        electricity_fans_heating_kwh + electricity_fans_cooling_kwh +\n        electricity_pumps_heating_kwh + electricity_central_system_pumps_heating_kwh +\n        electricity_pumps_cooling_kwh + electricity_central_system_pumps_cooling_kwh +\n        electricity_house_fan_kwh + electricity_range_fan_kwh + electricity_bath_fan_kwh) AS HVAC,\n    SUM(electricity_water_systems_kwh) AS domestic_water_heating,\n    SUM(electricity_refrigerator_kwh + electricity_clothes_washer_kwh +\n        electricity_clothes_dryer_kwh + electricity_dishwasher_kwh +\n        electricity_cooking_range_kwh + electricity_pool_pump_kwh +\n        electricity_hot_tub_pump_kwh + electricity_pool_heater_kwh +\n        electricity_hot_tub_heater_kwh) AS major_appliances,\n    SUM(electricity_interior_lighting_kwh + electricity_exterior_lighting_kwh) AS lighting,\n    SUM(electricity_plug_loads_kwh) AS miscellaneous_plug_loads,\n    SUM(net_site_electricity_kwh) AS Total\nFROM Source15_1\nGROUP BY month, hour;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target15",
        "Target Data Schema": "month hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "month and hour have integer values. Other attributes have float values.",
        "Source Data Name": "Source15_2",
        "Source Data Schema": "local_15min        air1_sum        air1_count        air2_sum        air2_count        air3_sum        air3_count        airwindowunit1_sum        airwindowunit1_count        aquarium1_sum        aquarium1_count        bathroom1_sum        bathroom1_count        bathroom2_sum        bathroom2_count        bedroom1_sum        bedroom1_count        bedroom2_sum        bedroom2_count        bedroom3_sum        bedroom3_count        bedroom4_sum        bedroom4_count        bedroom5_sum        bedroom5_count        battery1_sum        battery1_count        car1_sum        car1_count        car2_sum        car2_count        circpump1_sum        circpump1_count        clotheswasher1_sum        clotheswasher1_count        clotheswasher_dryg1_sum        clotheswasher_dryg1_count        diningroom1_sum        diningroom1_count        diningroom2_sum        diningroom2_count        dishwasher1_sum        dishwasher1_count        disposal1_sum        disposal1_count        drye1_sum        drye1_count        dryg1_sum        dryg1_count        freezer1_sum        freezer1_count        furnace1_sum        furnace1_count        furnace2_sum        furnace2_count        garage1_sum        garage1_count        garage2_sum        garage2_count        grid_sum        grid_count        heater1_sum        heater1_count        heater2_sum        heater2_count        heater3_sum        heater3_count        housefan1_sum        housefan1_count        icemaker1_sum        icemaker1_count        jacuzzi1_sum        jacuzzi1_count        kitchen1_sum        kitchen1_count        kitchen2_sum        kitchen2_count        kitchenapp1_sum        kitchenapp1_count        kitchenapp2_sum        kitchenapp2_count        lights_plugs1_sum        lights_plugs1_count        lights_plugs2_sum        lights_plugs2_count        lights_plugs3_sum        lights_plugs3_count        lights_plugs4_sum        lights_plugs4_count        lights_plugs5_sum        lights_plugs5_count        lights_plugs6_sum        lights_plugs6_count        livingroom1_sum        livingroom1_count        livingroom2_sum        livingroom2_count        microwave1_sum        microwave1_count        office1_sum        office1_count        outsidelights_plugs1_sum        outsidelights_plugs1_count        outsidelights_plugs2_sum        outsidelights_plugs2_count        oven1_sum        oven1_count        oven2_sum        oven2_count        pool1_sum        pool1_count        pool2_sum        pool2_count        poollight1_sum        poollight1_count        poolpump1_sum        poolpump1_count        pump1_sum        pump1_count        range1_sum        range1_count        refrigerator1_sum        refrigerator1_count        refrigerator2_sum        refrigerator2_count        security1_sum        security1_count        sewerpump1_sum        sewerpump1_count        shed1_sum        shed1_count        solar_sum        solar_count        solar2_sum        solar2_count        sprinkler1_sum        sprinkler1_count        sumppump1_sum        sumppump1_count        utilityroom1_sum        utilityroom1_count        venthood1_sum        venthood1_count        waterheater1_sum        waterheater1_count        waterheater2_sum        waterheater2_count        wellpump1_sum        wellpump1_count        winecooler1_sum        winecooler1_count",
        "Source Data Description": "\"local_15min\" consists of date and hour. Many columns are for different electricity loads. ",
        "Schema Change Hints": "Please follow three steps. \nThe first step, map \"local_15min\" to month and hour by extracting the month and hour information.\nMap several columns need to be summed up to map to a target attribute: \nHVAC should map to the sum of \u2018airwindowunit1_sum\u2019, \u2018furnace1_sum\u2019, \u2018furnace2_sum\u2019, \u2018housefan1_sum\u2019, and \u2018venthood1_sum\u2019.\ndomestic_water_heating should map to the sum of \u2018waterheater1_sum\u2019, \u2018waterheater2_sum\u2019. \nmajor_appliances should be mapped to the sum of \u2018refrigerator1_sum\u2019, \u2018clotheswasher1_sum\u2019, \u2018drye1_sum\u2019, \u2018dishwasher1_sum\u2019, \u2018oven1_sum\u2019, \u2018oven2_sum\u2019, \u2018range1_sum\u2019, and \u2018poolpump1_sum\u2019.\nlighting should map to the sum of \u2018lights_plugs1_sum\u2019, \u2018lights_plugs2_sum\u2019, \u2018lights_plugs3_sum\u2019, \u2018lights_plugs4_sum\u2019, \u2018lights_plugs5_sum\u2019, \u2018lights_plugs6_sum\u2019, \u2018outsidelights_plugs1_sum\u2019, \u2018outsidelights_plugs2_sum\u2019, and \u2018poollight1_sum\u2019. \nmiscellaneous_plug_loads should map to the sum of \u2018aquarium1_sum\u2019, \u2018disposal1_sum\u2019, \u2018kitchenapp1_sum\u2019, \u2018kitchenapp2_sum\u2019, \u2018microwave1_sum\u2019, \u2018security1_sum\u2019, \u2018shed1_sum\u2019, \u2018sprinkler1_sum\u2019, \u2018pump1_sum\u2019, \u2018icemaker1_sum\u2019, \u2018freezer1_sum\u2019, \u2018refrigerator2_sum\u2019, \u2018winecooler1_sum\u2019, and \u2018car1_sum\u2019.\n\nThe second step, group rows by month and hour, and aggregate them by summation.\n\nThe third step, update Total in the target table to the sum of HVAC, domestic_water_heating, major_appliances, lighting, and miscellaneous_plug_loads.",
        "5 Samples of Source Data": "\u201c4/4/16 18:00\u201d,102.057,388,23.613,77,2.063,9,0.022,4,0.236,1,1.616,95,0.068,11,3.101,83,1.988,34,0.165,6,0.015,1,0.035,1,,0,60.037,82,,0,,0,2.038,237,0.217,30,0.293,22,,0,4.092,265,0.103,134,25.281,238,0.561,58,0.746,14,27.349,301,4.262,57,1.528,42,0.05,4,549.192,423,0.512,8,,0,,0,0,3,0.518,6,0.646,35,2.332,46,0.883,13,4.363,189,2.782,142,6.146,115,3.343,57,2.459,27,0.369,10,0.036,5,0.021,1,7.551,82,0.87,9,4.023,206,4.434,44,0.814,27,0.571,5,15.85,163,0.027,5,0.208,2,,0,0,3,7.832,28,0.018,5,3.371,87,26.764,280,2.877,29,0.29,16,,0,0.335,3,130.861,282,,0,0.035,11,,0,1.006,6,0.801,34,14.053,40,0.008,3,,0,0.286,6\n\u201c4/4/16 18:15\u201d,108.213,388,14.166,77,1.631,9,0.022,4,0.16,1,1.625,95,0.043,11,3.487,83,2.072,34,0.162,6,0.014,1,0.038,1,,0,60.251,82,,0,,0,1.478,237,0.024,30,0.279,22,,0,7.852,265,0.096,134,31.687,238,0.539,58,1.286,14,28.887,301,4.052,57,1.268,42,0.05,4,612.065,423,0.242,8,,0,,0,0,3,0.681,6,4.698,35,2.259,46,0.974,13,3.953,189,3.836,142,7.853,115,3.5,57,2.727,27,0.343,10,0.019,5,0.021,1,8.018,82,0.87,9,6.386,206,4.599,44,0.988,27,0.582,5,12.451,163,0.018,5,0.146,2,,0,0,3,8.298,28,0.014,5,2.035,87,28.036,280,2.385,29,0.29,16,,0,0.201,3,77.407,282,,0,0.033,11,,0,1.171,6,0.785,34,9.527,40,0.006,3,,0,0.327,6\n\u201c4/4/16 18:30\u201d,94.715,388,14.413,77,1.861,9,0.023,4,0.1,1,1.824,95,0.429,11,3.412,83,1.862,34,0.162,6,0.014,1,0.038,1,,0,51.344,82,,0,,0,1.127,237,0.363,30,0.258,22,,0,6.351,265,0.105,134,22.112,238,0.349,58,1.09,14,26.926,301,3.629,57,1.089,42,0.05,4,623.753,423,0.484,8,,0,,0,0,3,0.59,6,4.346,35,2.858,46,0.754,13,4.298,189,1.725,142,10.798,115,3.517,57,2.588,27,0.359,10,0.249,5,0.021,1,8.74,82,0.909,9,3.016,206,4.779,44,1.01,27,0.685,5,12.096,163,0.026,5,0.147,2,,0,0,3,5.972,28,0.018,5,2.234,87,27.121,280,2.534,29,0.289,16,,0,0.005,3,29.184,282,,0,0.054,11,,0,1.109,6,0.679,34,9.595,40,3.512,3,,0,0.406,6\n\u201c4/4/16 18:45\u201d,86.045,388,17.683,77,1.141,9,0.023,4,0.075,1,1.728,95,0.725,11,3.726,83,2.03,34,0.162,6,0.014,1,0.038,1,,0,53.045,82,,0,,0,0.901,237,0.599,30,0.259,22,,0,5.084,265,0.077,134,18.873,238,0.116,58,0.756,14,26.447,301,3.85,57,1.183,42,0.134,4,630.259,423,0.224,8,,0,,0,3,0.012     0.7,6,1.051,35,2.522,46,0.783,13,2.641,189,2.204,142,10.309,115,3.935,57,2.833,27,0.408,10,0.428,5,0.021,1,9.5,82,0.866,9,4.007,206,4.86,44,1.37,27,0.804,5,14.378,163,0.027,5,0.148,2,,0,0,3,5.593,28,0.014,5,1.167,87,26.232,280,2.656,29,0.292,16,,0,0.014,3,12.177,282,,0,0.029,11,,0,0.991,6,0.338,34,15.571,40,1.241,3,,0,0.301,,6\n\u201c4/4/16 19:00\u201d,91.676,388,14.401,77,1.319,9,0.022,4,0.117,1,1.9,96,0.628,11,4.274,83,2.042,34,0.178,6,0.014,1,0.037,1,,0,61.889,82,,0,,0,0.782,238,0.583,30,0.262,22,,0,5.271,266,0.083,135,19.732,238,0.327,58,0.713,14,26.16,302,3.429,57,1.69,43,0.177,4,658.31,423,0.46,8,,0,,0,0,3,0.673,6,1.014,35,2.535,46,0.667,13,2.913,190,1.48,143,11.611,116,4.263,57,2.987,27,0.358,10,0.442,5,0.021,1,10.45,82,0.867,9,2.973,207,4.895,45,1.204,27,0.844,5,8.554,163,0.029,5,0.147,2,,0,0,3,5.381,28,0.018,5,3.787,87,27.235,281,2.131,29,0.291,16,,0,0.009,3,8.327,282,,0,0.061,11,,0,1.08,6,0.376,34,14.635,40,0.004,3,,0,0.338,6",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target15;\n\n-- Create the second table\nCREATE TABLE Target15 (\n    month INT,\n    hour INT,\n    HVAC FLOAT,\n    domestic_water_heating FLOAT,\n    major_appliances FLOAT,\n    lighting FLOAT,\n    miscellaneous_plug_loads FLOAT,\n    Total FLOAT\n);\n\n-- Insert data from the first table into the second table with required aggregations\nINSERT INTO Target15 (month, hour, HVAC, domestic_water_heating, major_appliances, lighting, miscellaneous_plug_loads)\nSELECT EXTRACT(MONTH FROM local_15min) AS month,\n       EXTRACT(HOUR FROM local_15min) AS hour,\n       COALESCE(SUM(airwindowunit1_sum + furnace1_sum + furnace2_sum + housefan1_sum + venthood1_sum), 0) AS HVAC,\n       COALESCE(SUM(waterheater1_sum + waterheater2_sum), 0) AS domestic_water_heating,\n       COALESCE(SUM(refrigerator1_sum + clotheswasher1_sum + drye1_sum + dishwasher1_sum + oven1_sum + oven2_sum + range1_sum + poolpump1_sum), 0) AS major_appliances,\n       COALESCE(SUM(lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum + lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum + outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum), 0) AS lighting,\n       COALESCE(SUM(aquarium1_sum + disposal1_sum + kitchenapp1_sum + kitchenapp2_sum + microwave1_sum + security1_sum + shed1_sum + sprinkler1_sum + pump1_sum + icemaker1_sum + freezer1_sum + refrigerator2_sum + winecooler1_sum + car1_sum), 0) AS miscellaneous_plug_loads\nFROM Source15_2\nGROUP BY month, hour;\n\nUPDATE Target15\nSET Total = HVAC + domestic_water_heating + major_appliances + lighting + miscellaneous_plug_loads;",
        "Prompt-3 Results": "Fail: insertion length mismatch",
        "Prompt-2 Results": "Fail",
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target15",
        "Target Data Schema": "month hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "month and hour have integer values. Other attributes have float values.",
        "Source Data Name": "Source15_3",
        "Source Data Schema": "\"site\",\"timestamp\",\"TOTAL BLDG WHS [emon ch1,2]\",\"AC COMPRESSOR WHS [emon ch3,4]\",\"AIR HANDLER WHS [emon ch5,6]\",\"WATER HEATER WHS [emon ch7,8]\",\u201dDRYER WHS (1-CT) [emon ch9]\u201d,\u201dRANGE WHS (1-CT) [emon ch10]\u201d,\u201dDISH WASHER WHS [emon ch11]\u201d,\u201dPrimary Fridge WHS [emon ch12]\u201d,\u201d2nd Fridge WHS [emon ch13]\u201d,\u201dSPARE1 WHS (1-CT) [emon ch14]\u201d,\u201dSPARE2 WHS (1-CT) [xpod chA-1]\u201d,\u201dSPARE3 WHS (1-CT) [xpod chA-2]\u201d,\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\",\"SPARE4 WHS (2-CTs) [xpod chA-5,6]\",\"Minisplit WHS (2-CTs) [xpod chA-7,8]\",\"Dryer WHS (2-CTs) [xpod chA-9,10]\",\u201dCalculated Unmeasured loads (Whr)\u201d,\u201dCalculated Energy Use (Whr)\u201d,\"Future use- WHS (2-CTs)[xpod chB-3,4]\",\"Future use- WHS (2-CTs)[xpod chB-5,6]\",\u201deMonitor Temp (deg. F)\u201d,\u201dWattsup Cumulative Ent.Ctr (WHS)\u201d,\u201dWattsup Energy Ent.Ctr (WHS)\u201d,\u201dWattsup Cumulative Washer (WHS)\u201d,\u201dWattsup Energy Washer (WHS)\u201d,\u201dLaCrosse Device Temp (deg. F)\u201d,\u201dPointSix Temp (deg. F)\u201d,\u201dPointSix Humidity (%)\u201d,\u201dHOBO LOGGER TEMP (deg. F)\u201d,\u201dHOBO LOGGER RH (%)\u201d\n",
        "Source Data Description": "\"timestamp\" consists of date and time.  Most of the attributes are of the float type, except \"site\" and \"timestamp\".",
        "Schema Change Hints": "Please follow two steps. \nThe first step, map \"timestamp\" to month and hour by extracting the month and hour information.\nMap several columns need to be summed up to map to a target attribute: \nHVAC should map to the sum of \u2018AC COMPRESSOR WHS [emon ch3,4]\u2019, \u2018AIR HANDLER WHS [emon ch5,6]\u2019, and \u2018Minisplit WHS (2-CTs) [xpod chA-7,8]\u2019\ndomestic_water_heating should map to \u2018WATER HEATER WHS [emon ch7,8]\u2019. \nmajor_appliances should be mapped to the sum of \u2018Primary Fridge WHS [emon ch12]\u2019, \u2018DRYER WHS (1-CT) [emon ch9]\u2019, \u2018Dryer WHS (2-CTs) [xpod chA-9,10]\u2019, \u2018DISH WASHER WHS [emon ch11]\u2019, \u2018RANGE WHS (1-CT) [emon ch10]\u2019, and \u2018POOL PUMP WHS (2-CTs) [xpod chA-3,4]\u2019.\nlighting is not in the first table, just map lighting to 0.0.\nmiscellaneous_plug_loads should map to the sum of \u2018Wattsup Energy Ent.Ctr (WHS)\u2019 and \u20182nd Fridge WHS [emon ch13]\u2019.\nTotal should map to \u2018TOTAL BLDG WHS [emon ch1,2]\u2019.\n\nThe second step, group rows of the result above by month and hour, and aggregate them by summation.",
        "5 Samples of Source Data": "36        \"8/22/12 16:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 17:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 18:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 19:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 20:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target15_Valid;\nCREATE TABLE Target15_Valid (\n    \"month\" INTEGER,\n    \"hour\" INTEGER,\n    \"HVAC\" FLOAT,\n    \"domestic_water_heating\" FLOAT,\n    \"major_appliances\" FLOAT,\n    \"lighting\" FLOAT,\n    \"miscellaneous_plug_loads\" FLOAT,\n    \"Total\" FLOAT\n);\n\n\nINSERT INTO Target15_Valid (\"month\", \"hour\", \"HVAC\", \"domestic_water_heating\", \"major_appliances\", \"lighting\", \"miscellaneous_plug_loads\", \"Total\")\nSELECT\n    EXTRACT(MONTH FROM \"timestamp\") AS \"month\",\n    EXTRACT(HOUR FROM \"timestamp\") AS \"hour\",\n    SUM(\"AC COMPRESSOR WHS [emon ch3,4]\" + \"AIR HANDLER WHS [emon ch5,6]\" + \"Minisplit WHS (2-CTs) [xpod chA-7,8]\") AS \"HVAC\",\n    SUM(\"WATER HEATER WHS [emon ch7,8]\") AS \"domestic_water_heating\",\n    SUM(\"Primary Fridge WHS [emon ch12]\" + \"DRYER WHS (1-CT) [emon ch9]\" + \"Dryer WHS (2-CTs) [xpod chA-9,10]\" + \"DISH WASHER WHS [emon ch11]\" + \"RANGE WHS (1-CT) [emon ch10]\" + \"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\") AS \"major_appliances\",\n    0.0 AS \"lighting\",\n    SUM(\"Wattsup Energy Ent.Ctr (WHS)\" + \"2nd Fridge WHS [emon ch13]\") AS \"miscellaneous_plug_loads\",\n    SUM(\"TOTAL BLDG WHS [emon ch1,2]\") AS \"Total\"\nFROM Souce15_3\nGROUP BY month, hour;\n\n\nSELECT * FROM Target15;",
        "Prompt-3 Results": 0.25,
        "Prompt-2 Results": 0.125,
        "Prompt-1 Results": "Fail: Insertion more than possible",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target15",
        "Target Data Schema": "month hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "month and hour have integer values. Other attributes have float values.",
        "Source Data Name": "Source15_4",
        "Source Data Schema": "\"End Use Category\",\"End Use\",\"Time Period\",\"Day Type\",\"Hour Ending\",\"Number of Homes in Bin With This End Use Metered\",\"Average Demand Per Home With This End Use [kW]\"",
        "Source Data Description": "\"End Use Category\" are high-level categories. \"End Use\" provides more detailed end use information, which should be used during schema transformation. \"Time Period\" contains months such as January, February, and so on. \"Hour Ending\" specifies the hour as an integer between 1 and 24. \"End Use\" values include \u2018HVAC\u2019, \u2018Water Heater - Electric\u2019, \u2018Water Heater - Heat Pump\u2019, \u2018Primary Refrigerator\u2019, \u2018Clothes Washer\u2019, \u2018Clothes Dryer - Electric\u2019, \u2018Dishwasher\u2019, \u2018Pool Pump\u2019, \u2018Lighting\u2019, \u2018Primary TV and Peripherals\u2019, \u2018Primary Desktop Computer\u2019, \u2018Dehumidifier\u2019, \u2018Other Pump\u2019, \u2018Misc Metered\u2019, \u2018Remaining Load\u2019, \u2018Secondary Refrigerator\u2019, and \u2018Freezer\u2019. ",
        "Schema Change Hints": "Please follow three steps. \nThe first step, multiply \u201cNumber of Homes in Bin With This End Use Metered\u201d and \u201cAverage Demand Per Home With This End Use [kW]\u201d to a new column named \u201cusage_sum\u201d. If any of \u201cNumber of Homes in Bin With This End Use Metered\u201d and \u201cAverage Demand Per Home With This End Use [kW]\u201d is empty or NULL, then just set \u201cusage_sum\u201d to 0.0.\n\nThe second step, map \"Time Period\" to month if \u201cTime Period\u201d is a month, otherwise discard the row. Map \u201cHour Ending\u201d to hour.\nMap values in \u201cEnd Use Category\u201d and \u201cEnd Use\u201d to a target attribute, and aggregate them by summation: \nHVAC should map to \u2018HVAC\u2019 in \u201cEnd Use Category\u201d.\ndomestic_water_heating should map to the sum of \u2018Water Heater - Electric\u2019 and \u2018Water Heater - Heat Pump\u2019 in \u201cEnd Use\u201d. \nmajor_appliances should be mapped to the sum of \u2018Primary Refrigerator\u2019, \u2018Clothes Washer\u2019, \u2018Clothes Dryer - Electric\u2019, \u2018Dishwasher\u2019, and \u2018Pool Pump\u2019 in \u201cEnd Use\u201d.\nlighting should map to \u2018Lighting\u2019 in \u201cEnd Use\u201d.\nmiscellaneous_plug_loads should map to the sum of \u2018Primary TV and Peripherals\u2019, \u2018Primary Desktop Computer\u2019, \u2018Dehumidifier\u2019, \u2018Other Pump\u2019, \u2018Misc Metered\u2019, \u2018Remaining Load\u2019, \u2018Secondary Refrigerator\u2019, and \u2018Freezer\u2019 in \u201cEnd Use\u201d.\nTotal is not in the source table so just map it to 0.0.\n\nThe third step, group rows by month and hour, and aggregate them by summation.",
        "5 Samples of Source Data": "\"HVAC\"        \"Furnace Fan\"        January        Weekday        1        80        0.13\n\"HVAC\"        \"Furnace Fan\"        January        Weekday        2        80        0.14\n\"HVAC\"        \"Furnace Fan'        January        Weekday        3        80        0.15\n\"Water Heating\"        \"Water Heater - Heat Pump\"        December        Weekend        1        5        0.11\n\"Water Heating\"        \"Water Heater - Heat Pump\"        December        Weekend        2        5        0.052",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target15_Valid;\n\nCREATE TABLE Target15_Valid (\n    month INTEGER,\n    hour INTEGER,\n    HVAC NUMERIC,\n    domestic_water_heating NUMERIC,\n    major_appliances NUMERIC,\n    lighting NUMERIC,\n    miscellaneous_plug_loads NUMERIC,\n    Total NUMERIC\n);\n\nINSERT INTO Target15_Valid (month, hour, HVAC, domestic_water_heating, major_appliances, lighting, miscellaneous_plug_loads, Total)\nSELECT\n    CASE\n        WHEN \"Time Period\" = 'January' THEN 1\n        WHEN \"Time Period\" = 'February' THEN 2\n        WHEN \"Time Period\" = 'March' THEN 3\n        WHEN \"Time Period\" = 'April' THEN 4\n        WHEN \"Time Period\" = 'May' THEN 5\n        WHEN \"Time Period\" = 'June' THEN 6\n        WHEN \"Time Period\" = 'July' THEN 7\n        WHEN \"Time Period\" = 'August' THEN 8\n        WHEN \"Time Period\" = 'September' THEN 9\n        WHEN \"Time Period\" = 'October' THEN 10\n        WHEN \"Time Period\" = 'November' THEN 11\n        WHEN \"Time Period\" = 'December' THEN 12\n        ELSE NULL\n    END AS month,\n    \"Hour Ending\" AS hour,\n    COALESCE(SUM(CASE WHEN \"End Use Category\" = 'HVAC' THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS HVAC,\n    COALESCE(SUM(CASE WHEN \"End Use\" IN ('Water Heater - Electric', 'Water Heater - Heat Pump') THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS domestic_water_heating,\n    COALESCE(SUM(CASE WHEN \"End Use\" IN ('Primary Refrigerator', 'Clothes Washer', 'Clothes Dryer - Electric', 'Dishwasher', 'Pool Pump') THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS major_appliances,\n    COALESCE(SUM(CASE WHEN \"End Use\" = 'Lighting' THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS lighting,\n    COALESCE(SUM(CASE WHEN \"End Use\" IN ('Primary TV and Peripherals', 'Primary Desktop Computer', 'Dehumidifier', 'Other Pump', 'Misc Metered', 'Remaining Load', 'Secondary Refrigerator', 'Freezer') THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS miscellaneous_plug_loads,\n    COALESCE(SUM(\"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\"), 0) AS Total\nFROM Source15_4\nWHERE \"Time Period\" IN ('January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December')\nGROUP BY month, hour;",
        "Prompt-3 Results": "Fail, groupby without aggregation.",
        "Prompt-2 Results": 0.5,
        "Prompt-1 Results": "Fail: Insertion error",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target16",
        "Target Data Schema": "season hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "\"season\" value is one of (Spring, Summer, Fall, Winter). \"hour\" has  integer values. Other attributes have float values.",
        "Source Data Name": "Source16_1",
        "Source Data Schema": "eiaid, time, raw_count, scaled_unit_count, net_site_electricity_kwh, electricity_heating_kwh, electricity_central_system_heating_kwh, electricity_cooling_kwh electricity_central_system_cooling_kwh electricity_interior_lighting_kwh ,  electricity_exterior_lighting_kwh, electricity_fans_heating_kwh, electricity_fans_cooling_kwh, electricity_pumps_heating_kwh, electricity_central_system_pumps_heating_kwh, electricity_pumps_cooling_kwh, electricity_central_system_pumps_cooling_kwh, electricity_water_systems_kwh, electricity_refrigerator_kwh, electricity_clothes_washer_kwh, electricity_clothes_dryer_kwh, electricity_cooking_range_kwh, electricity_dishwasher_kwh, electricity_plug_loads_kwh, electricity_house_fan_kwh, electricity_range_fan_kwh, electricity_bath_fan_kwh, electricity_ceiling_fan_kwh, electricity_pool_heater_kwh, electricity_pool_pump_kwh, electricity_hot_tub_heater_kwh, electricity_hot_tub_pump_kwh",
        "Source Data Description": "\"eiaid\" is an ID. \"time\" consists of date and hour. Many columns are for different electricity loads.",
        "Schema Change Hints": "Please follow two steps. \nThe first step, map \"time\" to season and hour by extracting the month and hour information and converting month to season.\nMap several columns need to be summed up to map to a target attribute: \nHVAC should map to the sum of 'electricity_heating_kwh', 'electricity_central_system_heating_kwh', 'electricity_cooling_kwh', 'Electricity_central_system_cooling_kwh', 'electricity_fans_heating_kwh', 'electricity_fans_cooling_kwh', 'electricity_pumps_heating_kwh', 'electricity_central_system_pumps_heating_kwh', 'electricity_pumps_cooling_kwh', 'Electricity_central_system_pumps_cooling_kwh', 'electricity_house_fan_kwh', 'electricity_range_fan_kwh', 'electricity_bath_fan_kwh'.\ndomestic_water_heating should map to 'electricity_water_systems_kwh'. \nmajor_appliances should be mapped to the sum of 'electricity_refrigerator_kwh', 'electricity_clothes_washer_kwh', 'electricity_clothes_dryer_kwh', 'electricity_dishwasher_kwh', 'electricity_cooking_range_kwh', 'electricity_pool_pump_kwh', 'electricity_hot_tub_pump_kwh', 'electricity_pool_heater_kwh', 'electricity_hot_tub_heater_kwh'. \nlighting should map to the sum of 'electricity_interior_lighting_kwh', and 'electricity_exterior_lighting_kwh'. \nmiscellaneous_plug_loads should map to 'electricity_plug_loads_kwh'.\nTotal should be mapped to 'net_site_electricity_kwh'.\n\nThe second step, group the rows by season and hour with summation as the aggregation function. ",
        "5 Samples of Source Data": "4110        \u201c1/1/12 0:15\u201d        541079        2991885.1        725805.7599        170365.3215        12237.88533        10173.73547        34.21563194        39205.13808        7653.40551        96214.55964        1873.76192        19.49044138        356.2631311        0        36.81847325        1745.742562        40159.03534        1058.877211        25403.5408        4560.913747        2750.422583        246207.2847        0        169.5248655        1366.53176        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 0:30\u201d        541079        2991885.1        722554.2831        160103.2925        10935.92883        9711.168898        37.86693016        39205.13808        7653.40551        91366.3144        1797.149517        17.30827445        289.4441454        0        39.9232761        9110.146486        40159.03534        2015.263437        30236.85493        4560.913747        3368.781329        246207.2847        0        178.0227522        1347.748753        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 0:45\u201d        541079        2991885.1        716130.2572        149229.6223        10279.38991        9061.367217        36.14018945        39205.13808        7653.40551        85162.82118        1780.246698        16.01782697        268.8654444        0        43.81686068        10928.70128        40159.03534        1012.157917        42020.76348        4560.913747        2765.506754        246207.2847        0        178.0227522        1347.748753        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 1:00\u201d        541079        2991885.1        671242.2494        139390.4937        9711.063783        8148.226778        34.61219386        39205.13808        7653.40551        79591.76375        1713.909978        14.95129313        251.1661129        0        44.0454923        12663.48761        40159.03534        1784.424788        13567.96229        4560.913747        801.3015034        246207.2847        0        178.0227522        1347.748753        14712.44114        51.2034934        939.1945122        2188.961101        2656.025943\n4110        \u201c1/1/12 1:15\u201d        541079        2991885.1        589531.7712        116364.942        8094.490046        7864.6224        40.77766032        23523.08285        4592.043306        67394.69316        1885.288338        12.82276972        219.448326        0        45.01302594        10212.27534        39155.05946        587.2272891        14589.76377        4560.913747        430.0967761        227741.7383        0        178.0227522        1347.748753        13609.00806        51.2034934        939.1945122        2644.994663        3209.364682\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target16_Valid;\nCREATE TABLE Target16_Valid (\n    season VARCHAR(10),\n    hour INT,\n    HVAC FLOAT,\n    domestic_water_heating FLOAT,\n    major_appliances FLOAT,\n    lighting FLOAT,\n    miscellaneous_plug_loads FLOAT,\n    Total FLOAT\n);\n\nINSERT INTO Target16_Valid (season, hour, HVAC, domestic_water_heating, major_appliances, lighting, miscellaneous_plug_loads, Total)\nSELECT\n    CASE\n        WHEN EXTRACT(MONTH FROM time) IN (12, 1, 2) THEN 'Winter' \n        WHEN EXTRACT(MONTH FROM time) IN (3, 4, 5) THEN 'Spring' \n        WHEN EXTRACT(MONTH FROM time) IN (6, 7, 8) THEN 'Summer' \n         WHEN EXTRACT(MONTH FROM time) IN (9, 10, 11) THEN 'Fall' \n         ELSE NULL\n    END AS season,\n    EXTRACT(HOUR FROM time) AS hour,\n    SUM(electricity_heating_kwh + electricity_central_system_heating_kwh +\n        electricity_cooling_kwh + electricity_central_system_cooling_kwh +\n        electricity_fans_heating_kwh + electricity_fans_cooling_kwh +\n        electricity_pumps_heating_kwh + electricity_central_system_pumps_heating_kwh +\n        electricity_pumps_cooling_kwh + electricity_central_system_pumps_cooling_kwh +\n        electricity_house_fan_kwh + electricity_range_fan_kwh + electricity_bath_fan_kwh) AS HVAC,\n    SUM(electricity_water_systems_kwh) AS domestic_water_heating,\n    SUM(electricity_refrigerator_kwh + electricity_clothes_washer_kwh +\n        electricity_clothes_dryer_kwh + electricity_dishwasher_kwh +\n        electricity_cooking_range_kwh + electricity_pool_pump_kwh +\n        electricity_hot_tub_pump_kwh + electricity_pool_heater_kwh +\n        electricity_hot_tub_heater_kwh) AS major_appliances,\n    SUM(electricity_interior_lighting_kwh + electricity_exterior_lighting_kwh) AS lighting,\n    SUM(electricity_plug_loads_kwh) AS miscellaneous_plug_loads,\n    SUM(net_site_electricity_kwh) AS Total\nFROM Source16_1\nGROUP BY season, hour;",
        "Prompt-3 Results": "Fail, groupby without aggregation.",
        "Prompt-2 Results": 0,
        "Prompt-1 Results": "Fail: insertion error",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target16",
        "Target Data Schema": "season hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "\"season\" value is one of (Spring, Summer, Fall, Winter). \"hour\" has  integer values. Other attributes have float values.",
        "Source Data Name": "Source16_2",
        "Source Data Schema": "local_15min        air1_sum        air1_count        air2_sum        air2_count        air3_sum        air3_count        airwindowunit1_sum        airwindowunit1_count        aquarium1_sum        aquarium1_count        bathroom1_sum        bathroom1_count        bathroom2_sum        bathroom2_count        bedroom1_sum        bedroom1_count        bedroom2_sum        bedroom2_count        bedroom3_sum        bedroom3_count        bedroom4_sum        bedroom4_count        bedroom5_sum        bedroom5_count        battery1_sum        battery1_count        car1_sum        car1_count        car2_sum        car2_count        circpump1_sum        circpump1_count        clotheswasher1_sum        clotheswasher1_count        clotheswasher_dryg1_sum        clotheswasher_dryg1_count        diningroom1_sum        diningroom1_count        diningroom2_sum        diningroom2_count        dishwasher1_sum        dishwasher1_count        disposal1_sum        disposal1_count        drye1_sum        drye1_count        dryg1_sum        dryg1_count        freezer1_sum        freezer1_count        furnace1_sum        furnace1_count        furnace2_sum        furnace2_count        garage1_sum        garage1_count        garage2_sum        garage2_count        grid_sum        grid_count        heater1_sum        heater1_count        heater2_sum        heater2_count        heater3_sum        heater3_count        housefan1_sum        housefan1_count        icemaker1_sum        icemaker1_count        jacuzzi1_sum        jacuzzi1_count        kitchen1_sum        kitchen1_count        kitchen2_sum        kitchen2_count        kitchenapp1_sum        kitchenapp1_count        kitchenapp2_sum        kitchenapp2_count        lights_plugs1_sum        lights_plugs1_count        lights_plugs2_sum        lights_plugs2_count        lights_plugs3_sum        lights_plugs3_count        lights_plugs4_sum        lights_plugs4_count        lights_plugs5_sum        lights_plugs5_count        lights_plugs6_sum        lights_plugs6_count        livingroom1_sum        livingroom1_count        livingroom2_sum        livingroom2_count        microwave1_sum        microwave1_count        office1_sum        office1_count        outsidelights_plugs1_sum        outsidelights_plugs1_count        outsidelights_plugs2_sum        outsidelights_plugs2_count        oven1_sum        oven1_count        oven2_sum        oven2_count        pool1_sum        pool1_count        pool2_sum        pool2_count        poollight1_sum        poollight1_count        poolpump1_sum        poolpump1_count        pump1_sum        pump1_count        range1_sum        range1_count        refrigerator1_sum        refrigerator1_count        refrigerator2_sum        refrigerator2_count        security1_sum        security1_count        sewerpump1_sum        sewerpump1_count        shed1_sum        shed1_count        solar_sum        solar_count        solar2_sum        solar2_count        sprinkler1_sum        sprinkler1_count        sumppump1_sum        sumppump1_count        utilityroom1_sum        utilityroom1_count        venthood1_sum        venthood1_count        waterheater1_sum        waterheater1_count        waterheater2_sum        waterheater2_count        wellpump1_sum        wellpump1_count        winecooler1_sum        winecooler1_count",
        "Source Data Description": "\"local_15min\" is the time information. Many columns are for different electricity loads. ",
        "Schema Change Hints": "Please follow three steps. \nThe first step, map \"local_15min\" to season and hour by extracting the month and hour information and converting month to season.\nMap several columns need to be summed up to map to a target attribute: \nHVAC should map to the sum of \u2018airwindowunit1_sum\u2019, \u2018furnace1_sum\u2019, \u2018furnace2_sum\u2019, \u2018housefan1_sum\u2019, and \u2018venthood1_sum\u2019.\ndomestic_water_heating should map to the sum of \u2018waterheater1_sum\u2019, \u2018waterheater2_sum\u2019. \nmajor_appliances should be mapped to the sum of \u2018refrigerator1_sum\u2019, \u2018clotheswasher1_sum\u2019, \u2018drye1_sum\u2019, \u2018dishwasher1_sum\u2019, \u2018oven1_sum\u2019, \u2018oven2_sum\u2019, \u2018range1_sum\u2019, and \u2018poolpump1_sum\u2019.\nlighting should map to the sum of \u2018lights_plugs1_sum\u2019, \u2018lights_plugs2_sum\u2019, \u2018lights_plugs3_sum\u2019, \u2018lights_plugs4_sum\u2019, \u2018lights_plugs5_sum\u2019, \u2018lights_plugs6_sum\u2019, \u2018outsidelights_plugs1_sum\u2019, \u2018outsidelights_plugs2_sum\u2019, and \u2018poollight1_sum\u2019. \nmiscellaneous_plug_loads should map to the sum of \u2018aquarium1_sum\u2019, \u2018disposal1_sum\u2019, \u2018kitchenapp1_sum\u2019, \u2018kitchenapp2_sum\u2019, \u2018microwave1_sum\u2019, \u2018security1_sum\u2019, \u2018shed1_sum\u2019, \u2018sprinkler1_sum\u2019, \u2018pump1_sum\u2019, \u2018icemaker1_sum\u2019, \u2018freezer1_sum\u2019, \u2018refrigerator2_sum\u2019, \u2018winecooler1_sum\u2019, and \u2018car1_sum\u2019.\n\nThe second step, group rows by season and hour, and aggregate them by summation.\n\nThe third step, update Total in the target table to the sum of HVAC, domestic_water_heating, major_appliances, lighting, and miscellaneous_plug_loads.",
        "5 Samples of Source Data": "\u201c4/4/16 18:00\u201d,102.057,388,23.613,77,2.063,9,0.022,4,0.236,1,1.616,95,0.068,11,3.101,83,1.988,34,0.165,6,0.015,1,0.035,1,,0,60.037,82,,0,,0,2.038,237,0.217,30,0.293,22,,0,4.092,265,0.103,134,25.281,238,0.561,58,0.746,14,27.349,301,4.262,57,1.528,42,0.05,4,549.192,423,0.512,8,,0,,0,0,3,0.518,6,0.646,35,2.332,46,0.883,13,4.363,189,2.782,142,6.146,115,3.343,57,2.459,27,0.369,10,0.036,5,0.021,1,7.551,82,0.87,9,4.023,206,4.434,44,0.814,27,0.571,5,15.85,163,0.027,5,0.208,2,,0,0,3,7.832,28,0.018,5,3.371,87,26.764,280,2.877,29,0.29,16,,0,0.335,3,130.861,282,,0,0.035,11,,0,1.006,6,0.801,34,14.053,40,0.008,3,,0,0.286,6\n\u201c4/4/16 18:15\u201d,108.213,388,14.166,77,1.631,9,0.022,4,0.16,1,1.625,95,0.043,11,3.487,83,2.072,34,0.162,6,0.014,1,0.038,1,,0,60.251,82,,0,,0,1.478,237,0.024,30,0.279,22,,0,7.852,265,0.096,134,31.687,238,0.539,58,1.286,14,28.887,301,4.052,57,1.268,42,0.05,4,612.065,423,0.242,8,,0,,0,0,3,0.681,6,4.698,35,2.259,46,0.974,13,3.953,189,3.836,142,7.853,115,3.5,57,2.727,27,0.343,10,0.019,5,0.021,1,8.018,82,0.87,9,6.386,206,4.599,44,0.988,27,0.582,5,12.451,163,0.018,5,0.146,2,,0,0,3,8.298,28,0.014,5,2.035,87,28.036,280,2.385,29,0.29,16,,0,0.201,3,77.407,282,,0,0.033,11,,0,1.171,6,0.785,34,9.527,40,0.006,3,,0,0.327,6\n\u201c4/4/16 18:30\u201d,94.715,388,14.413,77,1.861,9,0.023,4,0.1,1,1.824,95,0.429,11,3.412,83,1.862,34,0.162,6,0.014,1,0.038,1,,0,51.344,82,,0,,0,1.127,237,0.363,30,0.258,22,,0,6.351,265,0.105,134,22.112,238,0.349,58,1.09,14,26.926,301,3.629,57,1.089,42,0.05,4,623.753,423,0.484,8,,0,,0,0,3,0.59,6,4.346,35,2.858,46,0.754,13,4.298,189,1.725,142,10.798,115,3.517,57,2.588,27,0.359,10,0.249,5,0.021,1,8.74,82,0.909,9,3.016,206,4.779,44,1.01,27,0.685,5,12.096,163,0.026,5,0.147,2,,0,0,3,5.972,28,0.018,5,2.234,87,27.121,280,2.534,29,0.289,16,,0,0.005,3,29.184,282,,0,0.054,11,,0,1.109,6,0.679,34,9.595,40,3.512,3,,0,0.406,6\n\u201c4/4/16 18:45\u201d,86.045,388,17.683,77,1.141,9,0.023,4,0.075,1,1.728,95,0.725,11,3.726,83,2.03,34,0.162,6,0.014,1,0.038,1,,0,53.045,82,,0,,0,0.901,237,0.599,30,0.259,22,,0,5.084,265,0.077,134,18.873,238,0.116,58,0.756,14,26.447,301,3.85,57,1.183,42,0.134,4,630.259,423,0.224,8,,0,,0,3,0.012     0.7,6,1.051,35,2.522,46,0.783,13,2.641,189,2.204,142,10.309,115,3.935,57,2.833,27,0.408,10,0.428,5,0.021,1,9.5,82,0.866,9,4.007,206,4.86,44,1.37,27,0.804,5,14.378,163,0.027,5,0.148,2,,0,0,3,5.593,28,0.014,5,1.167,87,26.232,280,2.656,29,0.292,16,,0,0.014,3,12.177,282,,0,0.029,11,,0,0.991,6,0.338,34,15.571,40,1.241,3,,0,0.301,,6\n\u201c4/4/16 19:00\u201d,91.676,388,14.401,77,1.319,9,0.022,4,0.117,1,1.9,96,0.628,11,4.274,83,2.042,34,0.178,6,0.014,1,0.037,1,,0,61.889,82,,0,,0,0.782,238,0.583,30,0.262,22,,0,5.271,266,0.083,135,19.732,238,0.327,58,0.713,14,26.16,302,3.429,57,1.69,43,0.177,4,658.31,423,0.46,8,,0,,0,0,3,0.673,6,1.014,35,2.535,46,0.667,13,2.913,190,1.48,143,11.611,116,4.263,57,2.987,27,0.358,10,0.442,5,0.021,1,10.45,82,0.867,9,2.973,207,4.895,45,1.204,27,0.844,5,8.554,163,0.029,5,0.147,2,,0,0,3,5.381,28,0.018,5,3.787,87,27.235,281,2.131,29,0.291,16,,0,0.009,3,8.327,282,,0,0.061,11,,0,1.08,6,0.376,34,14.635,40,0.004,3,,0,0.338,6",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target16;\nCREATE TABLE Target16 (\n    season VARCHAR(10),\n    hour int,\n    HVAC float,\n    domestic_water_heating float,\n    major_appliances float,\n    lighting float,\n    miscellaneous_plug_loads float,\n    Total float\n);\n\n-- Step 4: Insert data into the \"Target16\" table by aggregating data from \"Source16_2\".\nINSERT INTO Target16 (season, hour, HVAC, domestic_water_heating, major_appliances, lighting, miscellaneous_plug_loads, Total)\nSELECT\n    CASE\n        WHEN EXTRACT(MONTH FROM local_15min) IN (12, 1, 2) THEN 'Winter'  -- Winter\n        WHEN EXTRACT(MONTH FROM local_15min) IN (3, 4, 5) THEN 'Spring'  -- Spring\n        WHEN EXTRACT(MONTH FROM local_15min) IN (6, 7, 8) THEN 'Summer'   -- Summer\n        WHEN EXTRACT(MONTH FROM local_15min) IN (9, 10, 11) THEN 'Fall' -- Fall\n        ELSE NULL\n    END AS season,\n    EXTRACT(HOUR FROM local_15min) AS hour,\n    COALESCE(SUM(airwindowunit1_sum + furnace1_sum + furnace2_sum + housefan1_sum + venthood1_sum),0) AS HVAC,\n    COALESCE(SUM(waterheater1_sum + waterheater2_sum), 0) AS domestic_water_heating,\n    COALESCE(SUM(refrigerator1_sum + clotheswasher1_sum + drye1_sum + dishwasher1_sum + oven1_sum + oven2_sum + range1_sum + poolpump1_sum), 0) AS major_appliances,\n    COALESCE(SUM(lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum + lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum + outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum), 0) AS lighting,\n    COALESCE(SUM(aquarium1_sum + disposal1_sum + kitchenapp1_sum + kitchenapp2_sum + microwave1_sum + security1_sum + shed1_sum + sprinkler1_sum + pump1_sum + icemaker1_sum + freezer1_sum + refrigerator2_sum + winecooler1_sum + car1_sum), 0) AS miscellaneous_plug_loads,\n    0 AS Total\nFROM Source16_2\nGROUP BY season, hour;\n\nUPDATE Target16\nSET Total = HVAC + domestic_water_heating + major_appliances + lighting + miscellaneous_plug_loads;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": "Fail: Transformation type mismatch",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target16",
        "Target Data Schema": "season hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "\"season\" value is one of (Spring, Summer, Fall, Winter). \"hour\" has  integer values. Other attributes have float values.",
        "Source Data Name": "Source16_3",
        "Source Data Schema": "\"site\",\"timestamp\",\"TOTAL BLDG WHS [emon ch1,2]\",\"AC COMPRESSOR WHS [emon ch3,4]\",\"AIR HANDLER WHS [emon ch5,6]\",\"WATER HEATER WHS [emon ch7,8]\",\u201dDRYER WHS (1-CT) [emon ch9]\u201d,\u201dRANGE WHS (1-CT) [emon ch10]\u201d,\u201dDISH WASHER WHS [emon ch11]\u201d,\u201dPrimary Fridge WHS [emon ch12]\u201d,\u201d2nd Fridge WHS [emon ch13]\u201d,\u201dSPARE1 WHS (1-CT) [emon ch14]\u201d,\u201dSPARE2 WHS (1-CT) [xpod chA-1]\u201d,\u201dSPARE3 WHS (1-CT) [xpod chA-2]\u201d,\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\",\"SPARE4 WHS (2-CTs) [xpod chA-5,6]\",\"Minisplit WHS (2-CTs) [xpod chA-7,8]\",\"Dryer WHS (2-CTs) [xpod chA-9,10]\",\u201dCalculated Unmeasured loads (Whr)\u201d,\u201dCalculated Energy Use (Whr)\u201d,\"Future use- WHS (2-CTs)[xpod chB-3,4]\",\"Future use- WHS (2-CTs)[xpod chB-5,6]\",\u201deMonitor Temp (deg. F)\u201d,\u201dWattsup Cumulative Ent.Ctr (WHS)\u201d,\u201dWattsup Energy Ent.Ctr (WHS)\u201d,\u201dWattsup Cumulative Washer (WHS)\u201d,\u201dWattsup Energy Washer (WHS)\u201d,\u201dLaCrosse Device Temp (deg. F)\u201d,\u201dPointSix Temp (deg. F)\u201d,\u201dPointSix Humidity (%)\u201d,\u201dHOBO LOGGER TEMP (deg. F)\u201d,\u201dHOBO LOGGER RH (%)\u201d\n",
        "Source Data Description": "\"timestamp\" consists of date and time.  Most of the attributes are of the float type, except \"site\" and \"timestamp\".",
        "Schema Change Hints": "Please follow two steps. \nThe first step, map \"timestamp\" to season and hour by extracting the month and hour information,  and converting month to season.\nMap several columns need to be summed up to map to a target attribute: \nHVAC should map to the sum of \u2018AC COMPRESSOR WHS [emon ch3,4]\u2019, \u2018AIR HANDLER WHS [emon ch5,6]\u2019, and \u2018Minisplit WHS (2-CTs) [xpod chA-7,8]\u2019\ndomestic_water_heating should map to \u2018WATER HEATER WHS [emon ch7,8]\u2019. \nmajor_appliances should be mapped to the sum of \u2018Primary Fridge WHS [emon ch12]\u2019, \u2018DRYER WHS (1-CT) [emon ch9]\u2019, \u2018Dryer WHS (2-CTs) [xpod chA-9,10]\u2019, \u2018DISH WASHER WHS [emon ch11]\u2019, \u2018RANGE WHS (1-CT) [emon ch10]\u2019, and \u2018POOL PUMP WHS (2-CTs) [xpod chA-3,4]\u2019.\nlighting is not in the first table, just map lighting to 0.0.\nmiscellaneous_plug_loads should map to the sum of \u2018Wattsup Energy Ent.Ctr (WHS)\u2019 and \u20182nd Fridge WHS [emon ch13]\u2019.\nTotal should map to \u2018TOTAL BLDG WHS [emon ch1,2]\u2019.\n\nThe second step, group rows by season and hour, and aggregate them by summation.",
        "5 Samples of Source Data": "36        \"8/22/12 16:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 17:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 18:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 19:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        \"8/22/12 20:00\"        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target16_Valid;\nCREATE TABLE Target16_Valid (\n    \"season\" VARCHAR(10),\n    \"hour\" INTEGER,\n    \"HVAC\" FLOAT,\n    \"domestic_water_heating\" FLOAT,\n    \"major_appliances\" FLOAT,\n    \"lighting\" FLOAT,\n    \"miscellaneous_plug_loads\" FLOAT,\n    \"Total\" FLOAT\n);\n\n-- Step 4: Insert data into the second table 'Target16_Valid' by aggregating values from the first table 'Souce16_3'\nINSERT INTO Target16_Valid (\"season\", \"hour\", \"HVAC\", \"domestic_water_heating\", \"major_appliances\", \"lighting\", \"miscellaneous_plug_loads\", \"Total\")\nSELECT\n    CASE\n        WHEN EXTRACT(MONTH FROM \"timestamp\") IN (12, 1, 2) THEN 'Winter'  -- Winter\n        WHEN EXTRACT(MONTH FROM \"timestamp\") IN (3, 4, 5) THEN 'Spring'  -- Spring\n        WHEN EXTRACT(MONTH FROM \"timestamp\") IN (6, 7, 8) THEN 'Summer'   -- Summer\n        WHEN EXTRACT(MONTH FROM \"timestamp\") IN (9, 10, 11) THEN 'Fall' -- Fall\n        ELSE NULL\n    END AS \"season\",\n    EXTRACT(HOUR FROM \"timestamp\") AS \"hour\",\n    SUM(\"AC COMPRESSOR WHS [emon ch3,4]\" + \"AIR HANDLER WHS [emon ch5,6]\" + \"Minisplit WHS (2-CTs) [xpod chA-7,8]\") AS \"HVAC\",\n    SUM(\"WATER HEATER WHS [emon ch7,8]\") AS \"domestic_water_heating\",\n    SUM(\"Primary Fridge WHS [emon ch12]\" + \"DRYER WHS (1-CT) [emon ch9]\" + \"Dryer WHS (2-CTs) [xpod chA-9,10]\" + \"DISH WASHER WHS [emon ch11]\" + \"RANGE WHS (1-CT) [emon ch10]\" + \"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\") AS \"major_appliances\",\n    0.0 AS \"lighting\",\n    SUM(\"Wattsup Energy Ent.Ctr (WHS)\" + \"2nd Fridge WHS [emon ch13]\") AS \"miscellaneous_plug_loads\",\n    SUM(\"TOTAL BLDG WHS [emon ch1,2]\") AS \"Total\"\nFROM Souce16_3\nGROUP BY \"season\", \"hour\";",
        "Prompt-3 Results": 0.25,
        "Prompt-2 Results": 0.125,
        "Prompt-1 Results": "Fail: Insertion more than possible",
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target16",
        "Target Data Schema": "season hour HVAC domestic_water_heating major_appliances lighting miscellaneous_plug_loads Total",
        "Target Data Description": "\"season\" value is one of (Spring, Summer, Fall, Winter). \"hour\" has  integer values. Other attributes have float values.",
        "Source Data Name": "Source16_4",
        "Source Data Schema": "\"End Use Category\",\"End Use\",\"Time Period\",\"Day Type\",\"Hour Ending\",\"Number of Homes in Bin With This End Use Metered\",\"Average Demand Per Home With This End Use [kW]\"",
        "Source Data Description": "\"End Use Category\" are high-level categories. \"End Use\" provides more detailed end use information, which should be used during schema transformation. \"Time Period\" contains months such as January, February, and so on. \"Hour Ending\" specifies the hour as an integer between 1 and 24. \"End Use\" values include \u2018HVAC\u2019, \u2018Water Heater - Electric\u2019, \u2018Water Heater - Heat Pump\u2019, \u2018Primary Refrigerator\u2019, \u2018Clothes Washer\u2019, \u2018Clothes Dryer - Electric\u2019, \u2018Dishwasher\u2019, \u2018Pool Pump\u2019, \u2018Lighting\u2019, \u2018Primary TV and Peripherals\u2019, \u2018Primary Desktop Computer\u2019, \u2018Dehumidifier\u2019, \u2018Other Pump\u2019, \u2018Misc Metered\u2019, \u2018Remaining Load\u2019, \u2018Secondary Refrigerator\u2019, and \u2018Freezer\u2019. ",
        "Schema Change Hints": "Please follow three steps. \nThe first step, multiply \u201cNumber of Homes in Bin With This End Use Metered\u201d and \u201cAverage Demand Per Home With This End Use [kW]\u201d to a new column named \u201cusage_sum\u201d. If any of \u201cNumber of Homes in Bin With This End Use Metered\u201d and \u201cAverage Demand Per Home With This End Use [kW]\u201d is empty or NULL, then just set \u201cusage_sum\u201d to 0.0.\n\nThe second step, map \"Time Period\" to season by converting month to season; map \u201cHour Ending\u201d to hour.\nMap values in \u201cEnd Use Category\u201d and \u201cEnd Use\u201d to a target attribute, and aggregate them by summation : \nHVAC should map to \u2018HVAC\u2019 in \u201cEnd Use Category\u201d.\ndomestic_water_heating should map to the sum of \u2018Water Heater - Electric\u2019 and \u2018Water Heater - Heat Pump\u2019 in \u201cEnd Use\u201d. \nmajor_appliances should be mapped to the sum of \u2018Primary Refrigerator\u2019, \u2018Clothes Washer\u2019, \u2018Clothes Dryer - Electric\u2019, \u2018Dishwasher\u2019, and \u2018Pool Pump\u2019 in \u201cEnd Use\u201d.\nlighting should map to \u2018Lighting\u2019 in \u201cEnd Use\u201d.\nmiscellaneous_plug_loads should map to the sum of \u2018Primary TV and Peripherals\u2019, \u2018Primary Desktop Computer\u2019, \u2018Dehumidifier\u2019, \u2018Other Pump\u2019, \u2018Misc Metered\u2019, \u2018Remaining Load\u2019, \u2018Secondary Refrigerator\u2019, and \u2018Freezer\u2019 in \u201cEnd Use\u201d.\nTotal is not in the source table so just map it to 0.0.\n\nThe third step, group rows by season and hour, and aggregate them by summation.",
        "5 Samples of Source Data": "\"HVAC\"        \"Furnace Fan\"        January        Weekday        1        80        0.13\n\"HVAC\"        \"Furnace Fan\"        January        Weekday        2        80        0.14\n\"HVAC\"        \"Furnace Fan'        January        Weekday        3        80        0.15\n\"Water Heating\"        \"Water Heater - Heat Pump\"        December        Weekend        1        5        0.11\n\"Water Heating\"        \"Water Heater - Heat Pump\"        December        Weekend        2        5        0.052",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target16_Valid;\n\nCREATE TABLE Target16_Valid (\n    season VARCHAR(10),\n    hour INTEGER,\n    HVAC FLOAT,\n    domestic_water_heating FLOAT,\n    major_appliances FLOAT,\n    lighting FLOAT,\n    miscellaneous_plug_loads FLOAT,\n    Total FLOAT\n);\n\n-- Step 4: Insert data from Source16_4 into Target16_Valid\nINSERT INTO Target16_Valid (season, hour, HVAC, domestic_water_heating, major_appliances, lighting, miscellaneous_plug_loads, Total)\nSELECT\n    CASE\n        WHEN \"Time Period\" IN ('January', 'February', 'December') THEN 'Winter'  -- Winter\n        WHEN \"Time Period\" IN ('March', 'April', 'May') THEN 'Spring'            -- Spring\n        WHEN \"Time Period\" IN ('June', 'July', 'August') THEN 'Summer'           -- Summer\n        WHEN \"Time Period\" IN ('September', 'October', 'November') THEN 'Fall'  -- Fall\n        ELSE NULL\n    END AS season,\n    \"Hour Ending\" AS hour,\n    COALESCE(SUM(CASE WHEN \"End Use Category\" = 'HVAC' THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS HVAC,\n    COALESCE(SUM(CASE WHEN \"End Use\" IN ('Water Heater - Electric', 'Water Heater - Heat Pump') THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS domestic_water_heating,\n    COALESCE(SUM(CASE WHEN \"End Use\" IN ('Primary Refrigerator', 'Clothes Washer', 'Clothes Dryer - Electric', 'Dishwasher', 'Pool Pump') THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS major_appliances,\n    COALESCE(SUM(CASE WHEN \"End Use\" = 'Lighting' THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS lighting,\n    COALESCE(SUM(CASE WHEN \"End Use\" IN ('Primary TV and Peripherals', 'Primary Desktop Computer', 'Dehumidifier', 'Other Pump', 'Misc Metered', 'Remaining Load', 'Secondary Refrigerator', 'Freezer') THEN \"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\" ELSE 0 END), 0) AS miscellaneous_plug_loads,\n    COALESCE(SUM(\"Number of Homes in Bin With This End Use Metered\" * \"Average Demand Per Home With This End Use [kW]\"), 0) AS Total\nFROM Source16_4\nGROUP BY season, hour;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0,
        "Prompt-1 Results": 0,
        "Complexity": NaN,
        "Remark or Note": NaN
    }
]