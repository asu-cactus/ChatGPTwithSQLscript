[
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_1",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500 ",
        "Source Data Description": "DT_STRATA represents date. DOW is in the type of Text. PCT_HOURLY_0100 and so on are hourly load values for the strata. PCT_HOURLY_2500 should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/16        H        .001222017108240        .001274017836250        .001131015834222        .001222017108240        .001222017108240        .001261017654247        .001144016016224        .001170016380229        .001170016380229        .001209016926237        .001183016562232        .001235017290242        .001157016198227        .001001014014196        .001014014196199        .001144016016224        .001209016926237        .001547021658303        .001560021840306        .001534021476301        .001573022022308        .001573022022308        .001326018564260        .001170016380229        .000000000000000\n1/2/16        7        .001313018382257        .001248017472245        .001222017108240        .001196016744234        .001196016744234        .001287018018252        .001300018200255        .001339018746262        .001352018928265        .001404019656275        .001417019838278        .001326018564260        .001313018382257        .001352018928265        .001339018746262        .001391019474273        .001404019656275        .001495020930293        .001521021294298        .001508021112296        .001534021476301        .001534021476301        .001469020566288        .001339018746262        .000000000000000\n1/3/16        1        .001157016198227        .001092015288214        .001053014742206        .001040014560204        .001040014560204        .001066014924209        .001053014742206        .001144016016224        .001183016562232        .001248017472245        .001326018564260        .001404019656275        .001313018382257        .001300018200255        .001313018382257        .001261017654247        .001261017654247        .001430020020280        .001469020566288        .001404019656275        .001456020384285        .001378019292270        .001287018018252        .001222017108240        .000000000000000\n1/4/16        2        .001105015470217        .001053014742206        .001001014014196        .000975013650191        .001053014742206        .001079015106211        .001183016562232        .001170016380229        .001274017836250        .001170016380229        .001157016198227        .001196016744234        .001196016744234        .001144016016224        .001170016380229        .001261017654247        .001300018200255        .001495020930293        .001586022204311        .001651023114324        .001651023114324        .001521021294298        .001417019838278        .001274017836250        .000000000000000\n1/5/16        3        .001183016562232        .001170016380229        .001079015106211        .001131015834222        .001170016380229        .001183016562232        .001300018200255        .001365019110268        .001404019656275        .001378019292270        .001352018928265        .001326018564260        .001365019110268        .001339018746262        .001300018200255        .001313018382257        .001404019656275        .001638022932321        .001716024024336        .001677023478329        .001625022750319        .001638022932321        .001573022022308        .001417019838278        .000000000000000\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_1_Valid;  CREATE TABLE Target1_1_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_1_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(DT_STRATA, 'Dy') || ' ' || TO_CHAR(DT_STRATA, 'MM/DD/YYYY') AS CST,\n    PCT_HOURLY_0100,\n    PCT_HOURLY_0200,\n    PCT_HOURLY_0300,\n    PCT_HOURLY_0400,\n    PCT_HOURLY_0500,\n    PCT_HOURLY_0600,\n    PCT_HOURLY_0700,\n    PCT_HOURLY_0800,\n    PCT_HOURLY_0900,\n    PCT_HOURLY_1000,\n    PCT_HOURLY_1100,\n    PCT_HOURLY_1200,\n    PCT_HOURLY_1300,\n    PCT_HOURLY_1400,\n    PCT_HOURLY_1500,\n    PCT_HOURLY_1600,\n    PCT_HOURLY_1700,\n    PCT_HOURLY_1800,\n    PCT_HOURLY_1900,\n    PCT_HOURLY_2000,\n    PCT_HOURLY_2100,\n    PCT_HOURLY_2200,\n    PCT_HOURLY_2300,\n    PCT_HOURLY_2400\nFROM Source1_1;\n",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0.0,
        "Prompt-1 Results": 1.0,
        "Complexity": NaN,
        "Remark or Note": "in E ,hour disttribution can show pivoting, name change "
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_2",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "RES        RES01        HourlyLoad        1/1/11        1.3683        1.3504        1.2641        1.2517        1.3016        1.2379        1.205        1.3164        1.3022        1.4513        1.5293        1.439        1.3605        1.2648        1.1798        1.2446        1.2776        1.3264        1.3717        1.2498        1.2564        1.1658        1.122        0.9434        kW\nRES        RES01        HourlyLoad        1/2/11        0.7882        0.767        0.6952        0.6772        0.6428        0.7192        0.7504        0.9697        1.066        1.2865        1.2257        1.3022        1.4265        1.5908        1.3611        1.421        1.2689        1.3653        1.4461        1.5764        1.6356        1.6591        1.5318        1.4032        kW\nRES        RES01        HourlyLoad        1/3/11        1.2923        1.232        1.209        1.2782        1.4182        1.4176        1.7326        1.6609        1.7031        1.432        1.4658        1.2179        1.2532        1.1844        1.1438        1.0521        1.3357        1.6857        1.9099        2.1534        2.0608        2.0073        1.7486        1.622        kW\nRES        RES01        HourlyLoad        1/4/11        1.4253        1.4117        1.3961        1.4526        1.5362        1.6146        1.7492        1.9609        1.8338        1.6342        1.5036        1.3184        1.2472        1.1504        1.1795        1.1002        1.3719        1.6257        1.8881        2.0097        1.8777        1.881        1.6909        1.5097        kW\nRES        RES01        HourlyLoad        1/5/11        1.4508        1.387        1.4334        1.4939        1.4664        1.5707        1.7407        1.7195        1.7081        1.6191        1.4209        1.353        1.2054        1.1175        1.0411        1.1812        1.3405        1.6931        1.8267        1.7306        1.9175        1.8478        1.6508        1.5547        kW",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_2_Valid;  CREATE TABLE Target1_2_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_2_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    value1, value2, value3, value4, value5,value6, value7, value8, value9, value10,value11, value12, value13, value14, value15,value16, value17, value18, value19, value20,value21, value22, value23, value24\nFROM Source1_2;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1.0,
        "Prompt-1 Results": 1.0,
        "Complexity": NaN,
        "Remark or Note": "in G, CONED is one more option, use that if one of them does not work."
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_3",
        "Source Data Schema": "Date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": "DSL should be ignored.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/14        0.401886        0.047515        0.142297        0.105676        0.086158        0.049559        0.252565        0.079152        0.268245        0.323391        0.579675        0.373929        0.395818        0.346526        0.168488        0.23271        0.198111        0.171766        0.320391        0.175918        0.108393        0.147213        0.300779        1.149117        0\n1/2/14        0.061808        0.015586        0.08193        0.038746        0.064935        0.341103        0.318072        0.24995        0.445953        0.414153        0.202034        0.107344        0.176901        0.311849        0.12562        0.220417        0.393679        0.149632        0.246542        0.189238        0.175515        0.123704        0.101742        0.642902        0\n1/3/14        0.105998        0.097825        0.045263        0.02147        0.116618        0.097069        0.459935        0.101503        0.315191        0.563525        0.622161        0.305914        0.199931        0.22006        0.287004        0.338447        0.128828        0.377166        0.16656        0.167205        0.251336        0.296007        0.329497        0.770581        0\n1/4/14        0.132887        0.084677        0.053741        0.073192        0.06003        0.04954        0.317664        0.315603        0.176922        0.183564        0.149679        0.202652        0.301741        0.321656        0.110129        0.113431        0.255253        0.223525        0.410546        0.235924        0.303486        0.158355        0.159247        0.481933        0\n1/5/14        0.142936        0.196323        0.02642        0.059709        0.094588        0.074242        0.286263        0.190722        0.206605        0.105219        0.322878        0.374162        0.569126        0.3059        0.187928        0.288603        0.252635        0.331517        0.660367        0.305417        0.19502        0.236785        0.067532        0.445997        0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_3_Valid;  CREATE TABLE Target1_3_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_3_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\",\"6:00 AM\",\"7:00 AM\",\"8:00 AM\",\"9:00 AM\",\"10:00 AM\",\n        \"11:00 AM\",\"12:00 AM\",\"1:00 PM\",\"2:00 PM\",\"3:00 PM\",\"4:00 PM\",\"5:00 PM\",\"6:00 PM\",\"7:00 PM\",\"8:00 PM\",\n        \"9:00 PM\",\"10:00 PM\",\"11:00 PM\",\"12:00 PM\"\nFROM Source1_3;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1.0,
        "Prompt-1 Results": 1.0,
        "Complexity": NaN,
        "Remark or Note": "should pay attention to killo watt value, average value"
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_4",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/13        RESIDENT         0.89          0.80          0.74          0.72          0.71          0.72          0.76          0.87          1.02          1.13          1.16          1.16          1.14          1.11          1.08          1.10          1.26          1.40          1.39          1.34          1.26          1.14          1.02          0.90 \n1/2/13        RESIDENT         0.84          0.80          0.80          0.80          0.82          0.92          1.05          1.09          1.03          1.00          0.97          0.95          0.93          0.92          0.92          1.00          1.15          1.36          1.43          1.40          1.34          1.25          1.11          1.00 \n1/3/13        RESIDENT         0.95          0.92          0.91          0.91          0.94          1.03          1.16          1.18          1.12          1.07          1.03          1.01          0.99          0.98          0.96          1.02          1.17          1.35          1.43          1.42          1.35          1.24          1.10          0.99 \n1/4/13        RESIDENT         0.92          0.89          0.88          0.87          0.89          0.97          1.10          1.13          1.05          1.02          1.00          0.96          0.94          0.92          0.91          0.95          1.08          1.24          1.28          1.25          1.20          1.13          1.01          0.89 \n1/5/13        RESIDENT         0.82          0.76          0.73          0.71          0.71          0.75          0.83          0.95          1.01          1.04          1.02          1.01          1.00          0.98          0.99          1.04          1.18          1.34          1.35          1.28          1.22          1.15          1.03          0.91 ",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_4_Valid;  CREATE TABLE Target1_4_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_4_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(Date, 'Dy') || ' ' || TO_CHAR(Date, 'MM/DD/YYYY') AS CST,\n    \"1\", \"2\", \"3\", \"4\", \"5\",\"6\", \"7\", \"8\", \"9\", \"10\",\"11\", \"12\", \"13\", \"14\", \"15\",\"16\", \"17\", \"18\", \"19\", \"20\",\"21\", \"22\", \"23\", \"24\"\nFROM Source1_4;\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1.0,
        "Prompt-1 Results": 1.0,
        "Complexity": NaN,
        "Remark or Note": "In J, provide information like id values in killwatts or average over hour, "
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_5",
        "Source Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "1/1/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/2/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/3/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/4/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866\n1/5/15        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000119933        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000000001        0.000119933        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866        0.000239866",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_5_Valid;  CREATE TABLE Target1_5_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_5_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\",\"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\",\"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\",\"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\",\"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM Source1_5;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1.0,
        "Prompt-1 Results": 1.0,
        "Complexity": NaN,
        "Remark or Note": "In K , provide context about attribute, what attibute is representing what "
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_6",
        "Source Data Schema": "Company Rate Rate Code Date Hr1 Hr2 Hr3 Hr4 Hr5 Hr6 Hr7 Hr8 Hr9 Hr10 Hr11 Hr12 Hr13 Hr14 Hr15 Hr16 Hr17 Hr18 Hr19 Hr20 Hr21 Hr22 Hr23 Hr24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "Boston Edison        G1        A9/B1        1/1/14        0.91880        0.90204        0.90953        0.89743        0.90784        0.91352        0.90426        0.84936        0.83371        0.88786        0.86311        0.93132        0.91851        0.84487        0.87496        0.84075        0.98534        1.02454        0.98755        0.99935        0.98452        0.96688        0.95505        0.91513\nBoston Edison        G1        A9/B1        1/2/14        0.87892        0.88134        0.87665        0.90858        0.91542        0.92161        0.93303        1.01043        1.14976        1.25251        1.28495        1.34673        1.31238        1.30880        1.30000        1.19045        1.16443        1.17685        1.12458        1.05529        0.98511        0.96193        0.96526        0.97122\nBoston Edison        G1        A9/B1        1/3/14        0.93044        0.92009        0.92011        0.93063        0.93666        0.94961        0.93255        0.91908        0.91562        0.96811        1.00253        1.06153        1.19003        1.19289        1.22758        1.21124        1.20832        1.22837        1.17335        1.17034        1.09601        1.08531        1.06987        1.00114\nBoston Edison        G1        A9/B1        1/4/14        0.99430        0.99976        1.00380        1.01784        1.03292        1.01593        1.03356        1.01903        1.12290        1.19339        1.23023        1.24012        1.24816        1.30648        1.21167        1.11098        1.18366        1.18973        1.15116        1.10983        1.05467        1.01286        1.03867        1.02930\nBoston Edison        G1        A9/B1        1/5/14        0.96557        0.95280        0.91880        0.91824        0.91423        0.92391        0.90871        0.87327        0.87996        0.91213        0.94840        0.91633        0.88302        0.92150        1.04565        0.96922        1.03708        1.03603        1.05365        1.03192        0.99591        0.95368        0.93241        0.93497\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_6_Valid;  CREATE TABLE Target1_6_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_6_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(date, 'Dy') || ' ' || TO_CHAR(date, 'MM/DD/YYYY') AS CST,\n    Hr1, Hr2, Hr3, Hr4, Hr5, Hr6, Hr7, Hr8, Hr9, Hr10, Hr11, Hr12, Hr13, Hr14, Hr15, Hr16, Hr17, Hr18, Hr19, Hr20, Hr21, Hr22, Hr23, Hr24\nFROM Source1_6;",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 1.0,
        "Prompt-1 Results": 1.0,
        "Complexity": NaN,
        "Remark or Note": "PSEG have 2015 RHS file , have schema with HR1 like CMP"
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_7",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "Schema Change Hints": "CST in target table maps to Date in source table.",
        "5 Samples of Source Data": "RS6        Wed 01/01/2003        2.188        2.114        2.013        1.944        2.064        2.119        2.019        2.407        2.59        2.793        3.098        3.33        3.556        3.49        3.311        3.322        3.262        3.407        3.302        3.64        3.537        3.299        3.177        2.753\nRS6        Thu 01/02/2003        2.619        2.352        2.157        2.38        2.444        2.695        2.835        2.844        2.983        2.9        2.79        2.802        2.872        2.543        2.654        2.684        3.032        3.267        3.492        3.408        3.318        3.329        2.999        2.776\nRS6        Fri 01/03/2003        2.463        2.495        2.53        2.511        2.596        2.868        3.032        3.182        3.248        3.303        3.134        3.028        2.981        2.943        2.896        3.016        3.113        3.436        3.553        3.44        3.398        3.216        3.018        2.866\nRS6        Sat 01/04/2003        2.736        2.587        2.622        2.627        2.569        2.753        2.718        2.884        3.353        3.225        3.15        2.746        2.869        2.819        2.489        2.747        3.055        3.157        3.291        3.192        3.215        2.937        2.624        2.579\nRS6        Sun 01/05/2003        2.464        2.317        2.298        2.209        2.365        2.435        2.607        2.786        3.029        3.173        3.049        3.188        3.11        2.895        3.033        2.841        3.069        3.431        3.554        3.364        3.398        3.334        2.813        2.585",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_7_Valid;  CREATE TABLE Target1_7_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_7_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\") SELECT  Date, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\",\"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\",\"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\",\"21:00\", \"22:00\", \"23:00\", \"24:00\" FROM Source1_7;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0.0,
        "Prompt-1 Results": 0.0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_8",
        "Source Data Schema": "datetime cerc_logger_1",
        "Source Data Description": "The datetime attribute contains one timestamp for every 10 minutes. The cerc_logger_1 value is the total load value during the corresponding 10 minutes. ",
        "Schema Change Hints": "Use aggregation",
        "5 Samples of Source Data": "2/22/2018 0:30        22.875\n2/22/2018 0:40        22.937\n2/22/2018 0:50        22.937\n2/22/2018 1:00        22.937\n2/22/2018 1:10        23",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_8_Valid;  CREATE TABLE Target1_8_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_8_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n    TO_CHAR(datetime, 'Dy MM/DD/YYYY') AS CST,\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN cerc_logger_1 END), 0) AS \"1:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN cerc_logger_1 END), 0) AS \"2:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN cerc_logger_1 END), 0) AS \"3:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN cerc_logger_1 END), 0) AS \"4:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN cerc_logger_1 END), 0) AS \"5:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN cerc_logger_1 END), 0) AS \"6:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN cerc_logger_1 END), 0) AS \"7:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN cerc_logger_1 END), 0) AS \"8:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN cerc_logger_1 END), 0) AS \"9:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN cerc_logger_1 END), 0) AS \"10:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN cerc_logger_1 END), 0) AS \"11:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN cerc_logger_1 END), 0) AS \"12:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN cerc_logger_1 END), 0) AS \"13:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN cerc_logger_1 END), 0) AS \"14:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN cerc_logger_1 END), 0) AS \"15:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN cerc_logger_1 END), 0) AS \"16:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN cerc_logger_1 END), 0) AS \"17:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN cerc_logger_1 END), 0) AS \"18:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN cerc_logger_1 END), 0) AS \"19:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN cerc_logger_1 END), 0) AS \"20:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN cerc_logger_1 END), 0) AS \"21:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN cerc_logger_1 END), 0) AS \"22:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN cerc_logger_1 END), 0) AS \"23:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN cerc_logger_1 END), 0) AS \"24:00\"\nFROM Source1_8\nGROUP BY TO_CHAR(datetime, 'Dy MM/DD/YYYY');\n\n",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.0,
        "Prompt-1 Results": 0.0,
        "Complexity": NaN,
        "Remark or Note": "in I, first column "
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "Note that the second table records the total load in each hour each day. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_9",
        "Source Data Schema": "datetime zone_16",
        "Source Data Description": "The datetime attribute contains one timestamp for every 1 minutes. The zone_16 value is the total load value during the corresponding 1 minutes. ",
        "Schema Change Hints": "Use aggregation",
        "5 Samples of Source Data": "1/1/2018 0:00        67.9\n1/1/2018 0:01        67.9\n1/1/2018 0:02        67.9\n1/1/2018 0:03        67.9\n1/1/2018 0:04        67.9",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_9_Valid;  CREATE TABLE Target1_9_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_9_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n     TO_CHAR(datetime, 'Dy MM/DD/YYYY') AS CST,\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN zone_16 END), 0) AS \"1:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN zone_16 END), 0) AS \"2:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN zone_16 END), 0) AS \"3:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN zone_16 END), 0) AS \"4:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN zone_16 END), 0) AS \"5:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN zone_16 END), 0) AS \"6:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN zone_16 END), 0) AS \"7:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN zone_16 END), 0) AS \"8:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN zone_16 END), 0) AS \"9:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN zone_16 END), 0) AS \"10:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN zone_16 END), 0) AS \"11:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN zone_16 END), 0) AS \"12:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN zone_16 END), 0) AS \"13:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN zone_16 END), 0) AS \"14:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN zone_16 END), 0) AS \"15:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN zone_16 END), 0) AS \"16:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN zone_16 END), 0) AS \"17:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN zone_16 END), 0) AS \"18:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN zone_16 END), 0) AS \"19:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN zone_16 END), 0) AS \"20:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN zone_16 END), 0) AS \"21:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN zone_16 END), 0) AS \"22:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN zone_16 END), 0) AS \"23:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN zone_16 END), 0) AS \"24:00\"\nFROM Source1_9\nGROUP BY TO_CHAR(datetime, 'Dy MM/DD/YYYY');",
        "Prompt-3 Results": 1,
        "Prompt-2 Results": 0.0,
        "Prompt-1 Results": 0.0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target1",
        "Target Data Schema": "CST TEXT, 1:00 NUMERIC, 2:00 NUMERIC, 3:00 NUMERIC, 4:00 NUMERIC, 5:00 NUMERIC, 6:00 NUMERIC, 7:00 NUMERIC, 8:00 NUMERIC, 9:00 NUMERIC, 10:00 NUMERIC, 11:00 NUMERIC, 12:00 NUMERIC, 13:00 NUMERIC, 14:00 NUMERIC, 15:00 NUMERIC, 16:00 NUMERIC, 17:00 NUMERIC, 18:00 NUMERIC, 19:00 NUMERIC, 20:00 NUMERIC, 21:00 NUMERIC, 22:00 NUMERIC, 23:00 NUMERIC, 24:00 NUMERIC",
        "Target Data Description": "The target table records the total load of each hour of the 24 hours of a given CST date. In addition, CST is a column that contains both the day of week in abbreviation format, such as Mon, Tue, Wed, Thu, Fri, Sat, and Sun, and the date in the form of mm/dd/yyyy. An example of CST value is 'Fri 01/01/2016'. All transformed CST values must conform to the format.",
        "Source Data Name": "Source1_10",
        "Source Data Schema": "datetime TIMESTAMP, zone_16_cooling_sp Numeric",
        "Source Data Description": "The datetime attribute contains one timestamp for every 5 minutes. The zone_016_cooling_sp value is the total load value during the corresponding 5 minutes. ",
        "Schema Change Hints": "Use aggregation",
        "5 Samples of Source Data": "9/15/2018 09:55        72\n9/15/2018 10:00        75\n9/15/2018 10:05        73\n9/15/2018 10:10        72\n9/15/2018 10:15        73",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target1_10_Valid;  CREATE TABLE Target1_10_Valid (\n    CST TEXT,\n    \"1:00\" NUMERIC,\n    \"2:00\" NUMERIC,\n    \"3:00\" NUMERIC,\n    \"4:00\" NUMERIC,\n    \"5:00\" NUMERIC,\n    \"6:00\" NUMERIC,\n    \"7:00\" NUMERIC,\n    \"8:00\" NUMERIC,\n    \"9:00\" NUMERIC,\n    \"10:00\" NUMERIC,\n    \"11:00\" NUMERIC,\n    \"12:00\" NUMERIC,\n    \"13:00\" NUMERIC,\n    \"14:00\" NUMERIC,\n    \"15:00\" NUMERIC,\n    \"16:00\" NUMERIC,\n    \"17:00\" NUMERIC,\n    \"18:00\" NUMERIC,\n    \"19:00\" NUMERIC,\n    \"20:00\" NUMERIC,\n    \"21:00\" NUMERIC,\n    \"22:00\" NUMERIC,\n    \"23:00\" NUMERIC,\n    \"24:00\" NUMERIC\n);       INSERT INTO Target1_10_Valid (CST, \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\")\nSELECT\n     TO_CHAR(datetime, 'Dy MM/DD/YYYY') AS CST,\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 1 THEN zone_16_cooling_sp END), 0) AS \"1:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 2 THEN zone_16_cooling_sp END), 0) AS \"2:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 3 THEN zone_16_cooling_sp END), 0) AS \"3:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 4 THEN zone_16_cooling_sp END), 0) AS \"4:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 5 THEN zone_16_cooling_sp END), 0) AS \"5:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 6 THEN zone_16_cooling_sp END), 0) AS \"6:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 7 THEN zone_16_cooling_sp END), 0) AS \"7:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 8 THEN zone_16_cooling_sp END), 0) AS \"8:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 9 THEN zone_16_cooling_sp END), 0) AS \"9:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 10 THEN zone_16_cooling_sp END), 0) AS \"10:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 11 THEN zone_16_cooling_sp END), 0) AS \"11:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 12 THEN zone_16_cooling_sp END), 0) AS \"12:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 13 THEN zone_16_cooling_sp END), 0) AS \"13:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 14 THEN zone_16_cooling_sp END), 0) AS \"14:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 15 THEN zone_16_cooling_sp END), 0) AS \"15:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 16 THEN zone_16_cooling_sp END), 0) AS \"16:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 17 THEN zone_16_cooling_sp END), 0) AS \"17:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 18 THEN zone_16_cooling_sp END), 0) AS \"18:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 19 THEN zone_16_cooling_sp END), 0) AS \"19:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 20 THEN zone_16_cooling_sp END), 0) AS \"20:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 21 THEN zone_16_cooling_sp END), 0) AS \"21:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 22 THEN zone_16_cooling_sp END), 0) AS \"22:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 23 THEN zone_16_cooling_sp END), 0) AS \"23:00\",\n    COALESCE(SUM(CASE WHEN EXTRACT(HOUR FROM datetime) = 0 THEN zone_16_cooling_sp END), 0) AS \"24:00\"\nFROM Source1_10\nGroup By TO_CHAR(datetime, 'Dy MM/DD/YYYY');\n",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": 0.0,
        "Prompt-1 Results": 0.0,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_1",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is a column that contains both the day of week and the date. 1:00 to 24:00 are hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "CREATE TABLE comed_to_OrangeRockland_table (\n  DT_STRATA DATE,\n  DOW text,\n  PCT_HOURLY_0100 FLOAT,PCT_HOURLY_0200 FLOAT, PCT_HOURLY_0300 FLOAT, PCT_HOURLY_0400 FLOAT,PCT_HOURLY_0500 FLOAT, PCT_HOURLY_0600 FLOAT, PCT_HOURLY_0700 FLOAT,\n  PCT_HOURLY_0800 FLOAT, PCT_HOURLY_0900 FLOAT, PCT_HOURLY_1000 FLOAT, PCT_HOURLY_1100 FLOAT, PCT_HOURLY_1200 FLOAT, PCT_HOURLY_1300 FLOAT, PCT_HOURLY_1400 FLOAT,\n  PCT_HOURLY_1500 FLOAT, PCT_HOURLY_1600 FLOAT, PCT_HOURLY_1700 FLOAT, PCT_HOURLY_1800 FLOAT, PCT_HOURLY_1900 FLOAT, PCT_HOURLY_2000 FLOAT, PCT_HOURLY_2100 FLOAT,\n  PCT_HOURLY_2200 FLOAT, PCT_HOURLY_2300 FLOAT, PCT_HOURLY_2400 FLOAT);\n\n-- Step 4: Insert data from the first table to the second table\nINSERT INTO comed_to_OrangeRockland_table (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT\n  TO_DATE(CST, 'Dy MM/DD/YYYY') AS DT_STRATA,\n  CASE\n    WHEN CST LIKE 'Mon%' THEN '1'\n    WHEN CST LIKE 'Tue%' THEN '2'\n    WHEN CST LIKE 'Wed%' THEN '3'\n        WHEN CST LIKE 'Thu%' THEN '4'\n        WHEN CST LIKE 'Fri%' THEN '5'\n        WHEN CST LIKE 'Sat%' THEN '6'\n        WHEN CST LIKE 'Sun%' THEN '7'\n        WHEN CST LIKE 'Hol%' THEN 'H'\n    -- Add more cases for other days of the week\n  END AS DOW,\n  \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\nFROM comedtable;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "Context is "
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_2",
        "Source Data Schema": "class Description analysis date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24 uom",
        "Source Data Description": "class is type of class and Description is class description, analysis is type of electricity load. date is date. value1 to value 24 is hourly load values.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO smeco_to_OrangeRocklandtable (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400, PCT_HOURLY_2500)\nSELECT\n  date AS DT_STRATA,\n  EXTRACT(DOW FROM date) AS DOW,\n  value1 AS PCT_HOURLY_0100,\n  value2 AS PCT_HOURLY_0200,\n  value3 AS PCT_HOURLY_0300,\n  value4 AS PCT_HOURLY_0400,\n  value5 AS PCT_HOURLY_0500,\n  value6 AS PCT_HOURLY_0600,\n  value7 AS PCT_HOURLY_0700,\n  value8 AS PCT_HOURLY_0800,\n  value9 AS PCT_HOURLY_0900,\n  value10 AS PCT_HOURLY_1000,\n  value11 AS PCT_HOURLY_1100,\n  value12 AS PCT_HOURLY_1200,\n  value13 AS PCT_HOURLY_1300,\n  value14 AS PCT_HOURLY_1400,\n  value15 AS PCT_HOURLY_1500,\n  value16 AS PCT_HOURLY_1600,\n  value17 AS PCT_HOURLY_1700,\n  value18 AS PCT_HOURLY_1800,\n  value19 AS PCT_HOURLY_1900,\n  value20 AS PCT_HOURLY_2000,\n  value21 AS PCT_HOURLY_2100,\n  value22 AS PCT_HOURLY_2200,\n  value23 AS PCT_HOURLY_2300,\n  value24 AS PCT_HOURLY_2400,\n  NULL AS PCT_HOURLY_2500\nFROM smecotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_3",
        "Source Data Schema": "1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": "First attribute name is empty, It is adate column. 1:00 AM to 12.00 PM is electricity load in kWh. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO psegtoOrangeRockland_table (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT\n  date AS DT_STRATA,\n  EXTRACT(DOW FROM date) AS DOW,\n  \"1:00 AM\" AS PCT_HOURLY_0100,\n  \"2:00 AM\" AS PCT_HOURLY_0200,\n  \"3:00 AM\" AS PCT_HOURLY_0300,\n  \"4:00 AM\" AS PCT_HOURLY_0400,\n  \"5:00 AM\" AS PCT_HOURLY_0500,\n  \"6:00 AM\" AS PCT_HOURLY_0600,\n  \"7:00 AM\" AS PCT_HOURLY_0700,\n  \"8:00 AM\" AS PCT_HOURLY_0800,\n  \"9:00 AM\" AS PCT_HOURLY_0900,\n  \"10:00 AM\" AS PCT_HOURLY_1000,\n  \"11:00 AM\" AS PCT_HOURLY_1100,\n  \"12:00 AM\" AS PCT_HOURLY_1200,\n  \"1:00 PM\" AS PCT_HOURLY_1300,\n  \"2:00 PM\" AS PCT_HOURLY_1400,\n  \"3:00 PM\" AS PCT_HOURLY_1500,\n  \"4:00 PM\" AS PCT_HOURLY_1600,\n  \"5:00 PM\" AS PCT_HOURLY_1700,\n  \"6:00 PM\" AS PCT_HOURLY_1800,\n  \"7:00 PM\" AS PCT_HOURLY_1900,\n  \"8:00 PM\" AS PCT_HOURLY_2000,\n  \"9:00 PM\" AS PCT_HOURLY_2100,\n  \"10:00 PM\" AS PCT_HOURLY_2200,\n  \"11:00 PM\" AS PCT_HOURLY_2300,\n  \"12:00 PM\" AS PCT_HOURLY_2400 FROM pseg14whtable;\n\n\n\n\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_4",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": "Date is date, Profile is type of place  like residential , 1,2 are hour end of electricity loads.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nhecTo_OrangeRockland_table (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500, PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000, PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000, PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT\n  Date AS DT_STRATA,\n  EXTRACT(DOW FROM Date) AS DOW,\n  \"1\" AS PCT_HOURLY_0100,\n  \"2\" AS PCT_HOURLY_0200,\n  \"3\" AS PCT_HOURLY_0300,\n  \"4\" AS PCT_HOURLY_0400,\n  \"5\" AS PCT_HOURLY_0500,\n  \"6\" AS PCT_HOURLY_0600,\n  \"7\" AS PCT_HOURLY_0700,\n  \"8\" AS PCT_HOURLY_0800,\n  \"9\" AS PCT_HOURLY_0900,\n  \"10\" AS PCT_HOURLY_1000,\n  \"11\" AS PCT_HOURLY_1100,\n  \"12\" AS PCT_HOURLY_1200,\n  \"13\" AS PCT_HOURLY_1300,\n  \"14\" AS PCT_HOURLY_1400,\n  \"15\" AS PCT_HOURLY_1500,\n  \"16\" AS PCT_HOURLY_1600,\n  \"17\" AS PCT_HOURLY_1700,\n  \"18\" AS PCT_HOURLY_1800,\n  \"19\" AS PCT_HOURLY_1900,\n  \"20\" AS PCT_HOURLY_2000,\n  \"21\" AS PCT_HOURLY_2100,\n  \"22\" AS PCT_HOURLY_2200,\n  \"23\" AS PCT_HOURLY_2300,\n  \"24\" AS PCT_HOURLY_2400\nFROM nhectable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_5",
        "Source Data Schema": "date Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": "First attribute name is empty, It is adate column.. Hour 1 , Hour 25 are each hour electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nimotoorange (\"DT_STRATA\", \"DOW\", \"PCT_HOURLY_0100\", \"PCT_HOURLY_0200\", \"PCT_HOURLY_0300\", \"PCT_HOURLY_0400\", \"PCT_HOURLY_0500\", \"PCT_HOURLY_0600\", \"PCT_HOURLY_0700\", \"PCT_HOURLY_0800\", \"PCT_HOURLY_0900\", \"PCT_HOURLY_1000\", \"PCT_HOURLY_1100\", \"PCT_HOURLY_1200\", \"PCT_HOURLY_1300\", \"PCT_HOURLY_1400\", \"PCT_HOURLY_1500\", \"PCT_HOURLY_1600\", \"PCT_HOURLY_1700\", \"PCT_HOURLY_1800\", \"PCT_HOURLY_1900\", \"PCT_HOURLY_2000\", \"PCT_HOURLY_2100\", \"PCT_HOURLY_2200\", \"PCT_HOURLY_2300\", \"PCT_HOURLY_2400\")\nSELECT\n    \"date\",\n    EXTRACT(DOW FROM \"Date\"),\n     \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM nimotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_6",
        "Source Data Schema": "Company Rate Rate Code Date Hr1 Hr2 Hr3 Hr4 Hr5 Hr6 Hr7 Hr8 Hr9 Hr10 Hr11 Hr12 Hr13 Hr14 Hr15 Hr16 Hr17 Hr18 Hr19 Hr20 Hr21 Hr22 Hr23 Hr24",
        "Source Data Description": "Company is company name, Rate is Rate group name and Rate Code are code for groups. Date is date. Hr 1, Hr 2 are hourly electricity load values. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_7",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment describes the segment of the building. Date contains both  the day of week in abbreviation format and the date in the form of mm/dd/yyyy.  ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nstartoorange (\"DT_STRATA\", \"DOW\", \"PCT_HOURLY_0100\", \"PCT_HOURLY_0200\", \"PCT_HOURLY_0300\", \"PCT_HOURLY_0400\", \"PCT_HOURLY_0500\", \"PCT_HOURLY_0600\", \"PCT_HOURLY_0700\", \"PCT_HOURLY_0800\", \"PCT_HOURLY_0900\", \"PCT_HOURLY_1000\", \"PCT_HOURLY_1100\", \"PCT_HOURLY_1200\", \"PCT_HOURLY_1300\", \"PCT_HOURLY_1400\", \"PCT_HOURLY_1500\", \"PCT_HOURLY_1600\", \"PCT_HOURLY_1700\", \"PCT_HOURLY_1800\", \"PCT_HOURLY_1900\", \"PCT_HOURLY_2000\", \"PCT_HOURLY_2100\", \"PCT_HOURLY_2200\", \"PCT_HOURLY_2300\", \"PCT_HOURLY_2400\")\nSELECT\n    \"Date\",\n    EXTRACT(DOW FROM \"Date\"),\n    \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"\nFROM nstartable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_8",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_interior_to_OrangeRockland (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500,PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000,\n  PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000,\n  PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\nSELECT\n  DATE_TRUNC('day', date) AS DT_STRATA,\n  EXTRACT(DOW FROM date) AS DOW,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_0900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_1900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 24 THEN cerc_logger_1 ELSE 0 END) AS PCT_HOURLY_2400 FROM zone_temp_interior_table\nGROUP BY DATE_TRUNC('day', date), EXTRACT(DOW FROM date);\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_9",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_exterior_to_OrangeRockland (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500,PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000,\n  PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000,\n  PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\n  SELECT\n  DATE_TRUNC('day', date) AS DT_STRATA,\n  EXTRACT(DOW FROM date) AS DOW,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_0900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_1900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_2000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_2100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_2200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_2300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 24 THEN zone_016_temp ELSE 0 END) AS PCT_HOURLY_2400 FROM zone_temp_exterior_table\n  GROUP BY DATE_TRUNC('day', date), EXTRACT(DOW FROM date);\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target2",
        "Target Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Target Data Description": "DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Source Data Name": "Source2_10",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "  INSERT INTO zone_temp_cooling_to_OrangeRockland (DT_STRATA, DOW, PCT_HOURLY_0100, PCT_HOURLY_0200, PCT_HOURLY_0300, PCT_HOURLY_0400, PCT_HOURLY_0500,PCT_HOURLY_0600, PCT_HOURLY_0700, PCT_HOURLY_0800, PCT_HOURLY_0900, PCT_HOURLY_1000,\n  PCT_HOURLY_1100, PCT_HOURLY_1200, PCT_HOURLY_1300, PCT_HOURLY_1400, PCT_HOURLY_1500, PCT_HOURLY_1600, PCT_HOURLY_1700, PCT_HOURLY_1800, PCT_HOURLY_1900, PCT_HOURLY_2000,\n  PCT_HOURLY_2100, PCT_HOURLY_2200, PCT_HOURLY_2300, PCT_HOURLY_2400)\n  SELECT\n  DATE_TRUNC('day', date) AS DT_STRATA,\n  EXTRACT(DOW FROM date) AS DOW,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_0900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1400,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1500,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1600,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1700,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1800,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_1900,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_2000,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_2100,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_2200,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_2300,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 24 THEN zone_016_cooling_sp ELSE 0 END) AS PCT_HOURLY_2400 FROM zone_temp_cooling_sp_table\n  GROUP BY DATE_TRUNC('day', date), EXTRACT(DOW FROM date);\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "COMED",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is dayofweek, date. 1:00, 2:00 to 20:00:00 have hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO CMPTable (Month, Day, HR1, HR2, HR3, HR4, HR5,HR6, HR7, HR8, HR9, HR10,HR11, HR12, HR13, HR14, HR15,HR16, HR17, HR18, HR19, HR20,HR21, HR22, HR23, HR24)\nSELECT\n    TO_CHAR(TO_DATE(SUBSTRING(CST FROM 5), 'MM/DD/YYYY'), 'Month') AS Month,\n\tCASE\n        WHEN SUBSTRING(CST FROM 1 FOR 3) IN ('Mon', 'Tue', 'Wed', 'Thu', 'Fri') THEN 'Weekday'\n        WHEN SUBSTRING(CST FROM 1 FOR 3) IN ('Sat', 'Sun') THEN 'Weekend'\n    END AS Day,\n    SUM(\"1:00\"), SUM(\"2:00\"), SUM(\"3:00\"), SUM(\"4:00\"), SUM(\"5:00\"),SUM(\"6:00\"), SUM(\"7:00\"), SUM(\"8:00\"), SUM(\"9:00\"), SUM(\"10:00\"),SUM(\"11:00\"), SUM(\"12:00\"), SUM(\"13:00\"), SUM(\"14:00\"), SUM(\"15:00\"),SUM(\"16:00\"), SUM(\"17:00\"), SUM(\"18:00\"), SUM(\"19:00\"), SUM(\"20:00\"),SUM(\"21:00\"), SUM(\"22:00\"), SUM(\"23:00\"), SUM(\"24:00\")\nFROM COMEDTable\nGROUP BY Month, Day;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Orange and Rockland",
        "Source Data Schema": "Strata_ID        Strata        DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "Strata_ID is  ID, Strata is Strata name, DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO orange_to_cmp_table (Month, Day, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT\n  EXTRACT(MONTH FROM DT_STRATA) AS Month,\n  EXTRACT(DAY FROM DT_STRATA) AS Day,\n  PCT_HOURLY_0100,PCT_HOURLY_0200,PCT_HOURLY_0300, PCT_HOURLY_0400,PCT_HOURLY_0500,PCT_HOURLY_0600,PCT_HOURLY_0700,PCT_HOURLY_0800,\n  PCT_HOURLY_0900,PCT_HOURLY_1000,PCT_HOURLY_1100,PCT_HOURLY_1200,PCT_HOURLY_1300,PCT_HOURLY_1400,PCT_HOURLY_1500,PCT_HOURLY_1600,\n  PCT_HOURLY_1700,PCT_HOURLY_1800,PCT_HOURLY_1900,PCT_HOURLY_2000,PCT_HOURLY_2100,PCT_HOURLY_2200,PCT_HOURLY_2300, PCT_HOURLY_2400\nFROM orangeandrocklandtable;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "EVERSOURCE-PSNH",
        "Source Data Schema": "Month Daytype  1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00",
        "Source Data Description": "Month is month like Sep, DayType is WD or WE and 1:00 , 2:00 are average hourly values",
        "Schema Change Hints": "For each month in source WD and WE should map to Month and daytype in target",
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO psnh_to_cmp_table (Month, day, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT \n    CASE\n        WHEN Month = 'Jan' THEN 'January'\n                WHEN Month = 'Feb' THEN 'February'\n                WHEN Month = 'Mar' THEN 'March'\n                WHEN Month = 'Apr' THEN 'April'\n                WHEN Month = 'May' THEN 'May'\n                WHEN Month = 'Jun' THEN 'June'\n                WHEN Month = 'Jul' THEN 'July'\n                WHEN Month = 'Aug' THEN 'August'\n                WHEN Month = 'Sep' THEN 'September'\n                WHEN Month = 'Oct' THEN 'October'\n                WHEN Month = 'Nov' THEN 'November'\n                WHEN Month = 'Dec' THEN 'December'\n        ELSE Month\n    END AS Month, \n    CASE\n        WHEN Daytype = 'WD' THEN 'Weekday'\n        WHEN Daytype = 'WE' THEN 'Weekend'\n        ELSE Daytype\n    END AS day,\n        \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\nFROM psnh_table;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "SMECO (R1)",
        "Source Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Source Data Description": "class is type of class and Description is class description, analysis is type of electricity load. date is date. value1 to value 24 is hourly load values.",
        "Schema Change Hints": "The date column in source should give month and should be able to do average for weekday and weekend. ",
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": " INSERT INTO second_table (\"Month\", \"DayType\", \"HR1\", \"HR2\", \"HR3\", \"HR4\", \"HR5\", \"HR6\", \"HR7\", \"HR8\", \"HR9\", \"HR10\", \"HR11\", \"HR12\", \"HR13\", \"HR14\", \"HR15\", \"HR16\", \"HR17\", \"HR18\", \"HR19\", \"HR20\", \"HR21\", \"HR22\", \"HR23\", \"HR24\")\nSELECT\n    EXTRACT(MONTH FROM \"date\"),\n    CASE \n        WHEN EXTRACT(DOW FROM \"date\") IN (0, 6) THEN 'Weekend'\n        ELSE 'Weekday'\n    END,\n    SUM(\"value1 \"), SUM(\"value2 \"), SUM(\"value3\"), SUM(\"value4 \"), SUM(\"value5\"), SUM(\"value6\"), SUM(\"value7\"), SUM(\"value8\"), SUM(\"value 9\"), SUM(\"value10\"), SUM(\"value11\"), SUM(\"value12\"), SUM(\"value13\"), SUM(\"value14\"), SUM(\"value15\"), SUM(\"value16\"), SUM(\"value17\"), SUM(\"value18\"), SUM(\"value19\"), SUM(\"value20\"), SUM(\"value21\"), SUM(\"value22\"), SUM(\"value23\"), SUM(\"value24\")\nFROM smecotable\nGROUP BY EXTRACT(MONTH FROM \"date\"), CASE WHEN EXTRACT(DOW FROM \"date\") IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "PSEG(14wh file)",
        "Source Data Schema": "date, 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": "first column does not have name, its a date column. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO psegtocmp(\"Month\", \"DayType\", \"HR1\", \"HR2\", \"HR3\", \"HR4\", \"HR5\", \"HR6\", \"HR7\", \"HR8\", \"HR9\", \"HR10\", \"HR11\", \"HR12\", \"HR13\", \"HR14\", \"HR15\", \"HR16\", \"HR17\", \"HR18\", \"HR19\", \"HR20\", \"HR21\", \"HR22\", \"HR23\", \"HR24\")\nSELECT\n    TO_CHAR(\"Date\", 'Month'),\n    CASE \n        WHEN EXTRACT(DOW FROM \"date\") IN (0, 6) THEN 'Weekend'\n        ELSE 'Weekday'\n    END,\n    SUM(\"1:00 AM\"), SUM(\"2:00 AM\"), SUM(\"3:00 AM\"), SUM(\"4:00 AM\"), SUM(\"5:00 AM\"), SUM(\"6:00 AM\"), SUM(\"7:00 AM\"), SUM(\"8:00 AM\"), SUM(\"9:00 AM\"), SUM(\"10:00 AM\"), SUM(\"11:00 AM\"), SUM(\"12:00 AM\"), SUM(\"1:00 PM\"), SUM(\"2:00 PM\"), SUM(\"3:00 PM\"), SUM(\"4:00 PM\"), SUM(\"5:00 PM\"), SUM(\"6:00 PM\"), SUM(\"7:00 PM\"), SUM(\"8:00 PM\"), SUM(\"9:00 PM\"), SUM(\"10:00 PM\"), SUM(\"11:00 PM\"), SUM(\"12:00 PM\")\nFROM psegtable\nGROUP BY EXTRACT(MONTH FROM \"date\"), CASE WHEN EXTRACT(DOW FROM \"date\") IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END;",
        "Prompt-3 Results": "(sample:INSERT INTO day_of_week_data (month, day_of_week, temperature)\nSELECT \n    EXTRACT(MONTH FROM date) AS month,\n    CASE WHEN EXTRACT(ISODOW FROM date) IN (1, 2, 3, 4, 5) THEN 'weekday' ELSE 'weekend' END AS day_of_week,\n    AVG(temperature) AS temperature\nFROM weather_data\nGROUP BY EXTRACT(MONTH FROM date), day_of_week;)",
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "NHEC",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nhectocmptable (\"Month\", \"DayType\", \"HR1\", \"HR2\", \"HR3\", \"HR4\", \"HR5\", \"HR6\", \"HR7\", \"HR8\", \"HR9\", \"HR10\", \"HR11\", \"HR12\", \"HR13\", \"HR14\", \"HR15\", \"HR16\", \"HR17\", \"HR18\", \"HR19\", \"HR20\", \"HR21\", \"HR22\", \"HR23\", \"HR24\")\nSELECT\n    TO_CHAR(\"Date\", 'Month'),\n    CASE \n        WHEN EXTRACT(DOW FROM \"Date\") IN (0, 6) THEN 'Weekend'\n        ELSE 'Weekday'\n    END,\n    SUM(\"1\"), SUM(\"2\"), SUM(\"3\"), SUM(\"4\"), SUM(\"5\"), SUM(\"6\"), SUM(\"7\"), SUM(\"8\"), SUM(\"9\"), SUM(\"10\"), SUM(\"11\"), SUM(\"12\"), SUM(\"13\"), SUM(\"14\"), SUM(\"15\"), SUM(\"16\"), SUM(\"17\"), SUM(\"18\"), SUM(\"19\"), SUM(\"20\"), SUM(\"21\"), SUM(\"22\"), SUM(\"23\"), SUM(\"24\")\nFROM nhectable\nGROUP BY TO_CHAR(\"Date\", 'Month'), CASE WHEN EXTRACT(DOW FROM \"Date\") IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END;\n",
        "Prompt-3 Results": "(sample:INSERT INTO day_of_week_data (month, day_of_week, temperature)\nSELECT \n    EXTRACT(MONTH FROM date) AS month,\n    CASE WHEN EXTRACT(ISODOW FROM date) IN (1, 2, 3, 4, 5) THEN 'weekday' ELSE 'weekend' END AS day_of_week,\n    AVG(temperature) AS temperature\nFROM weather_data\nGROUP BY EXTRACT(MONTH FROM date), day_of_week;)",
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "NGRID: NIMO(stlght file)",
        "Source Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": "first column does not have name, its a date column. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nimotocmptable (\"Month\", \"DayType\", \"HR1\", \"HR2\", \"HR3\", \"HR4\", \"HR5\", \"HR6\", \"HR7\", \"HR8\", \"HR9\", \"HR10\", \"HR11\", \"HR12\", \"HR13\", \"HR14\", \"HR15\", \"HR16\", \"HR17\", \"HR18\", \"HR19\", \"HR20\", \"HR21\", \"HR22\", \"HR23\", \"HR24\")\nSELECT\n    TO_CHAR(\"Date\", 'Month'),\n    CASE \n        WHEN EXTRACT(DOW FROM \"Date\") IN (0, 6) THEN 'Weekend'\n        ELSE 'Weekday'\n    END,\n    SUM(\"Hour 1\"), SUM(\"Hour 2\"), SUM(\"Hour 3\"), SUM(\"Hour 4\"), SUM(\"Hour 5\"), SUM(\"Hour 6\"), SUM(\"Hour 7\"), SUM(\"Hour 8\"), SUM(\"Hour 9\"), SUM(\"Hour 10\"), SUM(\"Hour 11\"), SUM(\"Hour 12\"), SUM(\"Hour 13\"), SUM(\"Hour 14\"), SUM(\"Hour 15\"), SUM(\"Hour 16\"), SUM(\"Hour 17\"), SUM(\"Hour 18\"), SUM(\"Hour 19\"), SUM(\"Hour 20\"), SUM(\"Hour 21\"), SUM(\"Hour 22\"), SUM(\"Hour 23\"), SUM(\"Hour 24\")\nFROM nimotable\nGROUP BY TO_CHAR(\"Date\", 'Month'), CASE WHEN EXTRACT(DOW FROM \"Date\") IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END;\n",
        "Prompt-3 Results": "(sample:INSERT INTO day_of_week_data (month, day_of_week, temperature)\nSELECT \n    EXTRACT(MONTH FROM date) AS month,\n    CASE WHEN EXTRACT(ISODOW FROM date) IN (1, 2, 3, 4, 5) THEN 'weekday' ELSE 'weekend' END AS day_of_week,\n    AVG(temperature) AS temperature\nFROM weather_data\nGROUP BY EXTRACT(MONTH FROM date), day_of_week;)",
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Source Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nstartocmptable (\"Month\", \"DayType\", \"HR1\", \"HR2\", \"HR3\", \"HR4\", \"HR5\", \"HR6\", \"HR7\", \"HR8\", \"HR9\", \"HR10\", \"HR11\", \"HR12\", \"HR13\", \"HR14\", \"HR15\", \"HR16\", \"HR17\", \"HR18\", \"HR19\", \"HR20\", \"HR21\", \"HR22\", \"HR23\", \"HR24\")\nSELECT\n    TO_CHAR(\"Date\", 'Month'),\n    CASE \n        WHEN EXTRACT(DOW FROM \"Date\") IN (0, 6) THEN 'Weekend'\n        ELSE 'Weekday'\n    END,\n    SUM(\"Hr 1\"), SUM(\"Hr 2\"), SUM(\"Hr 3\"), SUM(\"Hr 4\"), SUM(\"Hr 5\"), SUM(\"Hr 6\"), SUM(\"Hr 7\"), SUM(\"Hr 8\"), SUM(\"Hr 9\"), SUM(\"Hr 10\"), SUM(\"Hr 11\"), SUM(\"Hr 12\"), SUM(\"Hr 13\"), SUM(\"Hr 14\"), SUM(\"Hr 15\"), SUM(\"Hur 16\"), SUM(\"Hr 17\"), SUM(\"Hr 18\"), SUM(\"Hr 19\"), SUM(\"Hr 20\"), SUM(\"Hr 21\"), SUM(\"Hr 22\"), SUM(\"Hr 23\"), SUM(\"Hr 24\")\nFROM nstartable\nGROUP BY TO_CHAR(\"Date\", 'Month'), CASE WHEN EXTRACT(DOW FROM \"Date\") IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END;\n",
        "Prompt-3 Results": "(sample:INSERT INTO day_of_week_data (month, day_of_week, temperature)\nSELECT \n    EXTRACT(MONTH FROM date) AS month,\n    CASE WHEN EXTRACT(ISODOW FROM date) IN (1, 2, 3, 4, 5) THEN 'weekday' ELSE 'weekend' END AS day_of_week,\n    AVG(temperature) AS temperature\nFROM weather_data\nGROUP BY EXTRACT(MONTH FROM date), day_of_week;)",
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "DEOK-RS6_Average_Hourly_Demand",
        "Source Data Schema": "Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO deoktocmp(\"Month\", \"DayType\", \"HR1\", \"HR2\", \"HR3\", \"HR4\", \"HR5\", \"HR6\", \"HR7\", \"HR8\", \"HR9\", \"HR10\", \"HR11\", \"HR12\", \"HR13\", \"HR14\", \"HR15\", \"HR16\", \"HR17\", \"HR18\", \"HR19\", \"HR20\", \"HR21\", \"HR22\", \"HR23\", \"HR24\")\nSELECT\n    TO_CHAR(\"Date\", 'Month'),\n    CASE \n        WHEN EXTRACT(DOW FROM \"date\") IN (0, 6) THEN 'Weekend'\n        ELSE 'Weekday'\n    END,\n    SUM(\"1:00\"), SUM(\"2:00\"), SUM(\"3:00\"), SUM(\"4:00\"), SUM(\"5:00\"), SUM(\"6:00\"), SUM(\"7:00\"), SUM(\"8:00\"), SUM(\"9:00\"), SUM(\"10:00\"), SUM(\"11:00\"), SUM(\"12:00\"), SUM(\"1:00\"), SUM(\"2:00\"), SUM(\"3:00\"), SUM(\"4:00\"), SUM(\"5:00\"), SUM(\"6:00\"), SUM(\"7:00\"), SUM(\"8:00\"), SUM(\"9:00\"), SUM(\"10:00\"), SUM(\"11:00\"), SUM(\"12:00\")\nFROM deoktable\nGROUP BY EXTRACT(MONTH FROM \"date\"), CASE WHEN EXTRACT(DOW FROM \"date\") IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "CMP: Copy of Settlement2010",
        "Target Data Schema": "Month, DayType, HR1 HR2 HR3 HR4 HR5 HR6 HR7 HR8 HR9 HR10 HR11 HR12 HR13 HR14 HR15 HR16 HR17 HR18 HR19 HR20 HR21 HR22 HR23 HR24",
        "Target Data Description": "The first column records the month. The second column records the  day type, which can only be either weekday or weekend. Each of the columns such as HR1,HR2, and so on, represents a load value in the unit of kilowatts in the corresponding hour.",
        "Source Data Name": "Zone_temp_interior",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_interior_tocmptable (Month, Day, HR1, HR2, HR3, HR4, HR5, HR6, HR7, HR8, HR9, HR10, HR11, HR12, HR13, HR14, HR15, HR16, HR17, HR18, HR19, HR20, HR21, HR22, HR23, HR24)\nSELECT\n  EXTRACT(MONTH FROM date) AS Month,\n  CASE WHEN EXTRACT(DOW FROM date) IN (0, 6) THEN 'Weekend' ELSE 'Weekday' END AS Day,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN cerc_templogger_1 END) AS HR1,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN cerc_templogger_1 END) AS HR2,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN cerc_templogger_1 END) AS HR3,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN cerc_templogger_1 END) AS HR4,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN cerc_templogger_1 END) AS HR5,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN cerc_templogger_1 END) AS HR6,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN cerc_templogger_1 END) AS HR7,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN cerc_templogger_1 END) AS HR8,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN cerc_templogger_1 END) AS HR9,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN cerc_templogger_1 END) AS HR10,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN cerc_templogger_1 END) AS HR11,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN cerc_templogger_1 END) AS HR12,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN cerc_templogger_1 END) AS HR13,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN cerc_templogger_1 END) AS HR14,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN cerc_templogger_1 END) AS HR15,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN cerc_templogger_1 END) AS HR16,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN cerc_templogger_1 END) AS HR17,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN cerc_templogger_1 END) AS HR18,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN cerc_templogger_1 END) AS HR19,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN cerc_templogger_1 END) AS HR20,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN cerc_templogger_1 END) AS HR21,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN cerc_templogger_1 END) AS HR22,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN cerc_templogger_1 END) AS HR23,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 24 THEN cerc_templogger_1 END) AS HR24\nFROM zone_temp_interior_table\nGROUP BY EXTRACT(MONTH FROM date), EXTRACT(DAY FROM date), Day;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": "could be complex to make wed to weekday, extract month from date and then aggregate for values over month wise",
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "Orange and Rockland",
        "Source Data Schema": "Strata_ID        Strata        DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "Strata_ID is  ID, Strata is Strata name, DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Schema Change Hints": "DT_STRATA should map to date, and PCT hourly value to respetive hours. ",
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO orangetoNIMO (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  DT_STRATA,\n  PCT_HOURLY_0100,PCT_HOURLY_0200,PCT_HOURLY_0300,PCT_HOURLY_0400,PCT_HOURLY_0500,PCT_HOURLY_0600,PCT_HOURLY_0700, PCT_HOURLY_0800,PCT_HOURLY_0900,PCT_HOURLY_1000,PCT_HOURLY_1100,PCT_HOURLY_1200,PCT_HOURLY_1300,PCT_HOURLY_1400,PCT_HOURLY_1500,PCT_HOURLY_1600,   PCT_HOURLY_1700,PCT_HOURLY_1800,PCT_HOURLY_1900,PCT_HOURLY_2000,PCT_HOURLY_2100,PCT_HOURLY_2200,PCT_HOURLY_2300,PCT_HOURLY_2400\nFROM orangeandrocklandtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "in E, schema have first column empty which is date"
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "Zone_temp_interior",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_interior_to_nimo (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  date::DATE,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 1\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 2\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 3\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 4\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 5\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 6\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 7\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 8\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 9\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 10\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 11\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 12\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 13\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 14\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 15\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 16\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 17\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 18\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 19\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 20\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 21\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 22\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 23\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN cerc_logger_1 ELSE 0 END) AS \"Hour 24\"\nFROM zone_temp_interior_table\nGROUP BY date::DATE;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "Zone_temp_exterior",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_exterior_to_nimo (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  date::DATE,\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN zone_016_temp ELSE 0 END) AS \"Hour 1\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_016_temp ELSE 0 END) AS \"Hour 2\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_016_temp ELSE 0 END) AS \"Hour 3\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_016_temp ELSE 0 END) AS \"Hour 4\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_016_temp ELSE 0 END) AS \"Hour 5\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_016_temp ELSE 0 END) AS \"Hour 6\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_016_temp ELSE 0 END) AS \"Hour 7\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_016_temp ELSE 0 END) AS \"Hour 8\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_016_temp ELSE 0 END) AS \"Hour 9\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_016_temp ELSE 0 END) AS \"Hour 10\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_016_temp ELSE 0 END) AS \"Hour 11\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_016_temp ELSE 0 END) AS \"Hour 12\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_016_temp ELSE 0 END) AS \"Hour 13\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_016_temp ELSE 0 END) AS \"Hour 14\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_016_temp ELSE 0 END) AS \"Hour 15\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_016_temp ELSE 0 END) AS \"Hour 16\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_016_temp ELSE 0 END) AS \"Hour 17\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_016_temp ELSE 0 END) AS \"Hour 18\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_016_temp ELSE 0 END) AS \"Hour 19\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_016_temp ELSE 0 END) AS \"Hour 20\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_016_temp ELSE 0 END) AS \"Hour 21\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_016_temp ELSE 0 END) AS \"Hour 22\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_016_temp ELSE 0 END) AS \"Hour 23\",\n  SUM(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_016_temp ELSE 0 END) AS \"Hour 24\"\nFROM zone_temp_interior_table\nGROUP BY date::DATE;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "zone_temp_sp_c",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_sp_to_nimo (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  date::DATE,\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 0 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 1\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 1 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 2\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 2 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 3\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 3 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 4\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 4 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 5\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 5 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 6\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 6 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 7\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 7 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 8\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 8 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 9\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 9 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 10\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 10 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 11\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 11 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 12\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 12 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 13\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 13 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 14\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 14 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 15\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 15 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 16\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 16 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 17\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 17 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 18\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 18 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 19\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 19 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 20\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 20 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 21\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 21 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 22\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 22 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 23\",\n  MAX(CASE WHEN EXTRACT(HOUR FROM date) = 23 THEN zone_016_cooling_sp ELSE 0 END) AS \"Hour 24\"\nFROM zone_temp_cooling_sp_table\nGROUP BY date::DATE;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "SMECO (R1)",
        "Source Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Source Data Description": NaN,
        "Schema Change Hints": "class, description, analysis can be dropped.",
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO smeco_to_nimo_table (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  date::DATE,\n  value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22, value23, value24\nFROM smecotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "PSEG(14wh file)",
        "Source Data Schema": "date, 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO pseg_to_nimo (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  date,\n  \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\"\nFROM psegtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "NHEC",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nhec_to_nimo(\"date\", \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  \"Date\"::DATE,\n  \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM nhectable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "COMED",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is dayofweek, date. 1:00, 2:00 to 20:00:00 have hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO comed_to_nimo (date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  TO_DATE(SUBSTRING(CST FROM 5), 'MM/DD/YYYY') AS date,\n  \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\nFROM comedtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Source Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nstar_to_nimo (Date, \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  Date,\n  \"Hr 1\",\"Hr 2\",\"Hr 3\",\"Hr 4\",\"Hr 5\",\"Hr 6\",\"Hr 7\",\"Hr 8\",\"Hr 9\",\"Hr 10\",\"Hr 11\",\"Hr 12\",\"Hr 13\",\"Hr 14\",\"Hr 15\",\"Hr 16\",\"Hr 17\",\n  \"Hr 18\",\"Hr 19\",\"Hr 20\",\"Hr 21\",\"Hr 22\",\"Hr 23\",\"Hr 24\"\nFROM nstartable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target4",
        "Target Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Target Data Description": "The first column name is empty ,its date. ",
        "Source Data Name": "DEOK-RS6_Average_Hourly_Demand",
        "Source Data Schema": "Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "Segment is name, date os day of week and date, 1:00.... 25:00 are hourly values.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO deoktonimo (\"date\", \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\")\nSELECT\n  TO_DATE(\"Date\", 'Dy MM/DD/YYYY') AS \"date\",\n  \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM deoktable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "COMED",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is dayofweek, date. 1:00, 2:00 to 20:00:00 have hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO comedtopseg (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n  TO_DATE(\"CST\", 'Dy MM/DD/YYYY') AS \"date\",\n  \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM comedtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "in E, schema have first column empty which is date"
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "SMECO (R1)",
        "Source Data Schema": " date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO smecotopseg ( \"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n  date::DATE,\n  value1, value2, value3, value4, value5, value6, value7, value8, value9, value10, value11, value12, value13, value14, value15, value16, value17, value18, value19, value20, value21, value22, value23, value24\nFROM smecotable;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "Orange and Rockland",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": " DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO orangetopseg ( \"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n  DT_STRATA,\n  PCT_HOURLY_0100,PCT_HOURLY_0200,PCT_HOURLY_0300,PCT_HOURLY_0400,PCT_HOURLY_0500,PCT_HOURLY_0600,PCT_HOURLY_0700, PCT_HOURLY_0800,PCT_HOURLY_0900,PCT_HOURLY_1000,PCT_HOURLY_1100,PCT_HOURLY_1200,PCT_HOURLY_1300,PCT_HOURLY_1400,PCT_HOURLY_1500,PCT_HOURLY_1600,   PCT_HOURLY_1700,PCT_HOURLY_1800,PCT_HOURLY_1900,PCT_HOURLY_2000,PCT_HOURLY_2100,PCT_HOURLY_2200,PCT_HOURLY_2300,PCT_HOURLY_2400\nFROM orangeandrocklandtable;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "NHEC",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nhectopseg( \"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n  \"Date\"::DATE,\n  \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM nhectable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "NGRID: NIMO(stlght file)",
        "Source Data Schema": "date,Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nimotopsegtable (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    \"date\",\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\",\n    \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\",\n    \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM nimotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Source Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nstartopsegtable (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    \"date\",\n    \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\"\nFROM nstartable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "DEOK-RS6_Average_Hourly_Demand",
        "Source Data Schema": "Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO deoktopsegtable (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    TO_DATE(\"Date\", 'Dy MM/DD/YYYY') AS \"Date\",\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\",\n    \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\",\n    \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00:00\"\nFROM deoktable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "Zone_temp_interior",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_interior_to_pseg (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"cerc_logger_1\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"cerc_logger_1\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"cerc_logger_1\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"cerc_logger_1\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"cerc_logger_1\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"cerc_logger_1\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"cerc_logger_1\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"cerc_logger_1\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"cerc_logger_1\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"cerc_logger_1\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"cerc_logger_1\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"cerc_logger_1\" END) AS \"12:00 PM\"\nFROM zone_temp_interior_table\nGROUP BY DATE(\"date\");",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "Zone_temp_exterior",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_exterior_to_pseg (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_temp\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_temp\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_temp\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_temp\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_temp\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_temp\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_temp\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_temp\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_temp\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_temp\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_temp\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_temp\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_temp\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_temp\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_temp\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_temp\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_temp\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_temp\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_temp\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_temp\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_temp\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_temp\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_temp\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_temp\" END) AS \"12:00 PM\"\nFROM zone_temp_exterior_table\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target5",
        "Target Data Schema": "date 1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Target Data Description": "date if first column. The 1:00 AM to 12:00 PM are hourly values. The last column values are zero.",
        "Source Data Name": "zone_temp_sp_c",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_sp_c_to_pseg (\"date\", \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\", \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_cooling_sp\" END) AS \"1:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_cooling_sp\" END) AS \"2:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_cooling_sp\" END) AS \"3:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_cooling_sp\" END) AS \"4:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_cooling_sp\" END) AS \"5:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_cooling_sp\" END) AS \"6:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_cooling_sp\" END) AS \"7:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_cooling_sp\" END) AS \"8:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_cooling_sp\" END) AS \"9:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_cooling_sp\" END) AS \"10:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_cooling_sp\" END) AS \"11:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_cooling_sp\" END) AS \"12:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_cooling_sp\" END) AS \"1:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_cooling_sp\" END) AS \"2:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_cooling_sp\" END) AS \"3:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_cooling_sp\" END) AS \"4:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_cooling_sp\" END) AS \"5:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_cooling_sp\" END) AS \"6:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_cooling_sp\" END) AS \"7:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_cooling_sp\" END) AS \"8:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_cooling_sp\" END) AS \"9:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_cooling_sp\" END) AS \"10:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_cooling_sp\" END) AS \"11:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_cooling_sp\" END) AS \"12:00 PM\"\nFROM zone_temp_cooling_sp_table\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target6",
        "Target Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 LOSS_FACTOR",
        "Target Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 are nondecreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, and HIGH_3 = LOW_4. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 are some coefficients.",
        "Source Data Name": "Source6_1",
        "Source Data Schema": "CLASS SEASON_DAY_TYPE HOUR T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3",
        "Source Data Description": "CLASS is class type, SEASON_DAY_TYPE is composed of a month and a day type, where the day type can either be WD (weekday) or WE (weekend). T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3 are nondecreasing temperatures, where T_MAX_1 = T_MIN_2 and T_MAX_2 = T_MIN_3. ",
        "Schema Change Hints": "Extract only the first word as month from SEASON_DAY_TYPE and convert to so that it maps to MONTH in the target schema. YEAR and DAY are not in this schema, so please just ignore them.",
        "5 Samples of Source Data": "RS0, January WD, 1, 9, 22, 22, 35.5, 35.5, 62\nRS0, February WD, 2, 10, 22, 22, 35.5, 35.5, 63\nRS0, March WD, 3, 9, 21, 21, 34.5, 34.5, 65\nRS0, May WD, 4, 10, 21.5, 21.5, 34.5, 35.5, 66\nRS0, December WD, 5, 9, 26.5, 26.5, 66, NULL, NULL",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_6_1_Valid;\n\nCREATE TABLE target_6_1_Valid (\n    PROFILE_CLASS VARCHAR,\n    YEAR INTEGER,\n    MONTH INTEGER,\n    DAY INTEGER,\n    HOUR NUMERIC,\n    LOW_1 NUMERIC,\n    HIGH_1 NUMERIC,\n    LOW_2 NUMERIC,\n    HIGH_2 NUMERIC,\n    LOW_3 NUMERIC,\n    HIGH_3 NUMERIC,\n    LOW_4 NUMERIC,\n    HIGH_4 NUMERIC,\n    CONSTANT NUMERIC,\n    COEFF_1 NUMERIC,\n    COEFF_2 NUMERIC,\n    COEFF_3 NUMERIC,\n    COEFF_4 NUMERIC,\n    LOSS_FACTOR NUMERIC\n);\n\nINSERT INTO target_6_1_Valid (PROFILE_CLASS, MONTH, HOUR, LOW_1, HIGH_1, LOW_2, HIGH_2, LOW_3, HIGH_3)\nSELECT \n    CLASS AS PROFILE_CLASS,\n    CASE \n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Jan' THEN 1\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Feb' THEN 2\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Mar' THEN 3\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Apr' THEN 4\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'May' THEN 5\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Jun' THEN 6\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Jul' THEN 7\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Aug' THEN 8\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Sep' THEN 9\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Oct' THEN 10\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Nov' THEN 11\n        WHEN LEFT(SEASON_DAY_TYPE, 3) = 'Dec' THEN 12\n    END AS MONTH,\n    HOUR,\n    T_MIN_1 AS LOW_1,\n    T_MAX_1 AS HIGH_1,\n    T_MIN_2 AS LOW_2,\n    T_MAX_2 AS HIGH_2,\n    T_MIN_3 AS LOW_3,\n    T_MAX_3 AS HIGH_3\nFROM Source6_1;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target6",
        "Target Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 LOSS_FACTOR",
        "Target Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 are nondecreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, and HIGH_3 = LOW_4. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 are some coefficients.",
        "Source Data Name": "Source6_2",
        "Source Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Source Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Schema Change Hints": "Only insert Hour, Constant, Coefficient, Low_End, and High_End from the first table to the second table. Ignore the others, such as Season, DayType, and Temperature_Range. Map Coefficient only to COEFF_1 only , but not others. Map Low_End to LOW_1 only, but not others. Map High_End to HIGH_4 only, but not others.\n",
        "5 Samples of Source Data": "SPRING, WEEKDAY, 1, 12565.6, -24.96991, 0.0, 73,11\nSUMMER, WEEKDAY, 1, 7987.28886, 37.65052, 73.1121, 120.0\nFALL, WEEKDAY, 2, 15053.43609, -65.39042, 0.0, 69.01332\nWINTER, WEEKEND, 2, 6060.350389, 64.919, 69.01332, 120.0\nSUMMER, WEEKDAY, 3, 12948.32363, -31.82216, 0.0, 73.00999",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_6_2_Valid; \n\nCREATE TABLE target_6_2_Valid (\n    PROFILE_CLASS VARCHAR(10),\n    YEAR INTEGER,\n    MONTH INTEGER,\n    DAY INTEGER,\n    HOUR NUMERIC,\n    LOW_1 NUMERIC,\n    HIGH_1 NUMERIC,\n    LOW_2 NUMERIC,\n    HIGH_2 NUMERIC,\n    LOW_3 NUMERIC,\n    HIGH_3 NUMERIC,\n    LOW_4 NUMERIC,\n    HIGH_4 NUMERIC,\n    CONSTANT NUMERIC,\n    COEFF_1 NUMERIC,\n    COEFF_2 NUMERIC,\n    COEFF_3 NUMERIC,\n    COEFF_4 NUMERIC,\n    LOSS_FACTOR NUMERIC\n);\n\nINSERT INTO target_6_2_Valid (HOUR, LOW_1, HIGH_4, CONSTANT, COEFF_1)\nSELECT\n    Hour AS HOUR,\n    Low_End AS LOW_1,\n    High_End AS HIGH_4,\n    Constant AS CONSTANT,\n    Coefficient AS COEFF_1\nFROM Source6_2;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target7",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source7_1",
        "Source Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 LOSS_FACTOR",
        "Source Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 are non decreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, and HIGH_3 = LOW_4. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 are some coefficients.",
        "Schema Change Hints": "Convert MONTH to Season: Map the first three months (1 to 3) to SPRING; Map the second three months (4 to 6) to SUMMER; Map the third three months (7 to 9) to FALL; Map the fourth three months (10 to 12) to WINTER. Convert Day to DayType: Map 1 to 5 to WEEKDAY; Map 6 to 7 to WEEKEND. High_End is the highest temperature computed by the maximum not NULL value in (HIGH_1, HIGH_2, HIGH_3, HIGH_4). Low_End is the lowest temperature computed by the minimum not NULL value in (LOW_1, LOW_2, LOW_3, LOW_4). Temperature_Range is the highest temperature minus the lowest temperature.",
        "5 Samples of Source Data": "BL 2013.0 1.0 1.0 100.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 27.14508803 -0.16848963 NULL NULL NULL 1.08047231\nBL~2013.0 1.0 1.0 200.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 26.96353506 -0.17599548 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 300.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 27.01939240 -0.18220682 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 400.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 26.48350120 -0.17713677 NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 500.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL 26.18736094 -0.16678692 NULL NULL NULL 1.08047231\n",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_7_1_Valid;\nCREATE TABLE target_7_1_Valid (\n    Season VARCHAR(10),\n    DayType VARCHAR(10),\n    Hour NUMERIC,\n    Temperature_Range NUMERIC,\n    Constant NUMERIC,\n    Coefficient NUMERIC,\n    Low_End NUMERIC,\n    High_End NUMERIC\n);\n\n\nINSERT INTO target_7_1_Valid (Season, DayType, Hour, Temperature_Range, Constant, Coefficient, Low_End, High_End)\nSELECT\n    CASE\n        WHEN MONTH BETWEEN 1 AND 3 THEN 'SPRING'\n        WHEN MONTH BETWEEN 4 AND 6 THEN 'SUMMER'\n        WHEN MONTH BETWEEN 7 AND 9 THEN 'FALL'\n        ELSE 'WINTER'\n    END AS Season,\n    CASE\n        WHEN DAY BETWEEN 1 AND 5 THEN 'WEEKDAY'\n        ELSE 'WEEKEND'\n    END AS DayType,\n    HOUR AS Hour,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4) - LEAST(LOW_1, LOW_2, LOW_3, LOW_4) AS Temperature_Range,\n    CONSTANT AS Constant,\n    COEFF_1 AS Coefficient,\n    LEAST(LOW_1, LOW_2, LOW_3, LOW_4) AS Low_End,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4) AS High_End\nFROM Source7_1;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "y = mx + b; low and hig end temperature"
    },
    {
        "Target Data Name": "Target7",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source7_2",
        "Source Data Schema": "PROFILE_CLASS YEAR MONTH  DAY HOUR LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 HIGH_2 LOW_4 HIGH_4 LOW_5 HIGH_5 CONSTANT COEFF_1 COEFF_2 COEFF_3 COEFF_4 COEFF_5 LOSS_FACTOR",
        "Source Data Description": "PROFILE_CLASS is a class type. YEAR, MONTH, DAY, and HOUR are all numeric types. HOUR is in the range of 1.0 to 24.0. LOW_1 HIGH_1 LOW_2 HIGH_2 LOW_3 HIGH_3 LOW_4 HIGH_4 LOW_5 HIGH_5 are nondecreasing temperatures, where HIGH_1 = LOW_2, HIGH_2 = LOW_3, HIGH_3 = LOW_4, and HIGH_4 = LOW_5. CONSTANT is a constant term, and COEFF_1 COEFF_2 COEFF_3 COEFF_4 COEFF_5 are some coefficients.",
        "Schema Change Hints": "Convert MONTH to Season: Map the first three months (1 to 3) to SPRING; Map the second three months (4 to 6) to SUMMER; Map the third three months (7 to 9) to FALL; Map the fourth three months (10 to 12) to WINTER. Convert Day to DayType: Map 1 to 5 to WEEKDAY; Map 6 to 7 to WEEKEND. High_End is the highest temperature computed by the maximum not NULL value in (HIGH_1, HIGH_2, HIGH_3, HIGH_4, HIGH_5). Low_End is the lowest temperature computed by the minimum not NULL value in (LOW_1, LOW_2, LOW_3, LOW_4, LOW_5). Temperature_Range is the highest temperature minus the lowest temperature.",
        "5 Samples of Source Data": "BL 2013.0 1.0 1.0 100.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 27.14508803 -0.16848963 NULL NULL NULL NULL 1.08047231\nBL~2013.0 1.0 1.0 200.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 26.96353506 -0.17599548 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 300.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 27.01939240 -0.18220682 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 400.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 26.48350120 -0.17713677 NULL NULL NULL NULL 1.08047231\nBL 2013.0 1.0 1.0 500.0 -999.0 99999.0 NULL NULL NULL NULL NULL NULL NULL NULL 26.18736094 -0.16678692 NULL NULL NULL NULL 1.08047231",
        "Ground Truth SQL": "DROP TABLE IF EXISTS target_7_2_Valid;\nCREATE TABLE target_7_2_Valid (\n    Season VARCHAR(10),\n    DayType VARCHAR(10),\n    Hour NUMERIC,\n    Temperature_Range NUMERIC,\n    Constant NUMERIC,\n    Coefficient NUMERIC,\n    Low_End NUMERIC,\n    High_End NUMERIC\n);\n\n\nINSERT INTO target_7_2_Valid (Season, DayType, Hour, Temperature_Range, Constant, Coefficient, Low_End, High_End)\nSELECT\n    CASE\n        WHEN MONTH BETWEEN 1 AND 3 THEN 'SPRING'\n        WHEN MONTH BETWEEN 4 AND 6 THEN 'SUMMER'\n        WHEN MONTH BETWEEN 7 AND 9 THEN 'FALL'\n        ELSE 'WINTER'\n    END AS Season,\n    CASE\n        WHEN DAY BETWEEN 1 AND 5 THEN 'WEEKDAY'\n        ELSE 'WEEKEND'\n    END AS DayType,\n    HOUR AS Hour,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4, HIGH_5) - LEAST(LOW_1, LOW_2, LOW_3, LOW_4, LOW_5) AS Temperature_Range,\n    CONSTANT AS Constant,\n    COEFF_1 AS Coefficient,\n    LEAST(LOW_1, LOW_2, LOW_3, LOW_4, LOW_5) AS Low_End,\n    GREATEST(HIGH_1, HIGH_2, HIGH_3, HIGH_4, HIGH_5) AS High_End\nFROM Source7_2;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target7",
        "Target Data Schema": "Season DayType Hour Temperature_Range Constant Coefficient Low_End High_End",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source7_3",
        "Source Data Schema": "CLASS SEASON_DAY_TYPE HOUR T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3",
        "Source Data Description": "CLASS is class type, SEASON_DAY_TYPE is composed of a month and a day type, where the day type can either be WD (weekday) or WE (weekend). T_MIN_1 T_MAX_1 T_MIN_2 T_MAX_2 T_MIN_3 T_MAX_3 are non decreasing temperatures, where T_MAX_1 = T_MIN_2 and T_MAX_2 = T_MIN_3. ",
        "Schema Change Hints": "Class is not in the target schema so just ignore it. Follow these rules to convert SEASON_DAY_TYPE in the first table to Season and DayType in the second table: split SEASON_DAY_TYPE into two words, the first word maps a month to Season: Map January or February or Match to SPRING; Map April or May or June to SUMMER; Map July or August or September to FALL; Map October or November or December to WINTER ; the second word maps to DayType by expanding \u201cWD\u201d to \u201cWEEKDAY\u201d and \u201cWE\u201d to \u201cWEEKEND\u201d. High_End is the highest temperature computed by the maximum not NULL value in (T_MAX_1, T_MAX_2, T_MAX_3). Low_End is the lowest temperature computed by the minimum not NULL value in (T_MIN_1, T_MIN_2, T_MIN_3). Temperature_Range is the highest temperature minus the lowest temperature.",
        "5 Samples of Source Data": "RS0, January WD, 1, 9, 22, 22, 35.5, 35.5, 62\nRS0, February WD, 2, 10, 22, 22, 35.5, 35.5, 63\nRS0, March WD, 3, 9, 21, 21, 34.5, 34.5, 65\nRS0, May WD, 4, 10, 21.5, 21.5, 34.5, 35.5, 66\nRS0, December WD, 5, 9, 26.5, 26.5, 66, NULL, NULL",
        "Ground Truth SQL": "DROP TABLE IF EXISTS  target_7_3_Valid;\nCREATE TABLE target_7_3_Valid (\n    Season VARCHAR(10),\n    DayType VARCHAR(10),\n    Hour INT,\n    Temperature_Range NUMERIC,\n    Constant NUMERIC,\n    Coefficient NUMERIC,\n    Low_End NUMERIC,\n    High_End NUMERIC\n);\n\n\nINSERT INTO target_7_3_Valid (Season, DayType, Hour, Temperature_Range, Low_End, High_End)\nSELECT\n    CASE\n        WHEN SEASON_DAY_TYPE LIKE 'January%' OR SEASON_DAY_TYPE LIKE 'February%' OR SEASON_DAY_TYPE LIKE 'March%' THEN 'SPRING'\n        WHEN SEASON_DAY_TYPE LIKE 'April%' OR SEASON_DAY_TYPE LIKE 'May%' OR SEASON_DAY_TYPE LIKE 'June%' THEN 'SUMMER'\n        WHEN SEASON_DAY_TYPE LIKE 'July%' OR SEASON_DAY_TYPE LIKE 'August%' OR SEASON_DAY_TYPE LIKE 'September%' THEN 'FALL'\n        ELSE 'WINTER'\n    END AS Season,\n    CASE\n        WHEN SEASON_DAY_TYPE LIKE '%WD' THEN 'WEEKDAY'\n        ELSE 'WEEKEND'\n    END AS DayType,\n    HOUR AS Hour,\n    GREATEST(T_MAX_1, T_MAX_2, T_MAX_3) - LEAST(T_MIN_1, T_MIN_2, T_MIN_3) AS Temperature_Range,\n    LEAST(T_MIN_1, T_MIN_2, T_MIN_3) AS Low_End,\n    GREATEST(T_MAX_1, T_MAX_2, T_MAX_3) AS High_End\nFROM Source7_3;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target8",
        "Target Data Schema": "Hour January February March April May June July August September October November December",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source8_1",
        "Source Data Schema": "date, cerc_logger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": "From date timestamp, for each month should get aggregated . ",
        "5 Samples of Source Data": "AVG instead MAX",
        "Ground Truth SQL": "INSERT INTO zone_temp_interior_to_JCLoadtable (\"Hour\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nSELECT\n    EXTRACT(HOUR FROM \"date\") AS \"Hour\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"January\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"February\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"March\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"April\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"May\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"June\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"July\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"August\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"September\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"October\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"November\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"December\"\nFROM zone_temp_interior_table\nGROUP BY EXTRACT(HOUR FROM \"date\")\nORDER BY \"Hour\";",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "Hour value are 1,2,...24"
    },
    {
        "Target Data Name": "Target8",
        "Target Data Schema": "Hour January February March April May June July August September October November December",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source8_2",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_exterior_to_JCLoadtable (\"Hour\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nSELECT\n    EXTRACT(HOUR FROM \"date\") AS \"Hour\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 1 THEN \"zone_016_temp\" END) AS \"January\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 2 THEN \"zone_016_temp\" END) AS \"February\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 3 THEN \"zone_016_temp\" END) AS \"March\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 4 THEN \"zone_016_temp\" END) AS \"April\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 5 THEN \"zone_016_temp\" END) AS \"May\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 6 THEN \"zone_016_temp\" END) AS \"June\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 7 THEN \"zone_016_temp\" END) AS \"July\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 8 THEN \"zone_016_temp\" END) AS \"August\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 9 THEN \"zone_016_temp\" END) AS \"September\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 10 THEN \"zone_016_temp\" END) AS \"October\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 11 THEN \"zone_016_temp\" END) AS \"November\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 12 THEN \"zone_016_temp\" END) AS \"December\"\nFROM zone_temp_exterior_table\nGROUP BY EXTRACT(HOUR FROM \"date\")\nORDER BY \"Hour\";",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "pivoting example"
    },
    {
        "Target Data Name": "Target8",
        "Target Data Schema": "Hour January February March April May June July August September October November December",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Source8_3",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_sp_c_to_JCLoadtable (\"Hour\", \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\")\nSELECT\n    EXTRACT(HOUR FROM \"date\") AS \"Hour\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 1 THEN \"zone_016_cooling_sp\" END) AS \"January\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 2 THEN \"zone_016_cooling_sp\" END) AS \"February\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 3 THEN \"zone_016_cooling_sp\" END) AS \"March\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 4 THEN \"zone_016_cooling_sp\" END) AS \"April\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 5 THEN \"zone_016_cooling_sp\" END) AS \"May\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 6 THEN \"zone_016_cooling_sp\" END) AS \"June\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 7 THEN \"zone_016_cooling_sp\" END) AS \"July\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 8 THEN \"zone_016_cooling_sp\" END) AS \"August\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 9 THEN \"zone_016_cooling_sp\" END) AS \"September\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 10 THEN \"zone_016_cooling_sp\" END) AS \"October\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 11 THEN \"zone_016_cooling_sp\" END) AS \"November\",\n    MAX(CASE WHEN EXTRACT(MONTH FROM \"date\") = 12 THEN \"zone_016_cooling_sp\" END) AS \"December\"\nFROM zone_temp_cooling_sp_table\nGROUP BY EXTRACT(HOUR FROM \"date\")\nORDER BY \"Hour\";\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Orange and Rockland",
        "Source Data Schema": "DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "Strata_ID is  ID, Strata is Strata name, DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO orangerocklandtosmecotable (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"dt_strata\",\n    \"pct_hourly_0100\", \"pct_hourly_0200\", \"pct_hourly_0300\", \"pct_hourly_0400\", \"pct_hourly_0500\",\n    \"pct_hourly_0600\", \"pct_hourly_0700\", \"pct_hourly_0800\", \"pct_hourly_0900\", \"pct_hourly_1000\",\n    \"pct_hourly_1100\", \"pct_hourly_1200\", \"pct_hourly_1300\", \"pct_hourly_1400\", \"pct_hourly_1500\",\n    \"pct_hourly_1600\", \"pct_hourly_1700\", \"pct_hourly_1800\", \"pct_hourly_1900\", \"pct_hourly_2000\",\n    \"pct_hourly_2100\", \"pct_hourly_2200\", \"pct_hourly_2300\", \"pct_hourly_2400\"\nFROM orangeandrocklandtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": "First three columns would have null values"
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "COMED",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": "CST is dayofweek, date. 1:00, 2:00 to 20:00:00 have hourly values of electricity load.",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO comedtosmeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    TO_DATE(\"cst\", 'Dy MM/DD/YYYY'),\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\n    \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\",\n    \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\nFROM comedtable;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Zone_temp_interior",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_interior_to_smeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"cerc_logger_1\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"cerc_logger_1\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"cerc_logger_1\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"cerc_logger_1\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"cerc_logger_1\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"cerc_logger_1\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"cerc_logger_1\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"cerc_logger_1\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"cerc_logger_1\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"cerc_logger_1\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"cerc_logger_1\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"cerc_logger_1\" END) AS \"12:00 PM\"\nFROM zone_temp_interior_table\nGROUP BY DATE(\"date\");",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Zone_temp_exterior",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_exterior_to_smeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_temp\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_temp\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_temp\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_temp\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_temp\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_temp\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_temp\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_temp\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_temp\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_temp\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_temp\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_temp\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_temp\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_temp\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_temp\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_temp\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_temp\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_temp\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_temp\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_temp\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_temp\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_temp\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_temp\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_temp\" END) AS \"12:00 PM\"\nFROM zone_temp_exterior_table\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "zone_temp_sp_c",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_sp_c_to_smeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_cooling_sp\" END) AS \"1:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_cooling_sp\" END) AS \"2:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_cooling_sp\" END) AS \"3:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_cooling_sp\" END) AS \"4:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_cooling_sp\" END) AS \"5:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_cooling_sp\" END) AS \"6:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_cooling_sp\" END) AS \"7:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_cooling_sp\" END) AS \"8:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_cooling_sp\" END) AS \"9:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_cooling_sp\" END) AS \"10:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_cooling_sp\" END) AS \"11:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_cooling_sp\" END) AS \"12:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_cooling_sp\" END) AS \"1:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_cooling_sp\" END) AS \"2:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_cooling_sp\" END) AS \"3:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_cooling_sp\" END) AS \"4:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_cooling_sp\" END) AS \"5:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_cooling_sp\" END) AS \"6:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_cooling_sp\" END) AS \"7:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_cooling_sp\" END) AS \"8:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_cooling_sp\" END) AS \"9:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_cooling_sp\" END) AS \"10:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_cooling_sp\" END) AS \"11:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_cooling_sp\" END) AS \"12:00 PM\"\nFROM zone_temp_cooling_sp_table\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "PSEG(14wh file)",
        "Source Data Schema": "date,1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO psegtosmeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"date\",\n    \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\",\n    \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\"\nFROM pseg14whtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "NHEC",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nhectosmeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"Date\",\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM nhectable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "NGRID: NIMO(stlght file)",
        "Source Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nimotosmeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"Date\",\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM nimotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Source Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nstartosmeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\" FROM nstartable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "SMECO: R1.csv",
        "Target Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "DEOK-RS6_Average_Hourly_Demand",
        "Source Data Schema": "Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00 ",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO deoktosmeco (\"date\", \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\")\nSELECT\n    \"Date\",    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\n     FROM deoktable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Orange and Rockland",
        "Source Data Schema": "Strata_ID        Strata        DT_STRATA        DOW        PCT_HOURLY_0100        PCT_HOURLY_0200        PCT_HOURLY_0300        PCT_HOURLY_0400        PCT_HOURLY_0500        PCT_HOURLY_0600        PCT_HOURLY_0700        PCT_HOURLY_0800        PCT_HOURLY_0900        PCT_HOURLY_1000        PCT_HOURLY_1100        PCT_HOURLY_1200        PCT_HOURLY_1300        PCT_HOURLY_1400        PCT_HOURLY_1500        PCT_HOURLY_1600        PCT_HOURLY_1700        PCT_HOURLY_1800        PCT_HOURLY_1900        PCT_HOURLY_2000        PCT_HOURLY_2100        PCT_HOURLY_2200        PCT_HOURLY_2300        PCT_HOURLY_2400        PCT_HOURLY_2500",
        "Source Data Description": "Strata_ID is  ID, Strata is Strata name, DT_STRATA is date, DOW is Day Of Week, PCT_HOURLY_0100 and rest are hourly values for the strata ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO orangerocklandtonstartable (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"dt_strata\",\n    \"pct_hourly_0100\", \"pct_hourly_0200\", \"pct_hourly_0300\", \"pct_hourly_0400\", \"pct_hourly_0500\",\n    \"pct_hourly_0600\", \"pct_hourly_0700\", \"pct_hourly_0800\", \"pct_hourly_0900\", \"pct_hourly_1000\",\n    \"pct_hourly_1100\", \"pct_hourly_1200\", \"pct_hourly_1300\", \"pct_hourly_1400\", \"pct_hourly_1500\",\n    \"pct_hourly_1600\", \"pct_hourly_1700\", \"pct_hourly_1800\", \"pct_hourly_1900\", \"pct_hourly_2000\",\n    \"pct_hourly_2100\", \"pct_hourly_2200\", \"pct_hourly_2300\", \"pct_hourly_2400\"\nFROM orangeandrocklandtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "COMED",
        "Source Data Schema": "CST 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO comedtonstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    TO_DATE(\"cst\", 'Dy MM/DD/YYYY'),\n    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\",\n    \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\",\n    \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\nFROM comedtable;\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "SMECO (R1)",
        "Source Data Schema": "date value1 value2 value3 value4 value5 value6 value7 value8 value9 value10 value11 value12 value13 value14 value15 value16 value17 value18 value19 value20 value21 value22 value23 value24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO smecotonstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"date\",\n    \"value1\", \"value2\", \"value3\", \"value4\", \"value5\", \"value6\", \"value7\", \"value8\", \"value9\", \"value10\", \"value11\", \"value12\", \"value13\", \"value14\", \"value15\", \"value16\", \"value17\", \"value18\", \"value19\", \"value20\", \"value21\", \"value22\", \"value23\", \"value24\"\nFROM smecotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "PSEG(14wh file)",
        "Source Data Schema": "date,1:00 AM 2:00 AM 3:00 AM 4:00 AM 5:00 AM 6:00 AM 7:00 AM 8:00 AM 9:00 AM 10:00 AM 11:00 AM 12:00 AM 1:00 PM 2:00 PM 3:00 PM 4:00 PM 5:00 PM 6:00 PM 7:00 PM 8:00 PM 9:00 PM 10:00 PM 11:00 PM 12:00 PM DSL",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO psegtonstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"date\",\n    \"1:00 AM\", \"2:00 AM\", \"3:00 AM\", \"4:00 AM\", \"5:00 AM\", \"6:00 AM\", \"7:00 AM\", \"8:00 AM\", \"9:00 AM\", \"10:00 AM\", \"11:00 AM\", \"12:00 AM\",\n    \"1:00 PM\", \"2:00 PM\", \"3:00 PM\", \"4:00 PM\", \"5:00 PM\", \"6:00 PM\", \"7:00 PM\", \"8:00 PM\", \"9:00 PM\", \"10:00 PM\", \"11:00 PM\", \"12:00 PM\"\nFROM pseg14whtable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "NHEC",
        "Source Data Schema": "Date Profile 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nhectonstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"Date\",\n    \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"\nFROM nhectable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "NGRID: NIMO(stlght file)",
        "Source Data Schema": "date, Hour 1 Hour 2 Hour 3 Hour 4 Hour 5 Hour 6 Hour 7 Hour 8 Hour 9 Hour 10 Hour 11 Hour 12 Hour 13 Hour 14 Hour 15 Hour 16 Hour 17 Hour 18 Hour 19 Hour 20 Hour 21 Hour 22 Hour 23 Hour 24",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO nimotonstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"Date\",\n    \"Hour 1\", \"Hour 2\", \"Hour 3\", \"Hour 4\", \"Hour 5\", \"Hour 6\", \"Hour 7\", \"Hour 8\", \"Hour 9\", \"Hour 10\", \"Hour 11\", \"Hour 12\", \"Hour 13\", \"Hour 14\", \"Hour 15\", \"Hour 16\", \"Hour 17\", \"Hour 18\", \"Hour 19\", \"Hour 20\", \"Hour 21\", \"Hour 22\", \"Hour 23\", \"Hour 24\"\nFROM nimotable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "DEOK-RS6_Average_Hourly_Demand",
        "Source Data Schema": "Segment Date 1:00 2:00 3:00 4:00 5:00 6:00 7:00 8:00 9:00 10:00 11:00 12:00 13:00 14:00 15:00 16:00 17:00 18:00 19:00 20:00 21:00 22:00 23:00 24:00:00",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO deoktonstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    \"Date\",    \"1:00\", \"2:00\", \"3:00\", \"4:00\", \"5:00\", \"6:00\", \"7:00\", \"8:00\", \"9:00\", \"10:00\", \"11:00\", \"12:00\", \"13:00\", \"14:00\", \"15:00\", \"16:00\", \"17:00\", \"18:00\", \"19:00\", \"20:00\", \"21:00\", \"22:00\", \"23:00\", \"24:00\"\n     FROM deoktable;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Zone_temp_interior",
        "Source Data Schema": "date, cerc_templogger_1",
        "Source Data Description": "Date is a timestamp of every 10 minutes. The cerc_templogger is zone temperature of interior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_interior_to_nstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"cerc_logger_1\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"cerc_logger_1\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"cerc_logger_1\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"cerc_logger_1\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"cerc_logger_1\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"cerc_logger_1\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"cerc_logger_1\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"cerc_logger_1\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"cerc_logger_1\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"cerc_logger_1\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"cerc_logger_1\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"cerc_logger_1\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"cerc_logger_1\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"cerc_logger_1\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"cerc_logger_1\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"cerc_logger_1\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"cerc_logger_1\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"cerc_logger_1\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"cerc_logger_1\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"cerc_logger_1\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"cerc_logger_1\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"cerc_logger_1\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"cerc_logger_1\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"cerc_logger_1\" END) AS \"12:00 PM\"\nFROM zone_temp_interior_table\nGROUP BY DATE(\"date\");",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "Zone_temp_exterior",
        "Source Data Schema": "date, zone_16_temp",
        "Source Data Description": "Date is a timestamp of every minute. The zone_16_temp is zone temperature of exterior zone. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_exterior_to_nstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_temp\" END) AS \"1:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_temp\" END) AS \"2:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_temp\" END) AS \"3:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_temp\" END) AS \"4:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_temp\" END) AS \"5:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_temp\" END) AS \"6:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_temp\" END) AS \"7:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_temp\" END) AS \"8:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_temp\" END) AS \"9:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_temp\" END) AS \"10:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_temp\" END) AS \"11:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_temp\" END) AS \"12:00 AM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_temp\" END) AS \"1:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_temp\" END) AS \"2:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_temp\" END) AS \"3:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_temp\" END) AS \"4:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_temp\" END) AS \"5:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_temp\" END) AS \"6:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_temp\" END) AS \"7:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_temp\" END) AS \"8:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_temp\" END) AS \"9:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_temp\" END) AS \"10:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_temp\" END) AS \"11:00 PM\",\n    MAX(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_temp\" END) AS \"12:00 PM\"\nFROM zone_temp_exterior_table\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "EVERSOURCE-NSTAR:2014-load-profile-ema",
        "Target Data Schema": "Date Hr 1 Hr 2 Hr 3 Hr 4 Hr 5 Hr 6 Hr 7 Hr 8 Hr 9 Hr 10 Hr 11 Hr 12 Hr 13 Hr 14 Hr 15 Hr 16 Hr 17 Hr 18 Hr 19 Hr 20 Hr 21 Hr 22 Hr 23 Hr 24",
        "Target Data Description": "Season can be one of SPRING, SUMMER, FALL, WINTER. Datatype can be either WEEKDAY or WEEKEND. Low_End is the lowest temperature. High_End is the highest temperature.",
        "Source Data Name": "zone_temp_sp_c",
        "Source Data Schema": "date, zone_016_cooling_sp",
        "Source Data Description": "Date is a timestamp of every 5 minute. The zone_16_coooling_sp is Cooling temperature setpoint of Zone 016",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": "INSERT INTO zone_temp_sp_c_to_nstar (\"Date\", \"Hr 1\", \"Hr 2\", \"Hr 3\", \"Hr 4\", \"Hr 5\", \"Hr 6\", \"Hr 7\", \"Hr 8\", \"Hr 9\", \"Hr 10\", \"Hr 11\", \"Hr 12\", \"Hr 13\", \"Hr 14\", \"Hr 15\", \"Hr 16\", \"Hr 17\", \"Hr 18\", \"Hr 19\", \"Hr 20\", \"Hr 21\", \"Hr 22\", \"Hr 23\", \"Hr 24\")\nSELECT\n    DATE(\"date\") AS \"date\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 1 THEN \"zone_016_cooling_sp\" END) AS \"1:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 2 THEN \"zone_016_cooling_sp\" END) AS \"2:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 3 THEN \"zone_016_cooling_sp\" END) AS \"3:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 4 THEN \"zone_016_cooling_sp\" END) AS \"4:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 5 THEN \"zone_016_cooling_sp\" END) AS \"5:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 6 THEN \"zone_016_cooling_sp\" END) AS \"6:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 7 THEN \"zone_016_cooling_sp\" END) AS \"7:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 8 THEN \"zone_016_cooling_sp\" END) AS \"8:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 9 THEN \"zone_016_cooling_sp\" END) AS \"9:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 10 THEN \"zone_016_cooling_sp\" END) AS \"10:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 11 THEN \"zone_016_cooling_sp\" END) AS \"11:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 12 THEN \"zone_016_cooling_sp\" END) AS \"12:00 AM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 13 THEN \"zone_016_cooling_sp\" END) AS \"1:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 14 THEN \"zone_016_cooling_sp\" END) AS \"2:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 15 THEN \"zone_016_cooling_sp\" END) AS \"3:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 16 THEN \"zone_016_cooling_sp\" END) AS \"4:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 17 THEN \"zone_016_cooling_sp\" END) AS \"5:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 18 THEN \"zone_016_cooling_sp\" END) AS \"6:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 19 THEN \"zone_016_cooling_sp\" END) AS \"7:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 20 THEN \"zone_016_cooling_sp\" END) AS \"8:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 21 THEN \"zone_016_cooling_sp\" END) AS \"9:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 22 THEN \"zone_016_cooling_sp\" END) AS \"10:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 23 THEN \"zone_016_cooling_sp\" END) AS \"11:00 PM\",\n    SUM(CASE WHEN EXTRACT(HOUR FROM \"date\") = 0 THEN \"zone_016_cooling_sp\" END) AS \"12:00 PM\"\nFROM zone_temp_cooling_sp_table\nGROUP BY DATE(\"date\");\n",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target11",
        "Target Data Schema": "datetime HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "Each value of the datatime attribute includes a date in the format of yyyy-mm-dd and the time in the format of hh:00:00, which specifies the hour. An example of a datetime value is 2013-01-01 00:00:00. Most of attributes except datetime are of float types.",
        "Source Data Name": "Source11_1",
        "Source Data Schema": "eiaid, time, raw_count, scaled_unit_count, net_site_electricity_kwh, electricity_heating_kwh, electricity_central_system_heating_kwh, electricity_cooling_kwh electricity_central_system_cooling_kwh electricity_interior_lighting_kwh ,  electricity_exterior_lighting_kwh, electricity_fans_heating_kwh, electricity_fans_cooling_kwh, electricity_pumps_heating_kwh, electricity_central_system_pumps_heating_kwh, electricity_pumps_cooling_kwh, electricity_central_system_pumps_cooling_kwh, electricity_water_systems_kwh, electricity_refrigerator_kwh, electricity_clothes_washer_kwh, electricity_clothes_dryer_kwh, electricity_cooking_range_kwh, electricity_dishwasher_kwh, electricity_plug_loads_kwh, electricity_house_fan_kwh, electricity_range_fan_kwh, electricity_bath_fan_kwh, electricity_ceiling_fan_kwh, electricity_pool_heater_kwh, electricity_pool_pump_kwh, electricity_hot_tub_heater_kwh, electricity_hot_tub_pump_kwh",
        "Source Data Description": "several columns need to be summed up to map to a target attribute",
        "Schema Change Hints": "HVAC should map to sum of 'electricity_heating_kwh', 'Electricity_central_system_heating_kwh', 'electricity_cooling_kwh', 'Electricity_central_system_cooling_kwh', 'electricity_fans_heating_kwh', 'electricity_fans_cooling_kwh', 'electricity_pumps_heating_kwh', 'electricity_central_system_pumps_heating_kwh', 'electricity_pumps_cooling_kwh', 'Electricity_central_system_pumps_cooling_kwh', 'electricity_house_fan_kwh', 'electricity_range_fan_kwh', 'electricity_bath_fan_kwh'\u201d. Water_heating should map to \u2018electricity_water_systems_kwh\u2019. Pool_spa_pumps should be mapped to electricity_pool_pump_kwh', 'electricity_hot_tub_pump_kwh. Pool_spa_heaters should be mapped to electricity_pool_heater_kwh', 'electricity_hot_tub_heater_kwh. Lighting should map to 'electricity_interior_lighting_kwh', and 'electricity_exterior_lighting_kwh' only. Total should be mapped to net_site_electricity_kwh.",
        "5 Samples of Source Data": "4110\t1/1/12 0:15\t541079\t2991885.1\t725805.7599\t170365.3215\t12237.88533\t10173.73547\t34.21563194\t39205.13808\t7653.40551\t96214.55964\t1873.76192\t19.49044138\t356.2631311\t0\t36.81847325\t1745.742562\t40159.03534\t1058.877211\t25403.5408\t4560.913747\t2750.422583\t246207.2847\t0\t169.5248655\t1366.53176\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 0:30\t541079\t2991885.1\t722554.2831\t160103.2925\t10935.92883\t9711.168898\t37.86693016\t39205.13808\t7653.40551\t91366.3144\t1797.149517\t17.30827445\t289.4441454\t0\t39.9232761\t9110.146486\t40159.03534\t2015.263437\t30236.85493\t4560.913747\t3368.781329\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 0:45\t541079\t2991885.1\t716130.2572\t149229.6223\t10279.38991\t9061.367217\t36.14018945\t39205.13808\t7653.40551\t85162.82118\t1780.246698\t16.01782697\t268.8654444\t0\t43.81686068\t10928.70128\t40159.03534\t1012.157917\t42020.76348\t4560.913747\t2765.506754\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 1:00\t541079\t2991885.1\t671242.2494\t139390.4937\t9711.063783\t8148.226778\t34.61219386\t39205.13808\t7653.40551\t79591.76375\t1713.909978\t14.95129313\t251.1661129\t0\t44.0454923\t12663.48761\t40159.03534\t1784.424788\t13567.96229\t4560.913747\t801.3015034\t246207.2847\t0\t178.0227522\t1347.748753\t14712.44114\t51.2034934\t939.1945122\t2188.961101\t2656.025943\n4110\t1/1/12 1:15\t541079\t2991885.1\t589531.7712\t116364.942\t8094.490046\t7864.6224\t40.77766032\t23523.08285\t4592.043306\t67394.69316\t1885.288338\t12.82276972\t219.448326\t0\t45.01302594\t10212.27534\t39155.05946\t587.2272891\t14589.76377\t4560.913747\t430.0967761\t227741.7383\t0\t178.0227522\t1347.748753\t13609.00806\t51.2034934\t939.1945122\t2644.994663\t3209.364682",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target11_1_Valid;\n\n\nCREATE TABLE Target11_1_Valid (\n    datetime TIMESTAMP,\n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);                  INSERT INTO Target11_1_Valid (datetime, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT \n    time AS datetime,\n    electricity_heating_kwh + electricity_central_system_heating_kwh + electricity_cooling_kwh + electricity_central_system_cooling_kwh + electricity_fans_heating_kwh + electricity_fans_cooling_kwh + electricity_pumps_heating_kwh + electricity_central_system_pumps_heating_kwh + electricity_pumps_cooling_kwh + electricity_central_system_pumps_cooling_kwh + electricity_house_fan_kwh + electricity_range_fan_kwh + electricity_bath_fan_kwh AS HVAC,\n    electricity_water_systems_kwh AS water_heating,\n    electricity_refrigerator_kwh AS refrigerator,\n    electricity_clothes_washer_kwh AS clothes_washer,\n    electricity_clothes_dryer_kwh AS clothes_dryer,\n    electricity_dishwasher_kwh AS dishwasher,\n    electricity_cooking_range_kwh AS cooking_range,\n    electricity_pool_pump_kwh + electricity_hot_tub_pump_kwh AS pool_spa_pumps,\n    electricity_interior_lighting_kwh AS interior_lighting,\n    electricity_exterior_lighting_kwh AS exterior_lighting,\n    electricity_interior_lighting_kwh + electricity_exterior_lighting_kwh AS lighting,\n    electricity_plug_loads_kwh AS plug,\n    electricity_pool_heater_kwh + electricity_hot_tub_heater_kwh AS pool_spa_heater\nFROM Source11_1;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target11",
        "Target Data Schema": "datetime HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "Each value of the datatime attribute includes a date in the format of yyyy-mm-dd and the time in the format of hh:00:00, which specifies the hour. An example of a datetime value is 2013-01-01 00:00:00. Most of attributes except datetime are of float types.",
        "Source Data Name": "Source11_2",
        "Source Data Schema": "local_15min        air1_sum        air1_count        air2_sum        air2_count        air3_sum        air3_count        airwindowunit1_sum        airwindowunit1_count        aquarium1_sum        aquarium1_count        bathroom1_sum        bathroom1_count        bathroom2_sum        bathroom2_count        bedroom1_sum        bedroom1_count        bedroom2_sum        bedroom2_count        bedroom3_sum        bedroom3_count        bedroom4_sum        bedroom4_count        bedroom5_sum        bedroom5_count        battery1_sum        battery1_count        car1_sum        car1_count        car2_sum        car2_count        circpump1_sum        circpump1_count        clotheswasher1_sum        clotheswasher1_count        clotheswasher_dryg1_sum        clotheswasher_dryg1_count        diningroom1_sum        diningroom1_count        diningroom2_sum        diningroom2_count        dishwasher1_sum        dishwasher1_count        disposal1_sum        disposal1_count        drye1_sum        drye1_count        dryg1_sum        dryg1_count        freezer1_sum        freezer1_count        furnace1_sum        furnace1_count        furnace2_sum        furnace2_count        garage1_sum        garage1_count        garage2_sum        garage2_count        grid_sum        grid_count        heater1_sum        heater1_count        heater2_sum        heater2_count        heater3_sum        heater3_count        housefan1_sum        housefan1_count        icemaker1_sum        icemaker1_count        jacuzzi1_sum        jacuzzi1_count        kitchen1_sum        kitchen1_count        kitchen2_sum        kitchen2_count        kitchenapp1_sum        kitchenapp1_count        kitchenapp2_sum        kitchenapp2_count        lights_plugs1_sum        lights_plugs1_count        lights_plugs2_sum        lights_plugs2_count        lights_plugs3_sum        lights_plugs3_count        lights_plugs4_sum        lights_plugs4_count        lights_plugs5_sum        lights_plugs5_count        lights_plugs6_sum        lights_plugs6_count        livingroom1_sum        livingroom1_count        livingroom2_sum        livingroom2_count        microwave1_sum        microwave1_count        office1_sum        office1_count        outsidelights_plugs1_sum        outsidelights_plugs1_count        outsidelights_plugs2_sum        outsidelights_plugs2_count        oven1_sum        oven1_count        oven2_sum        oven2_count        pool1_sum        pool1_count        pool2_sum        pool2_count        poollight1_sum        poollight1_count        poolpump1_sum        poolpump1_count        pump1_sum        pump1_count        range1_sum        range1_count        refrigerator1_sum        refrigerator1_count        refrigerator2_sum        refrigerator2_count        security1_sum        security1_count        sewerpump1_sum        sewerpump1_count        shed1_sum        shed1_count        solar_sum        solar_count        solar2_sum        solar2_count        sprinkler1_sum        sprinkler1_count        sumppump1_sum        sumppump1_count        utilityroom1_sum        utilityroom1_count        venthood1_sum        venthood1_count        waterheater1_sum        waterheater1_count        waterheater2_sum        waterheater2_count        wellpump1_sum        wellpump1_count        winecooler1_sum        winecooler1_count",
        "Source Data Description": "several columns need to be summed up to map to a target attribute. attributes with \"_count\" can be ignored. \n\n",
        "Schema Change Hints": "HVAC is ['airwindowunit1', 'furnace1', 'furnace2', 'heater1', 'housefan1']\nwater_heating is ['waterheater1', 'waterheater2'] interior_lighting is ['lights_plugs1','lights_plugs2','lights_plugs3','lights_plugs4','lights_plugs5','lights_plugs6']\nexterior_lighting is ['outsidelights_plugs1','outsidelights_plugs2','poollight1']\nlighting is interior_lighting + exterior_lighting.",
        "5 Samples of Source Data": "12/31/11 23:00                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0        0.524        2                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0                0        -0.008        2                0                0                0                0                0                0                0                0                0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target11_2_Valid;\n\n\nCREATE TABLE Target11_2_Valid (\n    datetime TIMESTAMP,\n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);\n\n\nINSERT INTO Target11_2_Valid (datetime, HVAC, water_heating, refrigerator, clothes_washer,\n    clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting,\n    exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT\n    local_15min,\n    airwindowunit1_sum + furnace1_sum + furnace2_sum + heater1_sum + housefan1_sum,\n    waterheater1_sum + waterheater2_sum,\n    refrigerator1_sum + refrigerator2_sum,\n    clotheswasher1_sum,\n    clotheswasher_dryg1_sum,\n    dishwasher1_sum,\n    oven1_sum + oven2_sum,\n    pool1_sum + pool2_sum + poollight1_sum,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum +\n        lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum,\n    outsidelights_plugs1_sum + outsidelights_plugs2_sum + poollight1_sum,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum +\n        lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum,\n    lights_plugs1_sum + lights_plugs2_sum + lights_plugs3_sum +\n        lights_plugs4_sum + lights_plugs5_sum + lights_plugs6_sum,\n    pool1_sum + pool2_sum + poolpump1_sum\nFROM Source11_2;",
        "Prompt-3 Results": 0,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target11",
        "Target Data Schema": "datetime HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "Each value of the datatime attribute includes a date in the format of yyyy-mm-dd and the time in the format of hh:00:00, which specifies the hour. An example of a datetime value is 2013-01-01 00:00:00. Most of attributes except datetime are of float types.",
        "Source Data Name": "Source11_3",
        "Source Data Schema": "site,timestamp,\"TOTAL BLDG WHS [emon ch1,2]\",\"AC COMPRESSOR WHS [emon ch3,4]\",\"AIR HANDLER WHS [emon ch5,6]\",\"WATER HEATER WHS [emon ch7,8]\",DRYER WHS (1-CT) [emon ch9],RANGE WHS (1-CT) [emon ch10],DISH WASHER WHS [emon ch11],Primary Fridge WHS [emon ch12],2nd Fridge WHS [emon ch13],SPARE1 WHS (1-CT) [emon ch14],SPARE2 WHS (1-CT) [xpod chA-1],SPARE3 WHS (1-CT) [xpod chA-2],\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\",\"SPARE4 WHS (2-CTs) [xpod chA-5,6]\",\"Minisplit WHS (2-CTs) [xpod chA-7,8]\",\"Dryer WHS (2-CTs) [xpod chA-9,10]\",Calculated Unmeasured loads (Whr),Calculated Energy Use (Whr),\"Future use- WHS (2-CTs)[xpod chB-3,4]\",\"Future use- WHS (2-CTs)[xpod chB-5,6]\",eMonitor Temp (deg. F),Wattsup Cumulative Ent.Ctr (WHS),Wattsup Energy Ent.Ctr (WHS),Wattsup Cumulative Washer (WHS),Wattsup Energy Washer (WHS),LaCrosse Device Temp (deg. F),PointSix Temp (deg. F),PointSix Humidity (%),HOBO LOGGER TEMP (deg. F),HOBO LOGGER RH (%)",
        "Source Data Description": "timestamp is for every hour time.  Most of the attributes are of the float type, except site and timestamp. No attributes in the source table corresponds to interior_lighting, exterior_lighting, clothes_washer, and Pool/spa_heater in the target table, but we still need these attributes in the transformed table with values being 0. some columns need to be sumed up to map to a target attribute.",
        "Schema Change Hints": "HVAC corresponds to the sum of \"AC COMPRESSOR WHS [emon ch3,4]\", \"AIR HANDLER WHS [emon ch5,6]\", and \"Minisplit WHS (2-CTs) [xpod chA-7,8]\". water_heating corresponds to \"WATER HEATER WHS [emon ch7,8]\". clothes_dryer corresponds to \"DRYER WHS (1-CT) [emon ch9]\" and \"Dryer WHS (2-CTs) [xpod chA-9,10]\". \"Cooking range corresponds to \"RANGE WHS (1-CT) [emon ch10]\". Refrigerator corresponds to \"Primary Fridge WHS [emon ch12]\" and \"2nd Fridge WHS [emon ch13]\". Dish_washer corresponds to \"DISH WASHER WHS [emon ch11]\". pool_spa_pumps corresponds to \"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\".",
        "5 Samples of Source Data": "36        8/22/12 16:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 17:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 18:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 19:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0\n36        8/22/12 20:00        322.0        323.0        324.0        325.0        326.0        327.0        328.0        329.0        330.0        331.0        332.0        333.0        334.0        335.0        336.0        337.0        74.9        319.0        320.0        321.0        322.0        323.0        324.0        325.0        326.0        327.0        75.9        53.0        327.0        327.0",
        "Ground Truth SQL": "DROP TABLE IF EXISTS Target11_3_Valid;\nCREATE TABLE Target11_3_Valid (\n    datetime TIMESTAMP,\n    HVAC NUMERIC,\n    water_heating NUMERIC,\n    refrigerator NUMERIC,\n    clothes_washer NUMERIC,\n    clothes_dryer NUMERIC,\n    dishwasher NUMERIC,\n    cooking_range NUMERIC,\n    pool_spa_pumps NUMERIC,\n    interior_lighting NUMERIC,\n    exterior_lighting NUMERIC,\n    lighting NUMERIC,\n    plug NUMERIC,\n    pool_spa_heater NUMERIC\n);\n\nINSERT INTO Target11_3_Valid (datetime, HVAC, water_heating, refrigerator, clothes_washer, clothes_dryer, dishwasher, cooking_range, pool_spa_pumps, interior_lighting, exterior_lighting, lighting, plug, pool_spa_heater)\nSELECT\n    timestamp,\n    COALESCE(\"AC COMPRESSOR WHS [emon ch3,4]\", 0) + COALESCE(\"AIR HANDLER WHS [emon ch5,6]\", 0) + COALESCE(\"Minisplit WHS (2-CTs) [xpod chA-7,8]\", 0) AS HVAC,\n    COALESCE(\"WATER HEATER WHS [emon ch7,8]\", 0) AS water_heating,\n    COALESCE(\"Primary Fridge WHS [emon ch12]\", 0) + COALESCE(\"2nd Fridge WHS [emon ch13]\", 0) AS refrigerator,\n    0 AS clothes_washer,\n    COALESCE(\"DRYER WHS (1-CT) [emon ch9]\", 0) + COALESCE(\"Dryer WHS (2-CTs) [xpod chA-9,10]\", 0) AS clothes_dryer,\n    COALESCE(\"DISH WASHER WHS [emon ch11]\", 0) AS dishwasher,\n    COALESCE(\"RANGE WHS (1-CT) [emon ch10]\", 0) AS cooking_range,\n    COALESCE(\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\", 0) AS pool_spa_pumps,\n    0 AS interior_lighting,\n    0 AS exterior_lighting,\n    0 AS lighting,\n    0 AS plug,\n    0 AS pool_spa_heater\nFROM Source11_3;",
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_1",
        "Source Data Schema": "eiaid, time, raw_count, scaled_unit_count, net_site_electricity_kwh, electricity_heating_kwh, electricity_central_system_heating_kwh, electricity_cooling_kwh electricity_central_system_cooling_kwh electricity_interior_lighting_kwh ,  electricity_exterior_lighting_kwh, electricity_fans_heating_kwh, electricity_fans_cooling_kwh, electricity_pumps_heating_kwh, electricity_central_system_pumps_heating_kwh, electricity_pumps_cooling_kwh, electricity_central_system_pumps_cooling_kwh, electricity_water_systems_kwh, electricity_refrigerator_kwh, electricity_clothes_washer_kwh, electricity_clothes_dryer_kwh, electricity_cooking_range_kwh, electricity_dishwasher_kwh, electricity_plug_loads_kwh, electricity_house_fan_kwh, electricity_range_fan_kwh, electricity_bath_fan_kwh, electricity_ceiling_fan_kwh, electricity_pool_heater_kwh, electricity_pool_pump_kwh, electricity_hot_tub_heater_kwh, electricity_hot_tub_pump_kwh",
        "Source Data Description": NaN,
        "Schema Change Hints": "HVAC should map to sum of 'electricity_heating_kwh', 'Electricity_central_system_heating_kwh', 'electricity_cooling_kwh', 'Electricity_central_system_cooling_kwh', 'electricity_fans_heating_kwh', 'electricity_fans_cooling_kwh', 'electricity_pumps_heating_kwh', 'electricity_central_system_pumps_heating_kwh', 'electricity_pumps_cooling_kwh', 'Electricity_central_system_pumps_cooling_kwh', 'electricity_house_fan_kwh', 'electricity_range_fan_kwh', 'electricity_bath_fan_kwh'\u201d. Water_heating should map to \u2018electricity_water_systems_kwh\u2019. Pool_spa_pumps should be mapped to electricity_pool_pump_kwh', 'electricity_hot_tub_pump_kwh. Pool_spa_heaters should be mapped to electricity_pool_heater_kwh', 'electricity_hot_tub_heater_kwh. Lighting should map to 'electricity_interior_lighting_kwh', and 'electricity_exterior_lighting_kwh' only. Total should be mapped to net_site_electricity_kwh.",
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_2",
        "Source Data Schema": " \"Water heater\",   \"Refrigerator\",  \"Clothes washer\",  \"Clothes dryer\",  \"Dishwasher\",  \"Cooking appliances\",  \"Pool pump\",  \"Pool heater/pump\",  \"Ceiling Fans (FSEC)\",  \"Other MELs\"\n",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_3",
        "Source Data Schema": "local_15min        air1_sum        air1_count        air2_sum        air2_count        air3_sum        air3_count        airwindowunit1_sum        airwindowunit1_count        aquarium1_sum        aquarium1_count        bathroom1_sum        bathroom1_count        bathroom2_sum        bathroom2_count        bedroom1_sum        bedroom1_count        bedroom2_sum        bedroom2_count        bedroom3_sum        bedroom3_count        bedroom4_sum        bedroom4_count        bedroom5_sum        bedroom5_count        battery1_sum        battery1_count        car1_sum        car1_count        car2_sum        car2_count        circpump1_sum        circpump1_count        clotheswasher1_sum        clotheswasher1_count        clotheswasher_dryg1_sum        clotheswasher_dryg1_count        diningroom1_sum        diningroom1_count        diningroom2_sum        diningroom2_count        dishwasher1_sum        dishwasher1_count        disposal1_sum        disposal1_count        drye1_sum        drye1_count        dryg1_sum        dryg1_count        freezer1_sum        freezer1_count        furnace1_sum        furnace1_count        furnace2_sum        furnace2_count        garage1_sum        garage1_count        garage2_sum        garage2_count        grid_sum        grid_count        heater1_sum        heater1_count        heater2_sum        heater2_count        heater3_sum        heater3_count        housefan1_sum        housefan1_count        icemaker1_sum        icemaker1_count        jacuzzi1_sum        jacuzzi1_count        kitchen1_sum        kitchen1_count        kitchen2_sum        kitchen2_count        kitchenapp1_sum        kitchenapp1_count        kitchenapp2_sum        kitchenapp2_count        lights_plugs1_sum        lights_plugs1_count        lights_plugs2_sum        lights_plugs2_count        lights_plugs3_sum        lights_plugs3_count        lights_plugs4_sum        lights_plugs4_count        lights_plugs5_sum        lights_plugs5_count        lights_plugs6_sum        lights_plugs6_count        livingroom1_sum        livingroom1_count        livingroom2_sum        livingroom2_count        microwave1_sum        microwave1_count        office1_sum        office1_count        outsidelights_plugs1_sum        outsidelights_plugs1_count        outsidelights_plugs2_sum        outsidelights_plugs2_count        oven1_sum        oven1_count        oven2_sum        oven2_count        pool1_sum        pool1_count        pool2_sum        pool2_count        poollight1_sum        poollight1_count        poolpump1_sum        poolpump1_count        pump1_sum        pump1_count        range1_sum        range1_count        refrigerator1_sum        refrigerator1_count        refrigerator2_sum        refrigerator2_count        security1_sum        security1_count        sewerpump1_sum        sewerpump1_count        shed1_sum        shed1_count        solar_sum        solar_count        solar2_sum        solar2_count        sprinkler1_sum        sprinkler1_count        sumppump1_sum        sumppump1_count        utilityroom1_sum        utilityroom1_count        venthood1_sum        venthood1_count        waterheater1_sum        waterheater1_count        waterheater2_sum        waterheater2_count        wellpump1_sum        wellpump1_count        winecooler1_sum        winecooler1_count",
        "Source Data Description": "HVAC is ['airwindowunit1', 'furnace1', 'furnace2', 'heater1', 'housefan1']\nwater_heating is ['waterheater1', 'waterheater2'] interior_lighting is ['lights_plugs1','lights_plugs2','lights_plugs3','lights_plugs4','lights_plugs5','lights_plugs6']\nexterior_lighting is ['outsidelights_plugs1','outsidelights_plugs2','poollight1']\nlighting is interior_lighting + exterior_lighting. miscellaneous is ['aquarium1','disposal1','kitchenapp1','kitchenapp2','microwave1','security1','shed1','sprinkler1','pump1','icemaker1']\n\n",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_4",
        "Source Data Schema": "site,timestamp,\"TOTAL BLDG WHS [emon ch1,2]\",\"AC COMPRESSOR WHS [emon ch3,4]\",\"AIR HANDLER WHS [emon ch5,6]\",\"WATER HEATER WHS [emon ch7,8]\",DRYER WHS (1-CT) [emon ch9],RANGE WHS (1-CT) [emon ch10],DISH WASHER WHS [emon ch11],Primary Fridge WHS [emon ch12],2nd Fridge WHS [emon ch13],SPARE1 WHS (1-CT) [emon ch14],SPARE2 WHS (1-CT) [xpod chA-1],SPARE3 WHS (1-CT) [xpod chA-2],\"POOL PUMP WHS (2-CTs) [xpod chA-3,4]\",\"SPARE4 WHS (2-CTs) [xpod chA-5,6]\",\"Minisplit WHS (2-CTs) [xpod chA-7,8]\",\"Dryer WHS (2-CTs) [xpod chA-9,10]\",Calculated Unmeasured loads (Whr),Calculated Energy Use (Whr),\"Future use- WHS (2-CTs)[xpod chB-3,4]\",\"Future use- WHS (2-CTs)[xpod chB-5,6]\",eMonitor Temp (deg. F),Wattsup Cumulative Ent.Ctr (WHS),Wattsup Energy Ent.Ctr (WHS),Wattsup Cumulative Washer (WHS),Wattsup Energy Washer (WHS),LaCrosse Device Temp (deg. F),PointSix Temp (deg. F),PointSix Humidity (%),HOBO LOGGER TEMP (deg. F),HOBO LOGGER RH (%)\n",
        "Source Data Description": "timestamp is for eavery hour time. ",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_5",
        "Source Data Schema": "End Use Category,\tEnd Use,\tTime Period,\tDay Type,\tHour Ending,\tNumber of Homes in Bin With This End Use Metered,\tAverage Demand Per Home With This End Use [kW]\n",
        "Source Data Description": "season, annual",
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "HVAC\tFurnace Fan\tJanuary\tWeekday\t1\t80\t0.13\nHVAC\tFurnace Fan\tJanuary\tWeekday\t2\t80\t0.14\nHVAC\tFurnace Fan\tJanuary\tWeekday\t3\t80\t0.15\nWater Heating\tWater Heater - Heat Pump\tMarch\tWeekend\t1\t5\t0.11\nWater Heating\tWater Heater - Heat Pump\tMarch\tWeekend\t2\t5\t0.052",
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Target12",
        "Target Data Schema": "month hour HVAC water_heating refrigerator clothes_washer clothes_dryer dishwasher cooking_range pool_spa_pumps interior_lighting exterior_lighting lighting plug pool_spa_heater",
        "Target Data Description": "month is an integer number from 1 to 12. Hour is an integer number from 0 to 24.  Most of attributes except datetime are of float types.",
        "Source Data Name": "Source12_6",
        "Source Data Schema": "SEASON        WEEKDAY        HOUR        AC        Dryer        Dwash        Serv_A        Serv_B        Subp        Subp_2        CBox        Comp        Cwash        Freezer        Refrig        TV        Service        BR        BR_master_2        Bath_2        Hall        Office        BR_ontime        BR_master_ontime        BR_master_2_ontime        BR_master_3_ontime        Bath_ontime        Bath_2_ontime        Bath_master_ontime        Dining_ontime        Dining_2_ontime        Garage_ontime        Hall_ontime        Kitchen_ontime        Living_2_ontime        Office_ontime        ODT        IDT        WST        DHW_g_Therms        Furn_g_s1_Therms        DHW_1        ER        Oven        AC_windo        ER_2        TV_2        TV_3        Bath        Dining        OtherRoom        BR_2_ontime        BR_3_ontime        Entryway_ontime        Family_ontime        Living_ontime        OtherRoom_ontime        DHP        Spa        Well        Comp_2        CPU        CPU_2        DVD        DVD_2        Refrig_2        BR_master_3        Bath_master        Bath_master_2        Office_2        Bath_master_2_ontime        Kitchen_2_ontime        Laundry_ontime        Office_2_ontime        HP_VLT        HP_in        HP_out        CBox_and_DVR        CBox_and_DVR_2        Comp_and_acc        Comp_and_acc_2        Game_cons        Game_cons_2        Game_cons_3        BR_2        BR_3        BR_master        Entryway        Exterior_2        Living_2        Living_3        Exterior_2_ontime        Living_3_ontime        Comp_acc        Laundry        Exterior_ontime        Furn        Microw        Family_2_ontime        Family_3_ontime        Family_4_ontime        Septic        TV_acc        TV_and_acc        BR_4_ontime        BR_5_ontime        Bath_3_ontime        Bath_4_ontime        Den_ontime        Den_2_ontime        Stereo        Kitchen        Kitchen_2        Living        Kitchen_3_ontime        Other        Family_2        Family_3        Family_5        Family_6        Living_4        Living_5        Family_5_ontime        Family_6_ontime        Living_4_ontime        Living_5_ontime        Cwash_2        Monitor        Basement        Basement_2        Basement_3        Basement_4        Den        Den_3        Dining_2        Kitchen_3        OtherRoom_2        OtherRoom_3        Basement_ontime        Basement_2_ontime        Basement_3_ontime        Basement_4_ontime        Den_3_ontime        OtherRoom_2_ontime        OtherRoom_3_ontime        OtherRoom_4_ontime        Furn_AH        BR_4        BR_5        BR_6        BR_7        Family        Laundry_2        Laundry_3        BR_6_ontime        BR_7_ontime        Laundry_2_ontime        Laundry_3_ontime        Comp_acc_2        Hall_3        Hall_2_ontime        Hall_3_ontime        Hall_4_ontime        HP_in_2        Serv_A_2        Serv_B_2        Comp_3        Closet        Closet_ontime        ER_3        Hall_2        Freezer_2        Entryway_2        Garage        Kitchen_4        Entryway_2_ontime        Garage_2_ontime        Kitchen_4_ontime        Closet_2        Closet_2_ontime        Boilr_g_e        Boilr_g_Therms        Other_2        DHW_HP        GSHP_in        GSHP_out        Sump        Bath_3        Serv_C        BR_master_4        BR_master_4_ontime        Bath_4        OtherRoom_5        OtherRoom_5_ontime        Office_3_ontime        CBox_2        ER_4        ER_5        DVR        Exterior        PTAC        OtherRoom_4        Closet_3        Closet_3_ontime        Subp_A        Subp_B        HP_out_2        DHW_2        Stereo_acc        Other_3        Comp_acc_3        Den_2        DVR_2        Office_4        Office_4_ontime        Family_4        Garage_2        Furn_g_s2_Therms        Hall_4        Oven_2        Exterior_4        Exterior_4_ontime        Dryer_g_e        Kitchen_6        Kitchen_6_ontime        Comp_acc_4        Bath_5        Bath_master_4        Bath_5_ontime        Bath_master_3_ontime        Bath_master_4_ontime        Bath_master_3        PTHP        CBox_3        TV_acc_2        Office_3        CPU_3        CPU_4\n",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": "shoulder\t0\t0\t30.37895609\t132.584\t65.43054692\t2814.193767\t2478.553767\t77.3\t16.08\t16.15906657\t34.86883023\t11.49825352\t102.9762368\t300.812889\t86.59768781\t5417.417535\t12.02984806\t2.635539855\t2.172173057\t21.27044256\t7.600618611\t133.1462222\t167.4791\t77.26426925\t100.9861111\t89.74529433\t65.51043612\t136.0411778\t155.7856583\t10.56418333\t33.53028774\t400.5511608\t212.2992802\t222.0159783\t96.83972222\t967360.9743\t353011.6796\t967794.5\t16.42969233\t76.56274408\t491.088\t367.8498703\t17.036\t0.401171167\t47.63854322\t17.61217823\t7.293992173\t4.2117525\t4.304599999\t2.863573879\t53.80459722\t48.34805556\t47.98744106\t191.294825\t244.3650305\t16.98070001\t32.44\t147.812\t39.982\t12.3714678\t42.68595552\t4.507207584\t2.725328335\t0.081676417\t69.1132045\t1.625994167\t15.86482522\t0.636624166\t0.362055194\t86.2199361\t158.8283\t76.73543119\t19.09314432\t314677.075\t100.74\t142.372\t15.85460663\t2.25023125\t3.099443138\t5.618655801\t16.99966984\t4.903558583\t0.47881975\t4.185495555\t1.980420833\t3.342294162\t4.989313471\t0.1\t6.658309167\t3.106579596\t69.10472222\t106.5988832\t30.36749709\t5.409267275\t526.4349339\t60.69\t0.109031915\t31.35045958\t84.95011568\t4.734954834\t0.049995422\t16.51689685\t3.120994167\t20.30361111\t4.217383334\t5.188041211\t16.43583333\t49.54527778\t89.30166667\t4.029724581\t9.350543384\t6.107933167\t11.03654835\t33.94932223\t195.4777601\t2.035447333\t2.484173266\t0.611\t1.660111111\t1.025\t0.18065\t47\t41.50277778\t41\t1.003611111\t0.005231667\t8.704462082\t2.468899444\t0.058199999\t0\t0\t3.711845278\t0.004111111\t0.479048611\t1.032905334\t0.236442977\t0.453882778\t11.21416667\t0.323611107\t0\t0\t8.665555556\t14.18836389\t2.634166666\t1\t0.21\t0.115714444\t0.411916539\t0.003561778\t0.06646\t21.64357194\t0.043685833\t0\t0.099722222\t1.912777778\t2.364444444\t0.788780556\t4.764049033\t2.051743333\t35.20026394\t26.45611111\t0\t38.742\t30.022\t25.718\t4.541196763\t0.965830778\t21.66111111\t9.557855167\t1.584615213\t11.50044267\t0.352263333\t4.815079722\t0.676346806\t3.894166667\t2\t13.57888889\t0.249526667\t2.011944444\t0.78\t7.056129204\t3.039014833\t28.6\t0.06\t1.6\t0.010112083\t0.143511111\t61.26\t0.274676389\t4.561388889\t0.489928633\t0\t0\t4.607222222\t0.386176917\t9.36795825\t6.966909683\t18.92946677\t2.55412525\t5.85\t0.55\t0\t0\t0\t0\t9.08\t6.276\t0.5773175\t13.34891108\t1.677770633\t0.703199445\t0.387644529\t0\t1.173611111\t0\t0\t2.090565494\t0\t0\t4.8\t48\t1.624359\t0.023333333\t0.311111111\t0.195687584\t0.266986667\t0.048033333\t3.446388889\t2.301111111\t0.545833333\t0.086958333\t0.01\t1.439171084\t0.195004583\t0\t0\t0\nshoulder\t0\t1\t34.05499517\t60.805\t55.69581967\t3121.82449\t2699.084692\t93.585\t20.565\t20.1056682\t39.50287908\t10.12801804\t125.9919447\t359.114206\t67.67418518\t5983.791182\t11.22211111\t1.17775\t1.565672223\t20.60157246\t2.838115\t107.7251305\t63.48187223\t46.07902778\t66.82570554\t89.82222486\t64.60083611\t74.69016944\t123.8464014\t1.205588888\t31.86169529\t415.6397278\t155.3871837\t198.4241793\t46.72388889\t1181734.577\t639031.0674\t1184081.083\t9.675830979\t104.1755376\t407.4391724\t455.9009445\t10.243\t0.461015584\t49.9939765\t16.59708887\t5.290649249\t3.308873056\t1.722148888\t1.676681111\t33.97164167\t28.30511944\t32.69466472\t182.3724278\t170.3409556\t8.959722222\t42.19\t197.5968667\t70.854\t15.31027537\t50.10585861\t5.465930334\t2.618450208\t0.092444584\t82.54420163\t0.544342222\t9.230403588\t0.416243611\t0.059535556\t85.16672501\t137.8726944\t73.44122577\t8.449444445\t392341.7283\t150.405\t191.9437\t19.23325014\t2.791038292\t3.715953589\t5.707112789\t18.07232635\t4.644307876\t0.395481833\t3.151676389\t0.8420805\t1.067921061\t3.428740902\t0.125\t5.0944625\t2.89858981\t86.08888889\t81.22718054\t36.33811655\t5.794185556\t587.133286\t58.52\t0.135990024\t28.50330353\t88.05054474\t2.235809326\t0.009998322\t20.34041669\t2.691085666\t6.473888889\t2.753727778\t3.276983619\t6.075833333\t14.92888889\t90.79972222\t4.840683418\t5.355642401\t4.223081666\t8.301435789\t26.0075\t195.4744196\t2.167128889\t2.7472294\t0.7605\t2\t1.28125\t0.07225\t58.5\t50\t51.25\t0.401388889\t0.0065545\t9.20309515\t2.635818611\t0\t0\t0\t1.249091667\t0.002855556\t0.005497222\t0.791783334\t0.796998333\t0.451749167\t11.69777778\t0.05\t0\t0\t3.766388889\t15.29666667\t4.194444444\t1.254166667\t0.205\t0.065\t0.256047072\t0.02873\t0.03879\t34.01862767\t0\t0\t1.171666667\t1.110833333\t0.185555556\t1.512584734\t5.932588067\t1.687874444\t20.76611111\t19.31\t0\t67.391\t40.637\t34.835\t5.735475838\t1.029512222\t20.79194444\t13.51976167\t1.107483611\t13.2675155\t0.333301667\t5.056712222\t0.251770417\t3.583888889\t2.5\t7.578888889\t0.034183333\t0.261944445\t1.215\t11.41185041\t3.167021833\t19.27\t0.17\t2.96\t0.02653975\t0.020081667\t77.39\t0.063488889\t0.997777778\t0.115723729\t0\t0\t3.2925\t0.48223025\t11.81314025\t8.944632467\t23.52233002\t3.057790833\t7.565\t0.689791667\t0\t0\t0\t0\t12.84\t5.759\t0.721514417\t17.26909458\t1.954408\t0.602521111\t0.475682497\t0\t0\t0.086625\t0\t2.577046227\t0\t0\t6\t60\t0.934245417\t0\t0\t0.2046555\t0.18286\t0\t2.505\t0.826944444\t0\t0.117041667\t0.7125\t1.79260525\t0.243607417\t0\t0\t0\nshoulder\t0\t2\t19.85030754\t14.606\t23.11165367\t1745.4959\t1502.0439\t55.09\t12.1\t11.93184963\t21.38302609\t4.899288546\t71.06101523\t209.251508\t28.76064927\t3335.5238\t5.978243333\t0.366803472\t0.903081945\t10.41586312\t0.552242778\t57.05645001\t16.79402778\t15.81795833\t29.89152778\t51.02705538\t37.13107223\t33.02257779\t56.3850639\t0.421927777\t17.30215073\t224.6225111\t72.60745107\t102.9877264\t15.92222222\t692105.149\t53325.23338\t692021.0833\t3.282028444\t69.45107367\t187.41\t277.695093\t5.108\t0.290355916\t36.24893211\t8.734984915\t2.502089751\t1.731785139\t0.603131111\t0.213038889\t14.24709166\t11.38833333\t16.16529226\t81.51666666\t76.62877777\t2.306388889\t25.37\t107.422\t44.44\t8.853164684\t28.98871091\t3.26761575\t1.468520918\t0.021873083\t48.06809376\t0.2581275\t4.347476436\t0.234138889\t0.000253333\t46.55819444\t69.72552227\t43.12209427\t2.753333333\t233910.89\t89.786\t129.12\t11.14935207\t1.665452499\t2.102193356\t3.149040819\t10.17955289\t2.031292083\t0.18871375\t1.376993\t0.4127975\t0.324455556\t1.498245833\t0.075\t2.411044167\t1.4682237\t51.06361111\t35.27161666\t20.60275401\t3.396232222\t340.7555988\t32.26\t0.079683781\t16.5\t38.62801075\t0.097763062\t0.079990387\t11.69102426\t1.188046999\t2.816111111\t0.404444445\t0.724004984\t1.585833333\t1.606111111\t46.16722222\t2.846521834\t2.013319395\t1.842606446\t3.269363789\t11.01313334\t85.41730675\t1.295533333\t1.283676383\t0.4485\t1.2\t0.76875\t0\t34.5\t30\t30.75\t0\t0.185863917\t4.922182085\t1.373510556\t0\t0\t0\t0.257512778\t0\t0\t0.243202667\t0.174941389\t0.18175\t5.985555556\t0.072777778\t0\t0\t2.268888889\t6.7525\t2.180277778\t0.518055556\t0.18\t0.056853333\t0.0614\t0.035778889\t0\t18.59989483\t0\t0\t1.509444444\t0\t0.132777778\t1.086612499\t3.395939918\t0.682978333\t6.883055556\t6.969166667\t0\t37.794\t20.23\t16.894\t3.243457675\t0.606432222\t11.53444444\t8.418314167\t0.404581389\t7.564505584\t0.139990833\t2.720402083\t0.078475\t1.505277778\t1.5\t2.263055556\t0.098\t0.503888889\t0.65\t5.998513294\t2.1173695\t5.8\t0.07\t1.34\t0.00661\t0.002604167\t44.92\t0.013245833\t0.240833333\t0\t0\t0\t0.491666667\t0.289964499\t6.73224465\t5.224182267\t13.93832719\t1.8086225\t7.06\t0.284930556\t0\t0\t0\t0\t7.59\t3.544\t0.435125834\t10.51183725\t1.131685701\t0.354\t0.263209582\t0\t0\t0\t0\t1.295141977\t0\t0\t3.6\t36\t0.521879333\t0\t0\t0.117464166\t0.00592\t0\t0.164444444\t0.108055556\t0\t0.016208333\t0.885\t1.0719895\t0.1462885\t0\t0\t0\nshoulder\t0\t3\t23.58064315\t17.88\t25.97295208\t2417.8839\t2053.4919\t77.2\t19.15\t16.43734327\t28.6544346\t5.458020322\t99.15747206\t281.8356045\t32.1867505\t4603.0198\t7.849408056\t0.367131667\t1.583752776\t13.40631982\t0.554420278\t70.92224444\t17.55183888\t12.56888889\t33.51125\t71.38696623\t55.15239722\t37.89517222\t55.83167779\t1.000277778\t22.31276608\t296.476825\t86.25334287\t132.3031361\t14.68416667\t920536.3957\t346104.7713\t923921\t4.29788168\t113.7210022\t244.174\t432.1076148\t7.55\t0.347696333\t69.99158083\t10.22853957\t3.362796832\t2.729605556\t1.264042499\t0.200896667\t19.19999167\t18.01\t20.25018024\t83.70672499\t95.38284722\t2.700833333\t35.72\t135.792\t20.858\t12.64876017\t39.26109067\t4.318392334\t1.868628916\t0.029153583\t65.44877231\t0.348354722\t6.144769398\t0.334010278\t0.000200556\t62.85972223\t94.28022222\t60.10803509\t1.062777778\t319185.8617\t156.966\t206.162\t15.10537863\t2.253317584\t2.860872507\t4.614509463\t13.57558625\t2.652977167\t0.242867083\t1.977974445\t0.849407778\t0.4148015\t2.189191666\t0.1\t3.044590972\t1.872973333\t68.57006111\t39.86776944\t28.1611814\t4.8017075\t457.095674\t50.01\t0.11134547\t22.40441895\t44.44448948\t0\t0.089988708\t15.94532363\t1.417583082\t3.070833333\t0\t0.763278008\t2.074722222\t1.023055556\t55.17944444\t3.945478418\t2.251730633\t2.318698056\t3.426860175\t14.29972222\t84.16167083\t1.735004444\t1.669485489\t0.624\t1.6\t1.025\t0\t47\t40\t41\t0\t0.005816283\t6.597278249\t2.075943056\t0\t0\t0\t0.1509975\t0\t2.47E-05\t0.322535\t0.128995833\t0.24735\t8.473333333\t0.001111111\t0\t0\t3.013055556\t6.536388889\t1.287777778\t0\t0.27\t0.037136667\t0\t0.048533333\t0\t21.50186278\t0.000281111\t0\t2\t0\t0.027222222\t0.982052778\t4.576617585\t0.690845556\t8.337777778\t7.185\t0\t65.886\t31.896\t28.318\t4.704939008\t0.818893611\t15.33166667\t12.77582867\t0.466230556\t10.05601825\t0.191993333\t3.437714722\t0.185374583\t2.064444444\t2\t3.766944444\t0.006333333\t0.052777778\t0.87\t8.090972247\t6.478010583\t1.6\t1.06\t9.26\t0.068559667\t0.018809722\t62.13\t0.044580556\t0.810555556\t0.00971365\t0\t0\t0\t0.386557167\t9.325211717\t7.292309\t19.02369824\t2.469023333\t8.57\t0\t0\t0\t0\t0\t9.45\t8.398\t0.579741584\t14.81675125\t1.51051565\t0.5097\t0.428241968\t0\t0\t0\t0\t2.608914293\t0\t0\t4.878861111\t48.78861111\t0.198760917\t0\t0\t0.166815667\t0.008643333\t0\t0.2375\t1.458333333\t0\t0.21875\t2.415\t1.436763001\t0.195048416\t0\t0\t0\nshoulder\t0\t4\t31.51621115\t17.204\t30.09655525\t3205.977449\t2765.068181\t94.12\t21.25\t20.16395723\t36.17320105\t7.024717329\t120.5507066\t335.1230746\t33.10867116\t6137.375629\t9.010104722\t0.4196225\t1.861764445\t14.92854105\t0.32639\t86.64215278\t26.09558611\t15.53833333\t31.62194444\t89.91552663\t66.71815834\t42.6045\t51.03245555\t0.606127777\t28.19372225\t362.8253917\t103.3308007\t171.6855907\t11.82984167\t1133620.631\t633607.9818\t1138509.569\t4.32144971\t184.778243\t288.842\t560.0721497\t7.506\t0.462091334\t81.67776557\t9.391884767\t4.251943999\t2.992410556\t1.248354861\t0.394366111\t22.58361111\t14.19027778\t25.07230997\t79.76948889\t116.8676972\t5.965833333\t45.3\t192.438\t10.084\t14.72750388\t48.12269641\t5.282864419\t2.173604499\t0.0380955\t76.885067\t0.295900556\t7.4657571\t0.506046945\t0.021342778\t83.67304998\t126.0294222\t65.72166276\t0.430833333\t416097.1683\t254.774\t378.06\t18.35715246\t2.781815583\t3.541474342\t5.514664889\t15.96608991\t3.165555333\t0.293253834\t2.2533525\t0.713690556\t0.704898889\t2.358699222\t0.125\t3.917822083\t2.111788712\t85.38833333\t45.82922503\t34.59944733\t5.623795167\t571.2510178\t259.79\t0.15977323\t29.5124836\t55.04236698\t0\t0.049991608\t19.52084373\t1.666357501\t1.403611111\t0.054444444\t0.651920319\t2.540833333\t0.749444444\t61.54416667\t4.75327913\t2.932951866\t2.8310113\t3.680795666\t19.28311111\t102.023749\t2.225313333\t2.117773056\t0.76375\t2\t1.28125\t0\t58.75\t50\t51.25\t0\t0.1197092\t7.817042499\t1.364576111\t0\t0\t0\t0.155004167\t0\t0.060775\t0.438039\t0.151935\t0.309133333\t7.682777778\t0.434722222\t0\t0\t3.75\t7.0975\t1.313888889\t0\t0.27\t0.002391111\t0.00724\t0.070402222\t0\t11.06242\t0.002657778\t0\t2.841111111\t0\t0.115555556\t0.241497217\t5.561882267\t0.861828333\t10.13105832\t9.406666667\t0\t91.772\t40.45\t36.84\t5.778257667\t1.080203889\t19.87861111\t21.48828708\t0.589778624\t12.99109233\t0.236168333\t4.594274445\t0.16426\t2.539444444\t2.5\t4.181111111\t0.004666667\t0.046111111\t1.46\t13.00422297\t5.04967375\t1.370068493\t6.37\t48.65506849\t0.008454917\t0.008770833\t77.75\t0.054251389\t0.986388889\t0\t0\t0\t0\t0.483527251\t11.58598858\t9.3179995\t23.43105069\t3.0743175\t11.25\t0\t0\t0\t0\t0\t13.54\t10.752\t0.725194667\t19.19245742\t1.868376591\t0.59\t0.487756014\t0\t0\t0\t0\t4.182142027\t0\t0\t6.119083333\t61.19083333\t0.01340225\t0\t0\t0.208844334\t0.00954\t0\t0.265\t1.25\t0\t0.1875\t21.625\t1.787621833\t0.243661249\t0\t0\t0",
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2020-04-02T00:00:00",
        "Source Data Schema": "FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2021-02-15T00:00:00",
        "Source Data Schema": "FIPS,Admin2,Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,Combined_Key,Incident_Rate,Case_Fatality_Ratio",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2021-01-01T00:00:00",
        "Source Data Schema": "Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,FIPS,Incident_Rate,Total_Test_Results,People_Hospitalized,Case_Fatality_Ratio,UID,ISO3,Testing_Rate,Hospitalization_Rate,Date,People_Tested,Mortality_Rate",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "COVID dataset",
        "Target Data Schema": "https://github.com/CSSEGISandData/COVID-19/blob/master/csse_covid_19_data/csse_covid_19_daily_reports/02-15-2020.csv?plain=1",
        "Target Data Description": "Province/State,Country/Region,Last Update,Confirmed,Deaths,Recovered",
        "Source Data Name": "2023-01-01T00:00:00",
        "Source Data Schema": "Province_State,Country_Region,Last_Update,Lat,Long_,Confirmed,Deaths,Recovered,Active,FIPS,Incident_Rate,Total_Test_Results,People_Hospitalized,Case_Fatality_Ratio,UID,ISO3,Testing_Rate,Hospitalization_Rate",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Machine Log dataset",
        "Target Data Schema": "Parsed Data",
        "Target Data Description": "(time        Tasks_total        Tasks_running        Tasks_sleeping        Tasks_stopped        Tasks_zombie        Mem_total        Mem_used        Mem_free        Mem_bufferes        Swap_total        Swap_used        Swap_free        Swap_cached        cpu_user        cpu_nice        cpu_sys        cpu_idle        cpu_iow        cpu_irq        cpu_sirq        cpu_host\n)",
        "Source Data Name": "mac os ",
        "Source Data Schema": "(Processes_total        Processes_running        Processes_sleeping        Processes_threads        time        Load_Avg        CPU_usage_user        CPU_usage_sys        CPU_usage_idle        SharedLibs_resident        SharedLibs_data        SharedLibs_linkedit        MemRegions_total        MemRegions_resident        MemRegions_private        MemRegions_shared        PhysMem_used        PhysMem_wired        PhysMem_unused        VM_vsize        VM_framework_vsize        VM_swapins        VM_swapouts        Networks_packets_in        Networks_packets_out        Disks_read        Disks_written)",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    },
    {
        "Target Data Name": "Machine Log dataset",
        "Target Data Schema": "Parsed Data",
        "Target Data Description": "(time        Tasks_total        Tasks_running        Tasks_sleeping        Tasks_stopped        Tasks_zombie        Mem_total        Mem_used        Mem_free        Mem_bufferes        Swap_total        Swap_used        Swap_free        Swap_cached        cpu_user        cpu_nice        cpu_sys        cpu_idle        cpu_iow        cpu_irq        cpu_sirq        cpu_host\n)",
        "Source Data Name": "linux",
        "Source Data Schema": "(time\tusers\tload_average\tTasks_total\tTasks_running\tTasks_sleeping\tTasks_stopped\tTasks_zombie\tCpu_us\tCpu_sy\tCpu_ni\tCpu_id\tCpu_wa\tCpu_hi\tCpu_si\tCpu_st\tMem_MiB_total\tMem_MiB_free\tMem_MiB_used\tMem_MiB_buff\tSwap_MiB_total\tSwap_MiB_free\tSwap_MiB_used\tSwap_MiB_avail)",
        "Source Data Description": NaN,
        "Schema Change Hints": NaN,
        "5 Samples of Source Data": NaN,
        "Ground Truth SQL": NaN,
        "Prompt-3 Results": NaN,
        "Prompt-2 Results": NaN,
        "Prompt-1 Results": NaN,
        "Complexity": NaN,
        "Remark or Note": NaN
    }
]